<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://kaiden-dough.github.io/fastpages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kaiden-dough.github.io/fastpages/" rel="alternate" type="text/html" /><updated>2022-10-21T13:57:41-05:00</updated><id>https://kaiden-dough.github.io/fastpages/feed.xml</id><title type="html">Kaiden Do FastPages</title><subtitle>Kaiden's FastPages site!</subtitle><entry><title type="html">Fetch of Backend True/False Questions</title><link href="https://kaiden-dough.github.io/fastpages/data/trfa" rel="alternate" type="text/html" title="Fetch of Backend True/False Questions" /><published>2022-10-20T00:00:00-05:00</published><updated>2022-10-20T00:00:00-05:00</updated><id>https://kaiden-dough.github.io/fastpages/data/trfa</id><author><name></name></author><category term="week9" /><summary type="html"><![CDATA[JavaScript Table Airline API Jokes API True/Flase API]]></summary></entry><entry><title type="html">The Internet (Unit 4.1)</title><link href="https://kaiden-dough.github.io/fastpages/markdown/week8/2022/10/11/theinternet.html" rel="alternate" type="text/html" title="The Internet (Unit 4.1)" /><published>2022-10-11T00:00:00-05:00</published><updated>2022-10-11T00:00:00-05:00</updated><id>https://kaiden-dough.github.io/fastpages/markdown/week8/2022/10/11/theinternet</id><author><name>Kaiden Do</name></author><category term="markdown" /><category term="week8" /><summary type="html"><![CDATA[The Internet Video #1 Notes Computers and their users wanted to talk to each other They could do this through the internet, computer network Packet Switching: message or file is broken up into packers and sent in any order, then they are reassembled by the recipient’s device Path and Routing: how the sender gets to the receiver and the process of finding the path Bandwidth: max amount of data that can be sent in fixed amount of time on computer network (bits per second) Takeaway: how computer devices work together on a network]]></summary></entry><entry><title type="html">Airline API</title><link href="https://kaiden-dough.github.io/fastpages/week7/2022/10/09/api.html" rel="alternate" type="text/html" title="Airline API" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://kaiden-dough.github.io/fastpages/week7/2022/10/09/api</id><author><name>Kaiden Do</name></author><category term="week7" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Group Plan</title><link href="https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/09/groupplan.html" rel="alternate" type="text/html" title="Group Plan" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/09/groupplan</id><author><name>Kaiden Do</name></author><category term="markdown" /><category term="week7" /><summary type="html"><![CDATA[Lawnmowers Game Arcade Project Purpose and Function: We would like to create a website that consists of mini games like retro games and casino games. Different Components: We would like to have Retro Games: Pong and Snake + Casino Games: Blackjack and Slot Machine. Also we will have a currency. Frontend Stuff: We will use HTML and CSS to create a homepage that links to the separate games. We will have a grassy, lawnmower theme and it would have sound effects related to lawn mowing. The Pong game will use grass patches as the paddles and a small lawnmower icon as the ball. In the Snake game we will replace the snake with a lawnmower and it gets longer when it eats grass clumps and as it gets longer the grass holder extends. In the Blackjack game we will have a blackjack table that shows buttons to pick hit or stand and bet. The cards and chips also would move around the screen. In the Slot Machine game there would be a slot machine with a button that would start the spinning of the machine and then it would display the winnings and result. The Currency would be a leaf icon. Backend Stuff: For our games, we will use a library called pygame and turtle. For our graphics, we will upload photos and use photoshop and our artistic skills to make different icons. In the Pong game we will follow the mouse cursor and the ball will bounce off the paddles and slowly increase speed. In the Snake game we will take arrow input to control the lawnmower. And the program will detect if the Snake hits itself or the wall. (Algorithm Implementation can be used here because the sequencing can occur while the game is starting up and prompting the user to start, the selection can happen when it detects if the user clicks a key in order to move, and the iteration can repeat the detection of the keys while the game is playing) In Blackjack we will let the user hit or stand and bet their currency. Then after they stand the program would control the dealer to play its turn. Then if the player did not bust, the points of the player would be compared to the dealer to decide the winner. (Procedural Abstraction can be used here to set a function that would check if the player won or busted) For the Slot Machine every spin will be random and if they have a 3 in a row and our program would check if they have three in a row. If it comes out true, then they would win whatever prize. (Data Abstraction can be implemented here to set the different images the slot machine could display and we can randomize it to display the slots) The Currency would be global throughout the website and it would let them receive a reward and let them play the games. (Managing Complexity can be implemented here to track currency uses and amounts) Testing: While programming, we will be constantly testing our code to make sure it works and it functions are we desire it to.]]></summary></entry><entry><title type="html">Identifying and Correcting Errors (Unit 1.4)</title><link href="https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/03/identifyingandcorrectingerrors.html" rel="alternate" type="text/html" title="Identifying and Correcting Errors (Unit 1.4)" /><published>2022-10-03T00:00:00-05:00</published><updated>2022-10-03T00:00:00-05:00</updated><id>https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/03/identifyingandcorrectingerrors</id><author><name>Kaiden Do</name></author><category term="markdown" /><category term="week7" /><summary type="html"><![CDATA[Identifying and Correcting Errors Video #1 Notes Programmers run into errors many times and it is a part of the programming process Logic Error: when the programmer makes a mistake in the algorithm that causes an unexpected result Syntax Error: a typo in the code that doesn’t let the program to run or compile Run-Time Error: the program fails while running, it can run but cannot finish the processes, also called a bug Overflow Error: when the result is too large for the range Takeaway: How to identify an error and understand the 4 main errors]]></summary></entry></feed>