{
  
    
        "post0": {
            "title": "My Class and Goals",
            "content": "Trimester 1 . AP Physics Mechanics - Period 1 . This course will bring students to have a strong understanding of Newtonian mechanics and be well versed in performing and analyzing laboratory experiments. . In this class, I plan to achieve A&#39;s all trimesters and attempt to get a 5 on the AP exam. Also, I want to learn more about physics. . United States History - Period 2 . In this course, students will complete a survey of United States History from the writing of the Constitution through the Great Depression. . In this class, I desire A&#39;s in the two trimesters I take it. I also want to learn more about the history of the United States. . AP Computer Science Principles - Period 3 . The goals I have for APCSP is to increase my ability and knowledge about computer science. I also want to get A&#39;s and a 5 in the AP exam. . AP Calculus BC - Period 4 . In this class, students will create deeper connections with algebra, geometry, functions, and technology. Also, students will build upon their previous knowledge of calculus. . The goals I have for this class is to get a 5 on the AP exam and to get all A&#39;s. I also want to increase my knowledge in mathematics. . AP English Language - Period 5 . In this class, students will focus on the study of rhetoric, the art of effective communication. Students will have numerous opportunities to analyze the strategies of accomplished writers so that they can improve their own abilities to communicate effectively. . In this class, I want to increase my ability to write effectively and get all A&#39;s and a 5 on the AP exam. . Trimester 2 . TBD . Trimester 3 . TBD .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/2022/08/26/myclassesandgoals.html",
            "relUrl": "/jupyter/2022/08/26/myclassesandgoals.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python Quiz and Hacks",
            "content": "My Quiz . This quiz defines two functions for asking questions and receiving an answer. The quiz has 7 questions. Each question asked is compared to a correct answer and if they are equal (with no regard to case) then the quiz tells the user. If not, then the quiz tells the user that the answer is wrong. The program stores each correct answer and tells the user the percentage of correct answers at the end of the quiz. . import getpass, sys # imports functions and libraries def question_and_answer(prompt): # defines the question_and_answer function print(&quot;Question: &quot; + prompt) # asks the user a question msg = input() # takes the user&#39;s input print(&quot;Answer: &quot; + msg) # prints the answer and the user&#39;s input def question_with_response(prompt): # defines the question_with_response function print(&quot;Question: &quot; + prompt) # asks the user a question msg = input() # takes the user&#39;s input return msg # the function returns the user&#39;s response as a string value questions = 7 # number of questions in the quiz correct = 0 # amount correct in the beginning of the quiz print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # greets the user print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) # tells the user how many questions are in the quiz question_and_answer(&quot;Are you ready to take a test?&quot;) # prompts the user to start the quiz rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;import&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;if&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;expression&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What does &#39;def&#39; do in Python in relation to a function: It _______ the function?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;defines&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What does the function take as a parameter?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;prompt&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;Can static text change?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;no&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What is the first thing that beginner programmers usually print?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;hello world&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) # tells the user how many questions they got correct out of the total questions .",
            "url": "https://kaiden-dough.github.io/fastpages/python/2022/08/26/Python-Hacks.html",
            "relUrl": "/python/2022/08/26/Python-Hacks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Del Norte High School",
            "content": "Del Norte High School . . Location . 16601 Nighthawk Ln, San Diego, CA 92127 . Description . Del Norte High School is a public high school in San Diego. It primarily serves the 4S Ranch and Del Sur communities of San Diego, California. It is a part of the Poway Unified School District and was established in 2008. . Academics . Del Norte High School offers a range of classes: classes for college requirements, many electives, and rigorous AP classes. . Athletics . The Nighthawks has many sports for students to play. A few are track and field, football, basketball, soccer, volleyball, tennis, swimming, and lacrosse. . Clubs . Del Norte also offers many clubs for students to join or to create. For example there is the Del Norte FRC robotics team, Team Optix. Also another club is Key Club, where club members volunteer in community service opportunities. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/dnhs/2022/08/25/delnortehighschool.html",
            "relUrl": "/markdown/dnhs/2022/08/25/delnortehighschool.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Apel Syllabus",
            "content": "Mrs. Darcey Hall Room G115 Email: mdarceyhall@powayusd.com . I. General Description . With an emphasis on critical reading and persuasive writing, AP Language allows students to experience the rigor of a college-level course while still in high school. Specifically, the class focuses on the study of rhetoric, the art of effective communication. Students will have numerous opportunities to analyze the strategies of accomplished writers so that they can improve their own abilities to communicate effectively. Additionally, the course sets students up to earn college credit. College credit may be granted based upon earning a passing score on College Board’s AP English Language exam in May, and all students are expected to take this exam. Like college preparatory courses at the high school level, this class will also emphasize the refinement of reading and writing skills. . A. Composition . According to The College Board, the non-profit organization that nationally organizes advanced placement courses, AP Language aims to “engage students in becoming skilled writers who compose for a variety of purposes.” Additionally, The College Board intends that the course “makes students aware of the interactions among a writer’s purposes, audience expectations, and subjects as well as the way generic conventions and the resources of language contribute to effectiveness in writing.” AP Language students will develop an understanding of writing as a process, and students will be asked to write numerous timed in-class and polished essays. Since this is a composition course, students should expect to and be prepared to write either type of these essays every 14-21 days. Essentially, this course will refine a student’s ability to write using effective diction, controlling tone, illustrative detail, logical organization, and a variety of sentence structures. . B. Critical Reading . Since there is an inherent connection between reading and writing, this AP course will also develop the student’s ability to read critically and analyze fine nuances of meanings. The College Board proposes that students become “skilled readers of prose written in a variety of periods, disciplines, and rhetorical contexts.” Furthermore, students are expected to read “a wide variety of prose styles from many disciplines and historical time periods to gain understanding of the connections between interpretative skill in reading and writing.” Additionally, students will have the opportunity to select their own reading materials; this can include novels, nonfiction books, or news magazines. . II. Course Assignments, Materials and Communication . Students are expected to take notes on all course lectures and class discussions; often these notes will take the form of handouts provided by the teacher. Course assignments will include, but are not limited to: the reading of novels, essays and other prose; reading quizzes; close reading questions; practice AP exams; activities from AP Classroom; vocabulary development; individual and group projects; writing essays; peer review activities; conducting research; sentence building activities; independent reading; and posting to class discussion boards. Additionally, students should expect to complete a research paper that spans the trimesters. . Students are also expected to keep a class notebook. On an almost daily basis, students will complete work in this notebook. This way, students always have their course notes and work to review before assessments, major assignments and in class essays. Students should value the work they add to their notebooks; it represents their commitment to the learning process. Additionally, this work will comprise a good majority of the class work/homework grading category. . Canvas will be the main learning platform. From the home page, students can find announcements and reminders, a commonly asked questions Discussion Board, and, most importantly, weekly learning modules. From my Canvas homepage, students can find a link to access these modules under Weekly Agendas. Additionally, there will be a page for each day of the school week that includes all the links, materials and resources for the day’s lesson. . Email will always be the best way to contact the teacher. If a student has a general question about an assignment or lesson, they can post it to the APEL Questions Discussion Board. This board will always be at the top of the Discussion Board page and should be used for questions and answers that benefit the whole class. Often, multiple students have the same question, and this allows the teacher to provide answers that are accessible to everyone. . # . III. Classroom Policies . A. Submitting Work . Please treat deadlines with the utmost seriousness. A missed deadline often means that a student will not be prepared for the next step in a series of lessons. It is very important that students note the specific due date and time for each assignment. These due dates and times will always be clearly noted and communicated. In general, all work done outside the classroom must be typed and follow all MLA guidelines. . Submitting writing assignments will also include submitting to www.turnitin.com. Turnitin.com is a program that protects against plagiarism. All assignments should reflect each student’s own work; students should not collaborate on assignments unless specific instructions are otherwise given. It is very important that every student personally study PUSD’s academic honesty policy. This policy is also fully covered in the DNHS student handbook. The expectation is that students understand this policy because it will be strictly enforced! If a student EVER has a question about what is acceptable or unacceptable, they should always ask. . B. Hate Behavior and Trigger Warning . Every student has the right to feel safe and valued on our campus and in the AP English Language Classroom. We are striving to actively stand against racism of any kind and to be accepting of those regardless of their race, ethnicity, gender identity, sexual orientation, and religious affiliation. This classroom, and our school, is a place where insensitive and prejudiced behavior will not be tolerated. The PUSD/DNHS discipline policy in regard to hate/racist behavior is linked here. To learn more about Del Norte’s commitment to equity and inclusion and to find a form for reporting anything that violates this commitment, please visit this site. . Additionally, as a humanities course, the course may broach topics of a sensitive nature. Our classroom provides an open space for the critical and civil exchange of ideas. Diverse viewpoints are welcome. Some readings and other content may include sensitive language or topics that some students may find uncomfortable. If a student has a specific area of concern or sensitivity, they should alert the teacher as soon as possible. We ask all students to help create an atmosphere of mutual respect and sensitivity. Again, please know that our intentions are always to create a safe place for students to grapple with complex and multifaceted issues. . C. Late and Make-up Work . Students will receive at least 48 hours, often more, notice prior to a deadline or due date, so students are expected to submit all work on time. Absences do not create extensions. However, if a student ever finds a due date is impossible to meet, please contact the teacher to request a possible extension. We understand that students all have busy lives and demanding academic schedules. We respect this; nevertheless, we do expect students to take initiative to request a possible extension if they ever need one. A request must be submitted at least 24 hours prior to the deadline. Remember, this is a college level course, and students must be responsible for managing their work. Requests for extensions will be tracked, and if a student habitually makes this request, a parent/student/teacher conference may occur to help find a solution. Additionally, each student is allowed one amnesty pass for the yearlong course. Choosing to use the amnesty pass means that a student can submit an assignment the next day that follows the original due date (even if this falls on a non-school day). Students may use their pass on any assignment, but records will be kept, so please remember that this is a one time pass for the entire school year. Late work should not be an issue because students have other options. If a student is irresponsible, there will be consequences and penalties. Please problem solve and find a way to get work to the teacher on time. Remember: communication with the teacher is key to a student’s success. Any tests missed due to an excused absence should be made up within one week of the absence unless specific accommodations have been made. . We will take attendance daily. If a student is absent, they are still responsible for the day’s learning. Absent students should consult the daily agenda from the weekly learning module and review all the posted instructional materials. Please make every effort to attend class when an on demand essay is scheduled. If a student has an excused absence, the student will write the essay during the next class session they attend. . Please make sure that you check your Canvas inbox on a daily basis. Students can access this inbox from the gray toolbar on the left side of Canvas/MyConnect. Sometimes, the teacher might have a specific message for a student, and this will be the best form of contact. We expect students to check this inbox every school day. . D. Grading . Assignments are weighted by their purpose. Work designed to introduce or practice skills, that is work designed to help you form and master course skills (formative work) is worth 25% of your final grade. Summative work, work like tests and essays that are designed to measure your learning progress, is worth the remaining 75% (60% for essays and 15% for tests). . Grades will be based on the following scale: . 100-90%=A; 89-80%=B; 79-70%=C; 69-60%=D . Grades can be accessed through Synergy and Canvas. Please note that the English department’s grading policies do not allow for grade rounding; exceptions will not be made. Please note that the Synergy gradebook is the accurate record. Students can see grades in Canvas, but they might not always configure to meet the class weighting and expectations listed above. Final grades will be based on Synergy’s record, NOT the Canvas gradebook. . E. Expectations and Routine Procedures . In addition to the expectations and procedures explained above, students are expected to: . Take responsibility for learning. . | Treat everyone with respect–all aspects of the PUSD’s Hate/Racist Behavior Policy will be enforced. . | Turn in all work on time . | Be prepared everyday with the required materials and attitude . | Have academic honesty . | Attend tutorial when asked or as the student feels necessary . | . F. Citizenship . Citizenship in this class calls for the highest possible standards of respect for yourself, others, property and the learning process. All school and district policies, including the academic honesty policy, will be strictly enforced. Earning an “O” in citizenship will require you to go beyond being on time and undisruptive. Students earning an “O” in citizenship positively contribute to the learning environment by being generous, supportive, respectful, helpful and active participants in our learning community. Requests for college letters of recommendation from students who do not earn an “O” in citizenship on final trimester report cards will be denied. . I commend you for accepting the challenge of an AP course. I look forward to a rewarding, educational and fun year! .",
            "url": "https://kaiden-dough.github.io/fastpages/2022/08/25/APEL-syllabus.html",
            "relUrl": "/2022/08/25/APEL-syllabus.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Kaiden's Markdown Post",
            "content": "HELLO . My first Markdown Post on my FastPages site. . I am Kaiden Do. I am a junior at Del Norte High School. Follow my GitHub 1 . Things I Like . Fruits Animals . Mangos | Turtles | . Oranges | Bears | . . Code Things . print(&quot;I am:&quot;) age = 15 print(age) . That is all :) . Penguin . . Footnote . My GitHub page. &#8617; . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/2022/08/21/myfirstmarkdownpost.html",
            "relUrl": "/markdown/2022/08/21/myfirstmarkdownpost.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "First Jupyter Notebook Post",
            "content": "Code Notebook . Some Python code: . print(&quot;Hello&quot;) . Hello . for i in range (3): print(&quot;HEY!&quot;, end = &#39; &#39;) for i in range (3): print(&quot;CODE!&quot;, end = &#39; &#39;) . HEY! HEY! HEY! CODE! CODE! CODE! .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/2022/08/21/firstjupyternotebook.html",
            "relUrl": "/jupyter/2022/08/21/firstjupyternotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Notes for APCSP",
          "content": "Notes . … | . Terms . … | . Ideas . … | .",
          "url": "https://kaiden-dough.github.io/fastpages/_pages/02_notes.html",
          "relUrl": "/_pages/02_notes.html",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "I am Kaiden Do and I am a junior in Del Norte High School. Follow me on GitHub: kaiden-dough 1. . My GitHub profile. &#8617; . |",
          "url": "https://kaiden-dough.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kaiden-dough.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}