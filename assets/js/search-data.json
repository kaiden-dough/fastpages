{
  
    
        "post0": {
            "title": "Unit 2.4b Using Programs with Data, SQL",
            "content": "Database Programming is Program with Data . Each Tri 2 Final Project should be an example of a Program with Data. . Prepare to use SQLite in common Imperative Technique . Explore SQLite Connect object to establish database connection- Explore SQLite Cursor Object to fetch data from a table within a database | . Schema of Users table in Sqlite.db . Uses PRAGMA statement to read schema. . Describe Schema, here is resource Resource- What is a database schema? . What is the purpose of identity Column in SQL database? | What is the purpose of a primary key in SQL database? | What are the Data Types in SQL table? | . import sqlite3 database = &#39;instance/sqlite.db&#39; # this is location of database def schema(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Fetch results of Schema results = cursor.execute(&quot;PRAGMA table_info(&#39;users&#39;)&quot;).fetchall() # Print the results for row in results: print(row) # Close the database connection conn.close() schema() . (0, &#39;id&#39;, &#39;INTEGER&#39;, 1, None, 1) (1, &#39;_name&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (2, &#39;_uid&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (3, &#39;_password&#39;, &#39;VARCHAR(255)&#39;, 1, None, 0) (4, &#39;_dob&#39;, &#39;DATE&#39;, 0, None, 0) . Reading Users table in Sqlite.db . Uses SQL SELECT statement to read data . What is a connection object? After you google it, what do you think it does? | Same for cursor object? | Look at conn object and cursor object in VSCode debugger. What attributes are in the object? | Is &quot;results&quot; an object? How do you know? | . import sqlite3 def read(): # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL queries cursor = conn.cursor() # Execute a SELECT statement to retrieve data from a table results = cursor.execute(&#39;SELECT * FROM users&#39;).fetchall() # Print the results if len(results) == 0: print(&quot;Table is empty&quot;) else: for row in results: print(row) # Close the cursor and connection objects cursor.close() conn.close() read() . (1, &#39;Thomas Edison&#39;, &#39;toby&#39;, &#39;sha256$PBxUIZd7ZqoiG4A2$ce6b1c7b2dfbc42f0b850c6c4fe05028e6d032529e6e71f7a8c1653407b784d8&#39;, &#39;1847-02-11&#39;) (2, &#39;Nikola Tesla&#39;, &#39;niko&#39;, &#39;sha256$qp0oiadvp8ifh1WG$b4fb416028d0e2c61f194c9414feac5cf225c01a473f4fb7ea45434d60de2cac&#39;, &#39;2023-03-15&#39;) (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$qfhP9Y4ZSHz9YPqT$83dbe8988989728f07550e6aeb6a139f6762476bef23ced2cfa6c3d46a94cc3e&#39;, &#39;2023-03-15&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$2AEX2htnO6gTByhk$cbbf42ec6ce42628b4eb9b66a648009c919ea79d5866c1924488f03162f74ed6&#39;, &#39;2023-03-15&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$FVi4MawvYOmxauGb$3e35e9d7423a561c600a6cb4b858347c450ff9598be5a3d9c2028ff2ca9d4574&#39;, &#39;1920-10-21&#39;) (6, &#39;Marion Ravenwood&#39;, &#39;raven&#39;, &#39;sha256$wSb62jeCvIUof0yZ$7d7fb7db812295746d36bd482b2cd89a7424ed41ca650edd87c53783c3fef402&#39;, &#39;1921-10-21&#39;) . Create a new User in table in Sqlite.db . Uses SQL INSERT to add row . Compore create() in both SQL lessons. What is better or worse in the two implementations? | Explain purpose of SQL INSERT. Is this the same as User init? | . import sqlite3 def create(): name = input(&quot;Enter your name:&quot;) uid = input(&quot;Enter your user id:&quot;) password = input(&quot;Enter your password&quot;) dob = input(&quot;Enter your date of birth &#39;YYYY-MM-DD&#39;&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to insert data into a table cursor.execute(&quot;INSERT INTO users (_name, _uid, _password, _dob) VALUES (?, ?, ?, ?)&quot;, (name, uid, password, dob)) # Commit the changes to the database conn.commit() print(f&quot;A new user record {uid} has been created&quot;) except sqlite3.Error as error: print(&quot;Error while executing the INSERT:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #create() . Updating a User in table in Sqlite.db . Uses SQL UPDATE to modify password . What does the hacked part do? | Explain try/except, when would except occur? | What code seems to be repeated in each of these examples to point, why is it repeated? | . import sqlite3 def update(): uid = input(&quot;Enter user id to update&quot;) password = input(&quot;Enter updated password&quot;) if len(password) &lt; 2: message = &quot;hacked&quot; password = &#39;gothackednewpassword123&#39; else: message = &quot;successfully updated&quot; # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: # Execute an SQL command to update data in a table cursor.execute(&quot;UPDATE users SET _password = ? WHERE _uid = ?&quot;, (password, uid)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: print(f&quot;The row with user id {uid} the password has been {message}&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the UPDATE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #update() . Delete a User in table in Sqlite.db . Uses a delete function to remove a user based on a user input of the id. . Is DELETE a dangerous operation? Why? | In the print statemements, what is the &quot;f&quot; and what does {uid} do? | . import sqlite3 def delete(): uid = input(&quot;Enter user id to delete&quot;) # Connect to the database file conn = sqlite3.connect(database) # Create a cursor object to execute SQL commands cursor = conn.cursor() try: cursor.execute(&quot;DELETE FROM users WHERE _uid = ?&quot;, (uid,)) if cursor.rowcount == 0: # The uid was not found in the table print(f&quot;No uid {uid} was not found in the table&quot;) else: # The uid was found in the table and the row was deleted print(f&quot;The row with uid {uid} was successfully deleted&quot;) conn.commit() except sqlite3.Error as error: print(&quot;Error while executing the DELETE:&quot;, error) # Close the cursor and connection objects cursor.close() conn.close() #delete() . Menu Interface to CRUD operations . CRUD and Schema interactions from one location by running menu. Observe input at the top of VSCode, observe output underneath code cell. . Why does the menu repeat? | Could you refactor this menu? Make it work with a List? | . def menu(): operation = input(&quot;Enter: (C)reate (R)ead (U)pdate or (D)elete or (S)chema&quot;) if operation.lower() == &#39;c&#39;: create() elif operation.lower() == &#39;r&#39;: read() elif operation.lower() == &#39;u&#39;: update() elif operation.lower() == &#39;d&#39;: delete() elif operation.lower() == &#39;s&#39;: schema() elif len(operation)==0: # Escape Key return else: print(&quot;Please enter c, r, u, or d&quot;) menu() # recursion, repeat menu try: menu() # start menu except: print(&quot;Perform Jupyter &#39;Run All&#39; prior to starting menu&quot;) . (1, &#39;Thomas Edison&#39;, &#39;toby&#39;, &#39;sha256$PBxUIZd7ZqoiG4A2$ce6b1c7b2dfbc42f0b850c6c4fe05028e6d032529e6e71f7a8c1653407b784d8&#39;, &#39;1847-02-11&#39;) (2, &#39;Nikola Tesla&#39;, &#39;niko&#39;, &#39;sha256$qp0oiadvp8ifh1WG$b4fb416028d0e2c61f194c9414feac5cf225c01a473f4fb7ea45434d60de2cac&#39;, &#39;2023-03-15&#39;) (3, &#39;Alexander Graham Bell&#39;, &#39;lex&#39;, &#39;sha256$qfhP9Y4ZSHz9YPqT$83dbe8988989728f07550e6aeb6a139f6762476bef23ced2cfa6c3d46a94cc3e&#39;, &#39;2023-03-15&#39;) (4, &#39;Eli Whitney&#39;, &#39;whit&#39;, &#39;sha256$2AEX2htnO6gTByhk$cbbf42ec6ce42628b4eb9b66a648009c919ea79d5866c1924488f03162f74ed6&#39;, &#39;2023-03-15&#39;) (5, &#39;Indiana Jones&#39;, &#39;indi&#39;, &#39;sha256$FVi4MawvYOmxauGb$3e35e9d7423a561c600a6cb4b858347c450ff9598be5a3d9c2028ff2ca9d4574&#39;, &#39;1920-10-21&#39;) (6, &#39;Marion Ravenwood&#39;, &#39;raven&#39;, &#39;sha256$wSb62jeCvIUof0yZ$7d7fb7db812295746d36bd482b2cd89a7424ed41ca650edd87c53783c3fef402&#39;, &#39;1921-10-21&#39;) (7, &#39;Kaiden Do&#39;, &#39;kaiden&#39;, &#39;kaidendopassword&#39;, &#39;2006-09-10&#39;) (8, &#39;Bob&#39;, &#39;billy&#39;, &#39;bobilly&#39;, &#39;2001-02-19&#39;) . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In this implementation, do you see procedural abstraction? | In 2.4a or 2.4b lecture Do you see data abstraction? Complement this with Debugging example. | Use Imperative or OOP style to Create a new Table or do something that applies to your CPT project. | . | . Reference... sqlite documentation .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/03/16/AP-unit2-4b.html",
            "relUrl": "/2023/03/16/AP-unit2-4b.html",
            "date": " • Mar 16, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 2.4a Using Programs with Data, SQLAlchemy",
            "content": "Database and SQLAlchemy . In this blog we will explore using programs with data, focused on Databases. We will use SQLite Database to learn more about using Programs with Data. Use Debugging through these examples to examine Objects created in Code. . College Board talks about ideas like . Program Usage. &quot;iterative and interactive way when processing information&quot; | Managing Data. &quot;classifying data are part of the process in using programs&quot;, &quot;data files in a Table&quot; | Insight &quot;insight and knowledge can be obtained from ... digitally represented information&quot; | Filter systems. &#39;tools for finding information and recognizing patterns&quot; | Application. &quot;the preserve has two databases&quot;, &quot;an employee wants to count the number of book&quot; | . | PBL, Databases, Iterative/OOP . Iterative. Refers to a sequence of instructions or code being repeated until a specific end result is achieved | OOP. A computer programming model that organizes software design around data, or objects, rather than functions and logic | SQL. Structured Query Language, abbreviated as SQL, is a language used in programming, managing, and structuring data | . | . Imports and Flask Objects . Defines and key object creations . Comment on where you have observed these working? Provide a defintion of purpose. Flask app object | SQLAlchemy db object | | . &quot;&quot;&quot; These imports define the key objects &quot;&quot;&quot; from flask import Flask from flask_sqlalchemy import SQLAlchemy &quot;&quot;&quot; These object and definitions are used throughout the Jupyter Notebook. &quot;&quot;&quot; # Setup of key Flask object (app) app = Flask(__name__) # Setup SQLAlchemy object and properties for the database (db) database = &#39;sqlite:///sqlite.db&#39; # path and filename of database app.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = database app.config[&#39;SECRET_KEY&#39;] = &#39;SECRET_KEY&#39; db = SQLAlchemy() # This belongs in place where it runs once per project db.init_app(app) # makes the sqlite.db file . Model Definition . Define columns, initialization, and CRUD methods for users table in sqlite.db . Comment on these items in the class, purpose and defintion. class User | db.Model inheritance | init method | @property, @&lt;column&gt;.setter | create, read, update, delete methods | . | . &quot;&quot;&quot; database dependencies to support sqlite examples &quot;&quot;&quot; import datetime from datetime import datetime import json from sqlalchemy.exc import IntegrityError from werkzeug.security import generate_password_hash, check_password_hash &#39;&#39;&#39; Tutorial: https://www.sqlalchemy.org/library.html#tutorials, try to get into a Python shell and follow along &#39;&#39;&#39; # Define the User class to manage actions in the &#39;users&#39; table # -- Object Relational Mapping (ORM) is the key concept of SQLAlchemy # -- a.) db.Model is like an inner layer of the onion in ORM # -- b.) User represents data we want to store, something that is built on db.Model # -- c.) SQLAlchemy ORM is layer on top of SQLAlchemy Core, then SQLAlchemy engine, SQL class Player(db.Model): # way to inherit the propeties into the user from the template, let the template do database stuff # template for the properties we want the user to have __tablename__ = &#39;football&#39; # table name is plural, class name is singular # Define the User schema with &quot;vars&quot; from object id = db.Column(db.Integer, primary_key=True) _name = db.Column(db.String(255), unique=False, nullable=False) _number = db.Column(db.Integer, unique=False, nullable=False) _wins = db.Column(db.Integer, unique=False, nullable=False) _losses = db.Column(db.Integer, unique=False, nullable=False) # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, number, wins, losses): # initialiazes the attributes within the class, uses parameters to be recieved in the init method to instantiate the object of the template user self._name = name # variables with self prefix become part of the object, self._number = number self._wins = wins self._losses = losses # a name getter method, extracts name from object @property # getters let you get the values of the attirbutes in the object def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter # setter let you change the values of the attirbutes in the object def name(self, name): self._name = name # a getter method, extracts uid from object @property def number(self): return self._number # a setter function, allows uid to be updated after initial object creation @number.setter def number(self, number): self._number = number @property def wins(self): return self._wins @wins.setter def wins(self, wins): self._wins = wins @property def losses(self): return self._losses @losses.setter def losses(self, losses): self._losses = losses # output content using str(object) is in human readable form # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.read()) # CRUD create/add a new record to the table # returns self or None on error def create(self): # Create lets you make a new data point try: # creates a person object from User(db.Model) class, passes initializers db.session.add(self) # add prepares to persist person object to Users table db.session.commit() # SqlAlchemy &quot;unit of work pattern&quot; requires a manual commit return self except IntegrityError: db.session.remove() return None # CRUD read converts self to dictionary # returns dictionary def read(self): # lets you retrieve data in the set return { &quot;id&quot;: self.id, &quot;name&quot;: self.name, &quot;number&quot;: self.number, &quot;wins&quot;: self.wins, &quot;losses&quot;: self.losses, } # CRUD update: updates user name, password, phone # returns self def update(self, dictionary): # lets you update and change the previous data for x in dictionary: if x == &quot;number&quot;: self.number = dictionary[x] if x == &quot;wins&quot;: self.wins = dictionary[x] if x == &quot;losses&quot;: self.losses = dictionary[x] db.session.merge(self) db.session.commit() return None # CRUD delete: remove self # None def delete(self): # lets you delete the data or all the data db.session.delete(self) db.session.commit() return None # makes the class for the user and all of the setters and getters and the crud functions . Initial Data . Uses SQLALchemy db.create_all() to initialize rows into sqlite.db . Comment on how these work? Create All Tables from db Object | User Object Constructors | Try / Except | | . &quot;&quot;&quot;Database Creation and Testing &quot;&quot;&quot; # Builds working data for testing def initUsers(): with app.app_context(): &quot;&quot;&quot;Create database and tables&quot;&quot;&quot; db.create_all() &quot;&quot;&quot;Tester data for table&quot;&quot;&quot; p1 = Player(name=&#39;Patrick Mahomes&#39;, number=&#39;15&#39;, wins=&#39;64&#39;, losses=&#39;16&#39;) p2 = Player(name=&#39;JJ Watt&#39;, number=&#39;99&#39;, wins=&#39;77&#39;, losses=&#39;74&#39;) p3 = Player(name=&#39;Russell Wilson&#39;, number=&#39;3&#39;, wins=&#39;108&#39;, losses=&#39;64&#39;) p4 = Player(name=&#39;Travis Kelce&#39;, number=&#39;87&#39;, wins=&#39;105&#39;, losses=&#39;39&#39;) p5 = Player(name=&#39;Joe Burrow&#39;, number=&#39;9&#39;, wins=&#39;24&#39;, losses=&#39;17&#39;) p6 = Player(name=&#39;Trevor Lawrence&#39;, number=&#39;16&#39;, wins=&#39;12&#39;, losses=&#39;22&#39;) players = [p1, p2, p3, p4, p5, p6] &quot;&quot;&quot;Builds sample user/note(s) data&quot;&quot;&quot; for x in players: try: &#39;&#39;&#39;add user to table&#39;&#39;&#39; object = x.create() print(f&quot;Created new uid {object.name}&quot;) except: # error raised if object nit created &#39;&#39;&#39;fails with bad or duplicate data&#39;&#39;&#39; print(f&quot;Records exist uid {x.name}, or error.&quot;) initUsers() # adds some tester data to the sqlite.db file . Created new uid Patrick Mahomes Created new uid JJ Watt Created new uid Russell Wilson Created new uid Travis Kelce Created new uid Joe Burrow Created new uid Trevor Lawrence . Check for given Credentials in users table in sqlite.db . Use of ORM Query object and custom methods to identify user to credentials uid and password . Comment on purpose of following User.query.filter_by | user.password | | . def find_by_name(name): with app.app_context(): player = Player.query.filter_by(_name=name).first() return player # returns user object # # Check credentials by finding user and verify password # def check_credentials(uid, password): # # query email and return user record # user = find_by_uid(uid) # if user == None: # return False # if (user.is_password(password)): # return True # return False # #check_credentials(&quot;indi&quot;, &quot;123qwerty&quot;) # lets you ind the user by a uid and check if the uid and password correspond with each other . Create a new User in table in Sqlite.db . Uses SQLALchemy and custom user.create() method to add row. . Comment on purpose of following user.find_by_uid() and try/except | user = User(...) | user.dob and try/except | user.create() and try/except | | . def create(): # optimize user time to see if uid exists name = input(&quot;Enter your name:&quot;) player = find_by_name(name) try: print(&quot;Found n&quot;, name.read()) return except: pass # keep going # request value that ensure creating valid object number = input(&quot;Enter your number:&quot;) wins = input(&quot;Enter your wins:&quot;) losses = input(&quot;Enter your losses:&quot;) # Initialize User object before date player = Player(name=name, number=number, wins=wins, losses=losses ) # write object to database with app.app_context(): try: object = player.create() print(&quot;Created n&quot;, object.read()) except: # error raised if object not created print(&quot;Unknown error name {name}&quot;) create() # lets the user add their own user to the data base and make their own user . Created {&#39;id&#39;: 7, &#39;name&#39;: &#39;Kaiden Do&#39;, &#39;number&#39;: 50, &#39;wins&#39;: 0, &#39;losses&#39;: 0} . Reading users table in sqlite.db . Uses SQLALchemy query.all method to read data . Comment on purpose of following User.query.all | json_ready assignment, google List Comprehension | | . # SQLAlchemy extracts all users from database, turns each user into JSON def read(): with app.app_context(): table = Player.query.all() json_ready = [player.read() for player in table] # &quot;List Comprehensions&quot;, for each user add user.read() to list return json_ready read() # retrieves and displays the users in the data base along with their age and date of birth and uid and name . [{&#39;id&#39;: 1, &#39;name&#39;: &#39;Patrick Mahomes&#39;, &#39;number&#39;: 15, &#39;wins&#39;: 64, &#39;losses&#39;: 16}, {&#39;id&#39;: 2, &#39;name&#39;: &#39;JJ Watt&#39;, &#39;number&#39;: 99, &#39;wins&#39;: 77, &#39;losses&#39;: 74}, {&#39;id&#39;: 3, &#39;name&#39;: &#39;Russell Wilson&#39;, &#39;number&#39;: 3, &#39;wins&#39;: 108, &#39;losses&#39;: 64}, {&#39;id&#39;: 4, &#39;name&#39;: &#39;Travis Kelce&#39;, &#39;number&#39;: 87, &#39;wins&#39;: 105, &#39;losses&#39;: 39}, {&#39;id&#39;: 5, &#39;name&#39;: &#39;Joe Burrow&#39;, &#39;number&#39;: 9, &#39;wins&#39;: 24, &#39;losses&#39;: 17}, {&#39;id&#39;: 6, &#39;name&#39;: &#39;Trevor Lawrence&#39;, &#39;number&#39;: 16, &#39;wins&#39;: 12, &#39;losses&#39;: 22}] . Hacks . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | Change blog to your own database. | Add additional CRUD Add Update functionality to this blog. | Add Delete functionality to this blog. | . | . def put(): name = str(input(&quot;Who do you want to edit?&quot;)) number = int(input(&quot;Enter the player&#39;s new number or same number&quot;)) wins = int(input(&quot;Enter the player&#39;s new number of wins&quot;)) losses = int(input(&quot;Enter the player&#39;s new number of losses&quot;)) body = { &quot;name&quot;: name, &quot;data&quot;: {&quot;number&quot;: number, &quot;wins&quot;: wins, &quot;losses&quot;: losses} } data = body.get(&#39;data&#39;) player = find_by_name(name) with app.app_context(): player.update(data) db.session.commit() return f&quot;{player.name} at id {player.id} has been updated&quot; put() . &#39;Kaiden Do at id 7 has been updated&#39; . def delete(): name = str(input(&quot;Who do you want to delete?&quot;)) player = find_by_name(name) with app.app_context(): player.delete() return f&quot;{player.name} at id {player.id} has been deleted&quot; delete() . &#39;Kaiden Do at id 7 has been deleted&#39; .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/03/13/AP-unit2-4a.html",
            "relUrl": "/2023/03/13/AP-unit2-4a.html",
            "date": " • Mar 13, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 2.3 Extracting Information from Data, Pandas",
            "content": "Files To Get . Save this file to your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/2023-03-09-AP-unit2-3.ipynb . Save these files into a subfolder named files in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/data.csv . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/files/grade.json . Save this image into a subfolder named images in your _notebooks folder . wget https://raw.githubusercontent.com/nighthawkcoders/APCSP/master/_notebooks/images/table_dataframe.png . Pandas and DataFrames . In this lesson we will be exploring data analysis using Pandas. . College Board talks about ideas like Tools. &quot;the ability to process data depends on users capabilities and their tools&quot; | Combining Data. &quot;combine county data sets&quot; | Status on Data&quot;determining the artist with the greatest attendance during a particular month&quot; | Data poses challenge. &quot;the need to clean data&quot;, &quot;incomplete data&quot; | . | . From Pandas Overview -- When working with tabular data, such as data stored in spreadsheets or databases, pandas is the right tool for you. pandas will help you to explore, clean, and process your data. In pandas, a data table is called a DataFrame. | . . &#39;&#39;&#39;Pandas is used to gather data sets through its DataFrames implementation&#39;&#39;&#39; import pandas as pd . Cleaning Data . When looking at a data set, check to see what data needs to be cleaned. Examples include: . Missing Data Points | Invalid Data | Inaccurate Data | . Run the following code to see what needs to be cleaned . df = pd.read_json(&#39;grade.json&#39;) print(df) # What part of the data set needs to be cleaned? # For those who typed out the grade level, wrong student ID, and abnormal GPAs # From PBL learning, what is a good time to clean data? Hint, remember Garbage in, Garbage out? # It is a good time to clean data right away, prevent any bad data from coming in, to make it easier to avoid errors in the code. . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 2 578 12 2.78 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 6 145 12 2.95 7 167 10 3.90 8 235 9th Grade 3.15 9 nil 9 2.80 10 469 11 3.45 11 456 10 2.75 . Extracting Info . Take a look at some features that the Pandas library has that extracts info from the dataset . DataFrame Extract Column . print(df[[&#39;GPA&#39;]]) print() #try two columns and remove the index from print statement print(df[[&#39;Student ID&#39;,&#39;GPA&#39;]].to_string(index=False)) # This df[[]] allows the print to show different columns from the data. The index = false makes the 0, 1,2,3,4 not show up . GPA 0 3.57 1 4.00 2 2.78 3 3.45 4 4.75 5 3.33 6 2.95 7 3.90 8 3.15 9 2.80 10 3.45 11 2.75 Student ID GPA 123 3.57 246 4.00 578 2.78 469 3.45 324 4.75 313 3.33 145 2.95 167 3.90 235 3.15 nil 2.80 469 3.45 456 2.75 . DataFrame Sort . print(df.sort_values(by=[&#39;GPA&#39;])) print() #sort the values in reverse order print(df.sort_values(by=[&#39;GPA&#39;], ascending=False)) # The sort, sorts the values based on the numerical order, so it only works for numberical things. . Student ID Year in School GPA 11 456 10 2.75 2 578 12 2.78 9 nil 9 2.80 6 145 12 2.95 8 235 9th Grade 3.15 5 313 20 3.33 3 469 11 3.45 10 469 11 3.45 0 123 12 3.57 7 167 10 3.90 1 246 10 4.00 4 324 Junior 4.75 Student ID Year in School GPA 4 324 Junior 4.75 1 246 10 4.00 7 167 10 3.90 0 123 12 3.57 3 469 11 3.45 10 469 11 3.45 5 313 20 3.33 8 235 9th Grade 3.15 6 145 12 2.95 9 nil 9 2.80 2 578 12 2.78 11 456 10 2.75 . DataFrame Selection or Filter . print(df[df.GPA &gt; 3.00]) # this displays the data where the GPA is greater than 3.00 . Student ID Year in School GPA 0 123 12 3.57 1 246 10 4.00 3 469 11 3.45 4 324 Junior 4.75 5 313 20 3.33 7 167 10 3.90 8 235 9th Grade 3.15 10 469 11 3.45 . DataFrame Selection Max and Min . print(df[df.GPA == df.GPA.max()]) print() print(df[df.GPA == df.GPA.min()]) # the .max() and .min() prints the max of the category and min of the category, then the df[] prints the information of the max and min student . Student ID Year in School GPA 4 324 Junior 4.75 Student ID Year in School GPA 11 456 10 2.75 . Create your own DataFrame . Using Pandas allows you to create your own DataFrame in Python. . Python Dictionary to Pandas DataFrame . import pandas as pd #the data can be stored as a python dictionary dict = { &quot;calories&quot;: [420, 380, 390], &quot;duration&quot;: [50, 40, 45] } #stores the data in a data frame print(&quot;-Dict_to_DF&quot;) df = pd.DataFrame(dict) print(df) print(&quot;-Dict_to_DF_labels--&quot;) #or with the index argument, you can label rows. df = pd.DataFrame(dict, index = [&quot;day1&quot;, &quot;day2&quot;, &quot;day3&quot;]) print(df) # the pandas lets you change the index of the data set . -Dict_to_DF calories duration 0 420 50 1 380 40 2 390 45 -Dict_to_DF_labels-- calories duration day1 420 50 day2 380 40 day3 390 45 . Examine DataFrame Rows . print(&quot;-Examine Selected Rows&quot;) #use a list for multiple labels: print(df.loc[[&quot;day1&quot;, &quot;day3&quot;]]) #refer to the row index: print(&quot;--Examine Single Row--&quot;) print(df.loc[&quot;day1&quot;]) # you can examine different rows, with the .loc[] . -Examine Selected Rows calories duration day1 420 50 day3 390 45 --Examine Single Row-- calories 420 duration 50 Name: day1, dtype: int64 . Pandas DataFrame Information . print(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; Index: 3 entries, day1 to day3 Data columns (total 2 columns): # Column Non-Null Count Dtype -- -- 0 calories 3 non-null int64 1 duration 3 non-null int64 dtypes: int64(2) memory usage: 180.0+ bytes None . Example of larger data set . Pandas can read CSV and many other types of files, run the following code to see more features with a larger data set . import pandas as pd #read csv and sort &#39;Duration&#39; largest to smallest df = pd.read_csv(&#39;data.csv&#39;).sort_values(by=[&#39;Duration&#39;], ascending=False) print(&quot;--Duration Top 10&quot;) print(df.head(10)) print(&quot;--Duration Bottom 10&quot;) print(df.tail(10)) # these lets you print the first couple or last couple of a data set . --Duration Top 10 Duration Pulse Maxpulse Calories 69 300 108 143 1500.2 79 270 100 131 1729.0 109 210 137 184 1860.4 60 210 108 160 1376.0 106 180 90 120 800.3 90 180 101 127 600.1 65 180 90 130 800.4 61 160 110 137 1034.4 62 160 109 135 853.0 67 150 107 130 816.0 --Duration Bottom 10 Duration Pulse Maxpulse Calories 68 20 106 136 110.4 100 20 95 112 77.7 89 20 83 107 50.3 135 20 136 156 189.0 94 20 150 171 127.4 95 20 151 168 229.4 139 20 141 162 222.4 64 20 110 130 131.4 112 15 124 139 124.2 93 15 80 100 50.5 . APIs are a Source for Writing Programs with Data . 3rd Party APIs are a great source for creating Pandas Data Frames. . Data can be fetched and resulting json can be placed into a Data Frame | Observe output, this looks very similar to a Database | . &#39;&#39;&#39;Pandas can be used to analyze data&#39;&#39;&#39; import pandas as pd import requests def fetch(): &#39;&#39;&#39;Obtain data from an endpoint&#39;&#39;&#39; url = &quot;https://flask.nighthawkcodingsociety.com/api/covid/&quot; fetch = requests.get(url) json = fetch.json() # filter data for requirement df = pd.DataFrame(json[&#39;countries_stat&#39;]) # filter endpoint for country stats print(df.loc[0:5, &#39;country_name&#39;:&#39;deaths&#39;]) # show row 0 through 5 and columns country_name through deaths fetch() # pandas can also be used with fetch API . country_name cases deaths 0 USA 82,649,779 1,018,316 1 India 43,057,545 522,193 2 Brazil 30,345,654 662,663 3 France 28,244,977 145,020 4 Germany 24,109,433 134,624 5 UK 21,933,206 173,352 . Hacks . Early Seed award . Add this Blog to you own Blogging site. | Have all lecture files saved to your files directory before Tech Talk starts. Have data.csv open in vscode. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . Add this Blog to you own Blogging site. In the Blog add notes and observations on each code cell. | In blog add College Board practice problems for 2.3. | . On this one, for question five I got the right answer but I was on the fence between The average number of hours per day that the car is in use and The number of bicycles the car passed on a particular day because the camera takes a photo every second, so it should be able to se how many seconds per day it could be used. Then I realized the camera doesn&#39;t tell you what day our time it is. . I did well on this quiz, I did not find it very difficult. . The next 4 weeks, Teachers want you to improve your understanding of data. Look at the blog and others on Unit 2. Your intention is to find some things to differentiate your individual College Board project. . Create or Find your own dataset. The suggestion is to use a JSON file, integrating with your PBL project would be Fambulous. | . When choosing a data set, think about the following:- Does it have a good sample size? - Is there bias in the data? - Does the data set need to be cleaned? - What is the purpose of the data set? - ... . Continue this Blog using Pandas extract info from that dataset (ex. max, min, mean, median, mode, etc.) | . import pandas as pd df = pd.read_csv(&#39;flavors_of_cacao.csv&#39;).sort_values(by=[&#39;Rating&#39;], ascending=False) print(df) . Company  r n(Maker-if known) Specific Bean Origin r nor Bar Name REF 78 Amedei Chuao 111 86 Amedei Toscano Black 40 222 Bonnat Kaori 1339 76 Amedei Porcelana 111 1663 Tobago Estate (Pralus) Roxborough, Tobago 895 ... ... ... ... 245 Bonnat One Hundred 81 437 Claudio Corallo Principe 252 465 Cote d&#39; Or (Kraft) Sensations Intense 48 326 Callebaut Baking 141 1175 Neuhaus (Callebaut) Dark 135 Review r nDate Cocoa r nPercent Company r nLocation Rating 78 2007 70% Italy 5.0 86 2006 70% Italy 5.0 222 2014 75% France 4.0 76 2007 70% Italy 4.0 1663 2012 70% France 4.0 ... ... ... ... ... 245 2006 100% France 1.5 437 2008 100% Sao Tome 1.0 465 2006 70% Belgium 1.0 326 2007 70% Belgium 1.0 1175 2007 73% Belgium 1.0 Bean r nType Broad Bean r nOrigin 78 Trinitario Venezuela 86 Blend   222   Brazil 76 Criollo (Porcelana) Venezuela 1663 Trinitario Tobago ... ... ... 245     437 Forastero Sao Tome &amp; Principe 465     326   Ecuador 1175     [1795 rows x 9 columns] . print(&quot;Best chocolate&quot;) print(df.max()) print(&quot;Worst chocolate&quot;) print(df.min()) . Best chocolate Company  r n(Maker-if known) twenty-four blackbirds Specific Bean Origin r nor Bar Name the lost city, gracias a dias, batch 362 REF 1952 Review r nDate 2017 Cocoa r nPercent 99% Company r nLocation Wales Rating 5.0 dtype: object Worst chocolate Company  r n(Maker-if known) A. Morin Specific Bean Origin r nor Bar Name &#34;heirloom&#34;, Arriba Nacional REF 5 Review r nDate 2006 Cocoa r nPercent 100% Company r nLocation Amsterdam Rating 1.0 dtype: object . /tmp/ipykernel_1217/2482741605.py:2: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with &#39;numeric_only=None&#39;) is deprecated; in a future version this will raise TypeError. Select only valid columns before calling the reduction. print(df.max()) /tmp/ipykernel_1217/2482741605.py:5: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with &#39;numeric_only=None&#39;) is deprecated; in a future version this will raise TypeError. Select only valid columns before calling the reduction. print(df.min()) . print(&quot;Median Chocolate&quot;) print(df.loc[round(len(df)/2)]) print(&quot;Mean Rating&quot;) print(df[&quot;Rating&quot;].mean()) print(&quot;Mode Rating&quot;) print(df[&quot;Rating&quot;].mode()) . Median Chocolate Company  n(Maker-if known) Kaoka (Cemoi) Specific Bean Origin nor Bar Name Ecuador REF 423 Review nDate 2009 Cocoa nPercent 80% Company nLocation France Rating 2.75 Bean nType   Broad Bean nOrigin Ecuador Name: 898, dtype: object Mean Rating 3.185933147632312 Mode Rating 0 3.5 Name: Rating, dtype: float64 . print(df.query(&quot;Rating==5&quot;).mode()) . Company  n(Maker-if known) Specific Bean Origin nor Bar Name REF 0 Amedei Chuao 40 1 NaN Toscano Black 111 Review nDate Cocoa nPercent Company nLocation Rating Bean nType 0 2006 70% Italy 5.0 Blend 1 2007 NaN NaN NaN Trinitario Broad Bean nOrigin 0 Venezuela 1   . Hack Helpers . Here is how Mort started on this assignment by asking ChatGPT ... Regarding Python Pandas, what are some data sets that would be good for learning Pandas? . There are many data sets that are suitable for learning pandas, depending on your interests and the skills you want to develop. Here are some suggestions:- Titanic Dataset: This is a classic dataset for data analysis and machine learning, and is often used as an introduction to pandas. The dataset contains information about passengers on the Titanic, including their demographics, ticket class, and survival status. . Iris Dataset: This is another classic dataset that is often used in machine learning and data analysis courses. The dataset contains information about iris flowers, including their sepal length, sepal width, petal length, and petal width. . | NBA Player Stats: This dataset contains information about NBA players, including their stats for various games, their positions, and their salaries. It is a great dataset for learning how to clean and manipulate data using pandas. . | Housing Prices Dataset: This dataset contains information about housing prices in a particular city or region, including variables such as the number of bedrooms, square footage, and price. It is a great dataset for learning how to manipulate and analyze numerical data using pandas. . | COVID-19 Dataset: This dataset contains information about the COVID-19 pandemic, including the number of cases, deaths, and recoveries in various countries and regions. It is a great dataset for learning how to manipulate and analyze time-series data using pandas. . | World Bank Dataset: This dataset contains information about economic indicators from various countries, such as GDP, population, and poverty rates. It is a great dataset for learning how to manipulate and analyze large datasets using pandas. . | . | These are just a few examples of the many datasets that are suitable for learning pandas. The best dataset for you will depend on your interests and the specific skills you want to develop. . Follow up question, &quot;where can I find Titanic data set?&quot; . | The Titanic dataset is a popular dataset for data analysis and machine learning, and it can be found on various websites and data repositories. Here are a few places where you can find the Titanic dataset:- Kaggle: The Titanic dataset is available on Kaggle, which is a popular platform for data scientists and machine learning enthusiasts. You can download the dataset from the Kaggle website after creating an account. . UCI Machine Learning Repository: The Titanic dataset is also available on the UCI Machine Learning Repository, which is a collection of datasets that are commonly used for machine learning research. You can download the dataset from the UCI Machine Learning Repository website. . | Seaborn library: If you have the Seaborn library installed in your Python environment, you can load the Titanic dataset directly from the library using the following code: . import seaborn as sns titanic_data = sns.load_dataset(&#39;titanic&#39;) . | . | . Titanic Data . Look at a sample of data. . import seaborn as sns # Load the titanic dataset titanic_data = sns.load_dataset(&#39;titanic&#39;) print(&quot;Titanic Data&quot;) print(titanic_data.columns) # titanic data set print(titanic_data[[&#39;survived&#39;,&#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;class&#39;, &#39;fare&#39;, &#39;embark_town&#39;]]) # look at selected columns . Titanic Data Index([&#39;survived&#39;, &#39;pclass&#39;, &#39;sex&#39;, &#39;age&#39;, &#39;sibsp&#39;, &#39;parch&#39;, &#39;fare&#39;, &#39;embarked&#39;, &#39;class&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;deck&#39;, &#39;embark_town&#39;, &#39;alive&#39;, &#39;alone&#39;], dtype=&#39;object&#39;) survived pclass sex age sibsp parch class fare 0 0 3 male 22.0 1 0 Third 7.2500 1 1 1 female 38.0 1 0 First 71.2833 2 1 3 female 26.0 0 0 Third 7.9250 3 1 1 female 35.0 1 0 First 53.1000 4 0 3 male 35.0 0 0 Third 8.0500 .. ... ... ... ... ... ... ... ... 886 0 2 male 27.0 0 0 Second 13.0000 887 1 1 female 19.0 0 0 First 30.0000 888 0 3 female NaN 1 2 Third 23.4500 889 1 1 male 26.0 0 0 First 30.0000 890 0 3 male 32.0 0 0 Third 7.7500 embark_town 0 Southampton 1 Cherbourg 2 Southampton 3 Southampton 4 Southampton .. ... 886 Southampton 887 Southampton 888 Southampton 889 Cherbourg 890 Queenstown [891 rows x 9 columns] . Use Pandas to clean the data. Most analysis, like Machine Learning or even Pandas in general like data to be in standardized format. This is called &#39;Training&#39; or &#39;Cleaning&#39; data. . # Preprocess the data from sklearn.preprocessing import OneHotEncoder td = titanic_data td.drop([&#39;alive&#39;, &#39;who&#39;, &#39;adult_male&#39;, &#39;class&#39;, &#39;embark_town&#39;, &#39;deck&#39;], axis=1, inplace=True) td.dropna(inplace=True) td[&#39;sex&#39;] = td[&#39;sex&#39;].apply(lambda x: 1 if x == &#39;male&#39; else 0) td[&#39;alone&#39;] = td[&#39;alone&#39;].apply(lambda x: 1 if x == True else 0) # Encode categorical variables enc = OneHotEncoder(handle_unknown=&#39;ignore&#39;) enc.fit(td[[&#39;embarked&#39;]]) onehot = enc.transform(td[[&#39;embarked&#39;]]).toarray() cols = [&#39;embarked_&#39; + val for val in enc.categories_[0]] td[cols] = pd.DataFrame(onehot) td.drop([&#39;embarked&#39;], axis=1, inplace=True) td.dropna(inplace=True) print(td) . survived pclass sex age sibsp parch fare alone embarked_C 0 0 3 1 22.0 1 0 7.2500 0 0.0 1 1 1 0 38.0 1 0 71.2833 0 1.0 2 1 3 0 26.0 0 0 7.9250 1 0.0 3 1 1 0 35.0 1 0 53.1000 0 0.0 4 0 3 1 35.0 0 0 8.0500 1 0.0 .. ... ... ... ... ... ... ... ... ... 705 0 2 1 39.0 0 0 26.0000 1 0.0 706 1 2 0 45.0 0 0 13.5000 1 0.0 707 1 1 1 42.0 0 0 26.2875 1 0.0 708 1 1 0 22.0 0 0 151.5500 1 0.0 710 1 1 0 24.0 0 0 49.5042 1 1.0 embarked_Q embarked_S 0 0.0 1.0 1 0.0 0.0 2 0.0 1.0 3 0.0 1.0 4 0.0 1.0 .. ... ... 705 0.0 1.0 706 0.0 1.0 707 1.0 0.0 708 0.0 1.0 710 0.0 0.0 [564 rows x 11 columns] . The result of &#39;Training&#39; data is making it easier to analyze or make conclusions. In looking at the Titanic, as you clean you would probably want to make assumptions on likely chance of survival. . This would involve analyzing various factors (such as age, gender, class, etc.) that may have affected a person&#39;s chances of survival, and using that information to make predictions about whether an individual would have survived or not. . Data description:- Survival - Survival (0 = No; 1 = Yes). Not included in test.csv file. - Pclass - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd) . Name - Name | Sex - Sex | Age - Age | Sibsp - Number of Siblings/Spouses Aboard | Parch - Number of Parents/Children Aboard | Ticket - Ticket Number | Fare - Passenger Fare | Cabin - Cabin | Embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton) | . | Perished Mean/Average . | . print(titanic_data.query(&quot;survived == 0&quot;).mean()) . survived 0.000000 pclass 2.464072 sex 0.844311 age 31.073353 sibsp 0.562874 parch 0.398204 fare 24.835902 alone 0.616766 embarked_C 0.185629 embarked_Q 0.038922 embarked_S 0.775449 dtype: float64 . Survived Mean/Average | . print(td.query(&quot;survived == 1&quot;).mean()) . survived 1.000000 pclass 1.878261 sex 0.326087 age 28.481522 sibsp 0.504348 parch 0.508696 fare 50.188806 alone 0.456522 embarked_C 0.152174 embarked_Q 0.034783 embarked_S 0.813043 dtype: float64 . Survived Max and Min Stats . print(td.query(&quot;survived == 1&quot;).max()) print(td.query(&quot;survived == 1&quot;).min()) . survived 1.0000 pclass 3.0000 sex 1.0000 age 80.0000 sibsp 4.0000 parch 5.0000 fare 512.3292 alone 1.0000 embarked_C 1.0000 embarked_Q 1.0000 embarked_S 1.0000 dtype: float64 survived 1.00 pclass 1.00 sex 0.00 age 0.75 sibsp 0.00 parch 0.00 fare 0.00 alone 0.00 embarked_C 0.00 embarked_Q 0.00 embarked_S 0.00 dtype: float64 . Machine Learning . From Tutorials Point%20is,a%20consistence%20interface%20in%20Python). Scikit-learn (Sklearn) is the most useful and robust library for machine learning in Python. It provides a selection of efficient tools for machine learning and statistical modeling including classification, regression, clustering and dimensionality reduction via a consistence interface in Python.&gt; Description from ChatGPT. The Titanic dataset is a popular dataset for data analysis and machine learning. In the context of machine learning, accuracy refers to the percentage of correctly classified instances in a set of predictions. In this case, the testing data is a subset of the original Titanic dataset that the decision tree model has not seen during training......After training the decision tree model on the training data, we can evaluate its performance on the testing data by making predictions on the testing data and comparing them to the actual outcomes. The accuracy of the decision tree classifier on the testing data tells us how well the model generalizes to new data that it hasn&#39;t seen before......For example, if the accuracy of the decision tree classifier on the testing data is 0.8 (or 80%), this means that 80% of the predictions made by the model on the testing data were correct....Chance of survival could be done using various machine learning techniques, including decision trees, logistic regression, or support vector machines, among others. . Code Below prepares data for further analysis and provides an Accuracy. IMO, you would insert a new passenger and predict survival. Datasets could be used on various factors like prediction if a player will hit a Home Run, or a Stock will go up or down. Decision Trees, prediction by a piecewise constant approximation. - Logistic Regression, the probabilities describing the possible outcomes. | . | . from sklearn.model_selection import train_test_split from sklearn.tree import DecisionTreeClassifier from sklearn.linear_model import LogisticRegression from sklearn.metrics import accuracy_score # Split arrays or matrices into random train and test subsets. X = td.drop(&#39;survived&#39;, axis=1) y = td[&#39;survived&#39;] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) # Train a decision tree classifier dt = DecisionTreeClassifier() dt.fit(X_train, y_train) # Test the model y_pred = dt.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;DecisionTreeClassifier Accuracy:&#39;, accuracy) # Train a logistic regression model logreg = LogisticRegression() logreg.fit(X_train, y_train) # Test the model y_pred = logreg.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(&#39;LogisticRegression Accuracy:&#39;, accuracy) . DecisionTreeClassifier Accuracy: 0.7529411764705882 LogisticRegression Accuracy: 0.788235294117647 . /home/kaiden_do/anaconda3/lib/python3.9/site-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1): STOP: TOTAL NO. of ITERATIONS REACHED LIMIT. Increase the number of iterations (max_iter) or scale the data as shown in: https://scikit-learn.org/stable/modules/preprocessing.html Please also refer to the documentation for alternative solver options: https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression n_iter_i = _check_optimize_result( .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/03/09/AP-unit2-3.html",
            "relUrl": "/2023/03/09/AP-unit2-3.html",
            "date": " • Mar 9, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Trimester 2 Final Reflection",
            "content": "My Grade . I got a 46/50 on the Tri 1 Final Exam on College Board. | . | . Questions I Got Wrong . Question 22 | I got this wrong because I thought that the first grid didn’t work, and I was too careless to actually make sure it didn’t | I picked D, when the correct answer is A | . | Question 41 | I did not read the answer choices carefully and I realize now that for binary search, the values must be sorted. | I picked A, when the correct answer is B | . | Question 49 | I really don’t understand how I got this wrong because my answer is clearly wrong, I don’t know what happened | I picked A, when the correct answer is B | . | Question 50 | I had completely no clue what I was looking at when I first saw this question, but now that I saw the correct answers, I realize that as the list length increases, the steps taken should be as low a possible | I picked B and C, when the correct answers are A and D | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week25/2023/03/07/tri2final.html",
            "relUrl": "/markdown/week25/2023/03/07/tri2final.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab: how the files are compressed and transferred | Size, height and width, number of pixels: the time it takes to compress, how to change the size and way the image looks | Visual perception, lossy compression: lossy compression is with videos, and perhaps remove some repetitive data and it would still look the same to the visual eye | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files?:ls (lists the files and things in the directory), cat (prints the file contents), cd (changes the directory), strings (lists the human readable strings), and ed, nano, vim, gedit, emacs (lets ou edit the files)- What are the command you use in Windows terminal to access files?: dir (list directory and files), tree (lists all subdirectory and files under the parent directory and files under the subdirectory), cd (change directory), and type (lists file contents) | What are some of the major differences?: The syntax between the Windows and Linux are different. Like for ls in Linux is dir in Windows. cat and strings is in Linux, while type is in Windows. | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images?: It allows the system to search through the directory and find the correct image and correct file to display. With the wrong path, the program cant find the correct file. | How does the meta data source and label relate to Unit 5 topics?: The meta data source and label relates to the Unit 5 topics because it can hold personal and classified information in the meta data. Which could share information that wouldn&#39;t want to be shared online. | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images?: This is interesting in Jupyter Notebooks for both Pandas and Images because it allows us to render images and files in our Jupyter Notebooks which would allow us to have a better experience with Jupyter and more interactive experience. | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? This code does look like a series of steps being performed because the program is defining all of these functions then it is calling the functions in order. | Describe Grey Scale algorithm in English or Pseudo code? The Grey Scale algorithm is finding the RGB values of the each pixel in the image, then it is averageing the values and setting the pixel to the RGB value of an average of the three previous RGB values. This makes the black and white look of the image while still looking like the same image. | Describe scale image? What is before and after on pixels in three images? For the scaling of the image, the image is being set to a desired width, then the scaling percent is found by dividng the new width with the old width. Then the new hiehgt is scaled. The green square is scaled up, the second image stays the same and the last image is scaled down. | Is scale image a type of compression? If so, line it up with College Board terms described? If the image is being scaled down, it is a type of compression because it would be the combination of pixels with similiar or the same colors. This would reduce then number of bits needed to show the image, which is compression. | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:ghtop_image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . - meta data -- Green Square Internet green-square-16.png PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- scaled image -- . grey image . - meta data -- Clouds Impression Peter Carolin clouds-impression.png PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- scaled image -- . grey image - meta data -- Lassen Volcano Peter Carolin lassen-volcano.jpg JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- scaled image -- . grey image . . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.2 | . . . I got this question wrong because I just completely read and the answers wrong and I ws kind of rushing through these. So I made a careless error. . . For the binary questions, I had a little trouble and spent some time just converting decimal numbers to binary but overall I could do this one well. . Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. This picture should be transferred using lossless data compression, because it is a logo and should be able to be resized and still maintain high quality, unlike this picture of the logo. | . This picture should be sent with lossy data compression because it should be resized to fit the screen also the decrease in data is not visible to the naked eye. . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from PIL import ImageFilter from io import BytesIO import base64 import numpy as np def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Me&quot;, &#39;file&#39;: &quot;kaidenminion.jpg&quot;} ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] return images def scale_image(img): baseWidth = 250 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_green(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() image[&#39;data&#39;] = np.array(img_data) image[&#39;green_data&#39;] = [] for pixel in image[&#39;data&#39;]: if len(pixel) &gt; 3: image[&#39;green_data&#39;].append((0, pixel[1], 0, pixel[3])) else: image[&#39;green_data&#39;].append((0, pixel[1], 0)) img.putdata(image[&#39;green_data&#39;]) image[&#39;html_green&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) if __name__ == &quot;__main__&quot;: images = image_data() for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; green image -&quot;) image_management_add_html_green(image) display(HTML(image[&#39;html_green&#39;])) print() . - meta data -- Me Internet JPEG RGB Original size: (625, 1280) Scaled size: (250, 512) -- original image -- . green image - . . HAPPY FACE . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from io import BytesIO import base64 import numpy as np def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile with Thumbs&quot;, &#39;file&#39;: &quot;smile.jpg&quot;} ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] return images def scale_image(img): baseWidth = 500 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_red(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() image[&#39;data&#39;] = np.array(img_data) image[&#39;red_data&#39;] = [] for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((pixel[0]+25, average, average, pixel[3])) else: image[&#39;red_data&#39;].append((pixel[0]+25, average, average)) img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) if __name__ == &quot;__main__&quot;: images = image_data() for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; red image -&quot;) image_management_add_html_red(image) display(HTML(image[&#39;html_red&#39;])) print() . - meta data -- Smile with Thumbs Internet JPEG RGB Original size: (2500, 1875) Scaled size: (500, 375) -- original image -- . red image - . .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/03/07/AP-unit2-23.html",
            "relUrl": "/2023/03/07/AP-unit2-23.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "Unit 2.2 Data Compression, Images",
            "content": "Enumerate &quot;Data&quot; Big Idea from College Board . Some of the big ideas and vocab that you observe, talk about it with a partner ... . &quot;Data compression is the reduction of the number of bits needed to represent data&quot; | &quot;Data compression is used to save transmission time and storage space.&quot; | &quot;lossy data can reduce data but the original data is not recovered&quot; | &quot;lossless data lets you restore and recover&quot; | . The Image Lab Project contains a plethora of College Board Unit 2 data concepts. Working with Images provides many opportunities for compression and analyzing size. . Image Files and Size . Here are some Images Files. Download these files, load them into images directory under _notebooks in your Blog. - Clouds Impression . Lassen Volcano | Green Square | . Describe some of the meta data and considerations when managing Image files. Describe how these relate to Data Compression ... . File Type, PNG and JPG are two types used in this lab | Size, height and width, number of pixels | Visual perception, lossy compression | . Python Libraries and Concepts used for Jupyter and Files/Directories . Introduction to displaying images in Jupyter notebook . IPython . Support visualization of data in Jupyter notebooks. Visualization is specific to View, for the web visualization needs to be converted to HTML. . pathlib . File paths are different on Windows versus Mac and Linux. This can cause problems in a project as you work and deploy on different Operating Systems (OS&#39;s), pathlib is a solution to this problem. . What are commands you use in terminal to access files? | What are the command you use in Windows terminal to access files? | What are some of the major differences? | . Provide what you observed, struggled with, or leaned while playing with this code. . Why is path a big deal when working with images? | How does the meta data source and label relate to Unit 5 topics? | Look up IPython, describe why this is interesting in Jupyter Notebooks for both Pandas and Images? | . from IPython.display import Image, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f # prepares a series of images def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images def image_display(images): for image in images: display(Image(filename=image[&#39;filename&#39;])) # Run this as standalone tester to see sample data printed in Jupyter terminal if __name__ == &quot;__main__&quot;: # print parameter supplied image green_square = image_data(images=[{&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}]) image_display(green_square) # display default images from image_data() default_images = image_data() image_display(default_images) . Reading and Encoding Images (2 implementations follow) . PIL (Python Image Library) . Pillow or PIL provides the ability to work with images in Python. Geeks for Geeks shows some ideas on working with images. . base64 . Image formats (JPG, PNG) are often called *Binary File formats, it is difficult to pass these over HTTP. Thus, base64 converts binary encoded data (8-bit, ASCII/Unicode) into a text encoded scheme (24 bits, 6-bit Base64 digits). Thus base64 is used to transport and embed binary images into textual assets such as HTML and CSS.- How is Base64 similar or different to Binary and Hexadecimal? . Translate first 3 letters of your name to Base64. | . numpy . Numpy is described as &quot;The fundamental package for scientific computing with Python&quot;. In the Image Lab, a Numpy array is created from the image data in order to simplify access and change to the RGB values of the pixels, converting pixels to grey scale. . io, BytesIO . Input and Output (I/O) is a fundamental of all Computer Programming. Input/output (I/O) buffering is a technique used to optimize I/O operations. In large quantities of data, how many frames of input the server currently has queued is the buffer. In this example, there is a very large picture that lags. . Where have you been a consumer of buffering? | From your consumer experience, what effects have you experienced from buffering? | How do these effects apply to images? | . Data Structures, Imperative Programming Style, and working with Images . Introduction to creating meta data and manipulating images. Look at each procedure and explain the the purpose and results of this program. Add any insights or challenges as you explored this program. . Does this code seem like a series of steps are being performed? | Describe Grey Scale algorithm in English or Pseudo code? | Describe scale image? What is before and after on pixels in three images? | Is scale image a type of compression? If so, line it up with College Board terms described? | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np # prepares a series of images def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] for image in images: # File to open image[&#39;filename&#39;] = path / image[&#39;file&#39;] # file with path return images # Large image scaled to baseWidth of 320 def scale_image(img): baseWidth = 320 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) # PIL image converted to base64 def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() # Set Properties of Image, Scale, and convert to Base64 def image_management(image): # path of static images is defaulted # Image open return PIL image object img = pilImage.open(image[&#39;filename&#39;]) # Python Image Library operations image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size # Scale the Image img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size # Scaled HTML image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) # Create Grey Scale Base64 representation of Image def image_management_add_html_grey(image): # Image open return PIL image object img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() # Reference https://www.geeksforgeeks.org/python-pil-image-getdata/ image[&#39;data&#39;] = np.array(img_data) # PIL image to numpy array image[&#39;gray_data&#39;] = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in image[&#39;data&#39;]: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: image[&#39;gray_data&#39;].append((average, average, average, pixel[3])) # PNG format else: image[&#39;gray_data&#39;].append((average, average, average)) # end for loop for pixels img.putdata(image[&#39;gray_data&#39;]) image[&#39;html_grey&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: # Use numpy to concatenate two arrays images = image_data() # Display meta data, scaled view, and grey scale for each image for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; grey image -&quot;) image_management_add_html_grey(image) display(HTML(image[&#39;html_grey&#39;])) print() . - meta data -- Green Square Internet PNG RGBA Original size: (16, 16) Scaled size: (320, 320) -- original image -- . grey image - . - meta data -- Clouds Impression Peter Carolin PNG RGBA Original size: (320, 234) Scaled size: (320, 234) -- original image -- . grey image - . - meta data -- Lassen Volcano Peter Carolin JPEG RGB Original size: (2792, 2094) Scaled size: (320, 240) -- original image -- . grey image - . . Data Structures and OOP . Most data structures classes require Object Oriented Programming (OOP). Since this class is lined up with a College Course, OOP will be talked about often. Functionality in remainder of this Blog is the same as the prior implementation. Highlight some of the key difference you see between imperative and oop styles. . Read imperative and object-oriented programming on Wikipedia | Consider how data is organized in two examples, in relations to procedures | Look at Parameters in Imperative and Self in OOP | . Additionally, review all the imports in these three demos. Create a definition of their purpose, specifically these ... . PIL | numpy | base64 | . from IPython.display import HTML, display from pathlib import Path # https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f from PIL import Image as pilImage # as pilImage is used to avoid conflicts from io import BytesIO import base64 import numpy as np class Image_Data: def __init__(self, source, label, file, path, baseWidth=320): self._source = source # variables with self prefix become part of the object, self._label = label self._file = file self._filename = path / file # file with path self._baseWidth = baseWidth # Open image and scale to needs self._img = pilImage.open(self._filename) self._format = self._img.format self._mode = self._img.mode self._originalSize = self.img.size self.scale_image() self._html = self.image_to_html(self._img) self._html_grey = self.image_to_html_grey() @property def source(self): return self._source @property def label(self): return self._label @property def file(self): return self._file @property def filename(self): return self._filename @property def img(self): return self._img @property def format(self): return self._format @property def mode(self): return self._mode @property def originalSize(self): return self._originalSize @property def size(self): return self._img.size @property def html(self): return self._html @property def html_grey(self): return self._html_grey # Large image scaled to baseWidth of 320 def scale_image(self): scalePercent = (self._baseWidth/float(self._img.size[0])) scaleHeight = int((float(self._img.size[1])*float(scalePercent))) scale = (self._baseWidth, scaleHeight) self._img = self._img.resize(scale) # PIL image converted to base64 def image_to_html(self, img): with BytesIO() as buffer: img.save(buffer, self._format) return &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % base64.b64encode(buffer.getvalue()).decode() # Create Grey Scale Base64 representation of Image def image_to_html_grey(self): img_grey = self._img numpy = np.array(self._img.getdata()) # PIL image to numpy array grey_data = [] # key/value for data converted to gray scale # &#39;data&#39; is a list of RGB data, the list is traversed and hex and binary lists are calculated and formatted for pixel in numpy: # create gray scale of image, ref: https://www.geeksforgeeks.org/convert-a-numpy-array-to-an-image/ average = (pixel[0] + pixel[1] + pixel[2]) // 3 # average pixel values and use // for integer division if len(pixel) &gt; 3: grey_data.append((average, average, average, pixel[3])) # PNG format else: grey_data.append((average, average, average)) # end for loop for pixels img_grey.putdata(grey_data) return self.image_to_html(img_grey) # prepares a series of images, provides expectation for required contents def image_data(path=Path(&quot;images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Green Square&quot;, &#39;file&#39;: &quot;green-square-16.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Clouds Impression&quot;, &#39;file&#39;: &quot;clouds-impression.png&quot;}, {&#39;source&#39;: &quot;Peter Carolin&quot;, &#39;label&#39;: &quot;Lassen Volcano&quot;, &#39;file&#39;: &quot;lassen-volcano.jpg&quot;} ] return path, images # turns data into objects def image_objects(): id_Objects = [] path, images = image_data() for image in images: id_Objects.append(Image_Data(source=image[&#39;source&#39;], label=image[&#39;label&#39;], file=image[&#39;file&#39;], path=path, )) return id_Objects # Jupyter Notebook Visualization of Images if __name__ == &quot;__main__&quot;: for ido in image_objects(): # ido is an Imaged Data Object print(&quot;- meta data --&quot;) print(ido.label) print(ido.source) print(ido.file) print(ido.format) print(ido.mode) print(&quot;Original size: &quot;, ido.originalSize) print(&quot;Scaled size: &quot;, ido.size) print(&quot;-- scaled image --&quot;) display(HTML(ido.html)) print(&quot; grey image &quot;) display(HTML(ido.html_grey)) print() . Hacks . Early Seed award . Add this Blog to you own Blogging site. | In the Blog add a Happy Face image. | Have Happy Face Image open when Tech Talk starts, running on localhost. Don&#39;t tell anyone. Show to Teacher. | . AP Prep . In the Blog add notes and observations on each code cell that request an answer. | In blog add College Board practice problems for 2.3 | Choose 2 images, one that will more likely result in lossy data compression and one that is more likely to result in lossless data compression. Explain. | . Project Addition . If your project has images in it, try to implement an image change that has a purpose. (Ex. An item that has been sold out could become gray scale) | . Pick a programming paradigm and solve some of the following ... . Numpy, manipulating pixels. As opposed to Grey Scale treatment, pick a couple of other types like red scale, green scale, or blue scale. We want you to be manipulating pixels in the image. | Binary and Hexadecimal reports. Convert and produce pixels in binary and Hexadecimal and display. | Compression and Sizing of images. Look for insights into compression Lossy and Lossless. Look at PIL library and see if there are other things that can be done. | There are many effects you can do as well with PIL. Blur the image or write Meta Data on screen, aka Title, Author and Image size. | . HAPPY FACE . from IPython.display import HTML, display from pathlib import Path from PIL import Image as pilImage from io import BytesIO import base64 import numpy as np def image_data(path=Path(&quot;ghtop_images/&quot;), images=None): # path of static images is defaulted if images is None: # default image images = [ {&#39;source&#39;: &quot;Internet&quot;, &#39;label&#39;: &quot;Smile with Thumbs&quot;, &#39;file&#39;: &quot;smile.jpg&quot;} ] for image in images: image[&#39;filename&#39;] = path / image[&#39;file&#39;] return images def scale_image(img): baseWidth = 500 scalePercent = (baseWidth/float(img.size[0])) scaleHeight = int((float(img.size[1])*float(scalePercent))) scale = (baseWidth, scaleHeight) return img.resize(scale) def image_to_base64(img, format): with BytesIO() as buffer: img.save(buffer, format) return base64.b64encode(buffer.getvalue()).decode() def image_management(image): img = pilImage.open(image[&#39;filename&#39;]) image[&#39;format&#39;] = img.format image[&#39;mode&#39;] = img.mode image[&#39;size&#39;] = img.size img = scale_image(img) image[&#39;pil&#39;] = img image[&#39;scaled_size&#39;] = img.size image[&#39;html&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(image[&#39;pil&#39;], image[&#39;format&#39;]) def image_management_add_html_red(image): img = image[&#39;pil&#39;] format = image[&#39;format&#39;] img_data = img.getdata() image[&#39;data&#39;] = np.array(img_data) image[&#39;red_data&#39;] = [] for pixel in image[&#39;data&#39;]: average = (pixel[0] + pixel[1] + pixel[2]) // 3 if len(pixel) &gt; 3: image[&#39;red_data&#39;].append((pixel[0]+25, average, average, pixel[3])) else: image[&#39;red_data&#39;].append((pixel[0]+25, average, average)) img.putdata(image[&#39;red_data&#39;]) image[&#39;html_red&#39;] = &#39;&lt;img src=&quot;data:image/png;base64,%s&quot;&gt;&#39; % image_to_base64(img, format) if __name__ == &quot;__main__&quot;: images = image_data() for image in images: image_management(image) print(&quot;- meta data --&quot;) print(image[&#39;label&#39;]) print(image[&#39;source&#39;]) print(image[&#39;format&#39;]) print(image[&#39;mode&#39;]) print(&quot;Original size: &quot;, image[&#39;size&#39;]) print(&quot;Scaled size: &quot;, image[&#39;scaled_size&#39;]) print(&quot;-- original image --&quot;) display(HTML(image[&#39;html&#39;])) print(&quot; red image -&quot;) image_management_add_html_red(image) display(HTML(image[&#39;html_red&#39;])) print() . - meta data -- Smile with Thumbs Internet JPEG RGB Original size: (2500, 1875) Scaled size: (500, 375) -- original image -- . red image - . .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/03/07/AP-unit2-2.html",
            "relUrl": "/2023/03/07/AP-unit2-2.html",
            "date": " • Mar 7, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "CPT Write Up",
            "content": "3a. . 3.a.i. . This program is meant to provide users a way to efficiently use their time and improve their productivity. . 3.a.ii. . In the video the user can input numbers and operation signs and the program would either output the answer to the expression or tell the user to try again with proper inputs. The program allows users to edit previous entries or delete them all. . 3.a.iii. . The input of the program is a string of the desired equation to be solved. The user can input letters and signs. It also takes input from the user through the many buttons on the screen. The output as seen in the video is the answer to the expression. . 3b. . 3.b.i. . . 3.b.ii. . . 3.b.iii. . The name of the list being used is called positions. . 3.b.iv. . The data contained in the list represents the positions of where the operator signs are in the expression that the user inputted. The positions are used to find out what the operators and the separate numbers the user wants to calculate with. . 3.b.v. . The list manages complexity in my code because without it, I would have to write much more code of the program going through the user input, looking for the signs, then the numbers. This would mean the program would need to look for operators each time it wanted to find a new number, and do this until there are no longer any more operators, then the program would have to differentiate the operators from the numbers. Finally the program would be able to calculate the result. . 3.c. . 3.c.i. . . 3.c.ii. . . 3.c.iii. . The procedure takes the numbers and operators from previous functions and uses it to calculate the expression. The function first begins with the first number, then uses the lists of each of the numbers and operators, and iterates through them and selects to determine whether to add, subtract, multiply, or divide. After determining the operator, it iterates to the next number and does the function, it iterates through the whole list and loops the process until it is finished. This allows the user to find the result of their problem. . 3.c.iv. . First the function has two parameters of numbers and operators, which are lists of the numbers and operators.Then the program takes the first number and declares the total to be the first number. Then in a for loop, the program would loop the following process the same amount of times as the terms in the operators list. It would declare the operator in the loop to be the i’th term of the list and the number in the loop to be the i+1’th term since the first number was already in the total. There would be if and else if and else statements to determine which operation must take place. And in each statement would be the respective operation to add, subtract, multiply or divide the next number to the previous total. Once the total is found, there is another for loop that adds onto a string that would first add the first number, then iterate through the rest of the operators and numbers to prepare the expression and result to be outputted to the user. . 3.d . 3.d.i. . Call One The first call would be: solve(numbers, operators) With numbers = [1,3] and operators = [0] | . | Call Two The second call would be: solve(numbers, operators) With numbers = [15,3] and operators = [3] 3.d.ii. . | . | Condition(s) tested by Call One The condition tested in Call One is to see the operator is equal to 0. It tests this to determine if it should add or not add, subtract or not subtract, multiply or not multiply, divide or not divide. | . | Condition(s) tested by Call Two The condition tested in Call One is to see the operator is equal to 3. It tests this to determine if it should add or not add, subtract or not subtract, multiply or not multiply, divide or not divide. 3.d.iii. . | . | Results of Call One The result of call one would be 1+3 = 4. This shows that it is determined to add, not to subtract, not to multiply, and not to divide. So it added the two numbers together and outputted the plus sign. | . | Results of Call Two The result of call one would be 15/3 = 5. This shows that it is determined not to add, not to subtract, not to multiply, but to divide. So it divided the two numbers and outputted the divide sign. | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week24/2023/02/27/CPTWriteUp.html",
            "relUrl": "/markdown/week24/2023/02/27/CPTWriteUp.html",
            "date": " • Feb 27, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Night At the Museum Reflection Trimester 2",
            "content": "Our Project . While presenting our project our features had good reactions | Someone gave a suggesting to add modulus and attempt to add order of operations | They also liked the map | People were alo actively participating in filling out our timers, notebooks, and todo lists. | People like Yasha and Amay’s friend were interested in our project | Here is a photo of our project at the N@tM: | . Other People’s Projects . Yumi The project was about some food and calorie calculator | The user would add food and their calories and the food type it it would be stored as saved nutrition | Very cool project, I liked the red theme in the frontpage | . | Formula 1 Betting In this project you would enter a race day and name and the season | Then you would bet some coins on the winner | I think this project is pretty cool because Formula 1 is pretty popular right now I also like the frontend because of the appealing UI | Soma and Aadit did a great job presenting this project. | . | Dolphin Fitness This project is a fitness tracker and the theme is a dolphin | The frontend is simple but nice | Users would login and they could log workouts | Also they could find workouts nad exercises for certain muscles | They would also calculate and record their calories in the calorie management slide | This project was very helpful for people who go to the gym and I think it was cool | Here is Finn presenting their project and Paaras presenting his calorie management feature | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week23/2023/02/16/NightAtTheMuseum.html",
            "relUrl": "/markdown/week23/2023/02/16/NightAtTheMuseum.html",
            "date": " • Feb 16, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "Big Idea 5.5 and Big Idea 5.6 Reflection",
            "content": "Big Idea 5.5 . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. The different license types in this Tech Talk are Creative Commons Zero v1.0 Universal, Open Source MIT License, and Open Source GPL License. The Creative Commons Zero v1.0 Universal license is doesn’t allow copyrighting and it is given out for public use. The Open Source MIT License is when closed source can be distributed and the owner wants credit for the work. In the Open Source GPL License it allows the owner to do whatever to the project except distribute the the closed sources. | . | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. Personally I think that we should use the Open Source GPL License for our GitHub Projects. The legality and ethicality of the sources is that we should credit the owners of the source we use from other code.Music and movies companies have Digital Rights on their content to protect it from being pirated and it regulate their ownership over the content. In this class we can use Creative Commons software because we are using it for education and because it is free for all use. Open source code is free, so businesses don’t make their licenses open source, but they need the open source code online in order to do well. | . | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. For my own personal blog I made my repository a Open Source GPL license. We also made the license for the group repository a Open Source GPL License. We chose this license because it allows our code to be open for anyone’s use but it doesn’t allow anyone to distribute our closed sources of the code. | . | Big Idea 5.6 . Describe PII you have seen on project in CompSci Principles. The PII I have seen on project in CSP is that we know each other’s names, emails, photos, education, and for some, birth date, addresses and phone numbers. I have seen these on project in CSP because we display it on our github projects. | . | What are your feelings about PII and your personal exposure? I think that we should be mindful of what we put online because of the PII. I think it is fine to share our names and email, but we should not share private things like social security numbers, passwords, and other private things. But these PII may be good for companies to make their websites cater to our interests to improve their website’s popularity. | . | Describe good and bad passwords? What is another step that is used to assist in authentication. A good password is one that has many different types of characters: uppercase, lowercase, numbers, symbols, and punctuation. A bad password is like full words, passwords, pet names, and things that are easily known by others. Another step to assist authentication is two factor authentication. This means that two devices are needed to sign into an account. | . | Try to describe Symmetric and Asymmetric encryption. Symmetric encryption is where one secret key encrypts and decrypts the information. Asymmetric encryption uses two keys, a public and private to encrypt and decrypt the information. | . | Provide an example of encryption we used in AWS deployment. An example of encryption we used in AWS deployment is the SSL encryption. And this uses both the symmetric and the asymmetric encryption. | . | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. I have not learned the hard way with a phishing scheme because most of the phishing emails I receive go to the spam. But when I do see one, I read the email and see that it is a phishing scam. But one time a friend of mine got hacked on Discord and they sent file and I almost clicked it. Some phishing techniques are sending emails pretending to be big companies. Also by hacking peoples accounts and sending links to people they know. | . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week22/2023/02/08/BIGIDEA5.5and6.html",
            "relUrl": "/markdown/week22/2023/02/08/BIGIDEA5.5and6.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post9": {
            "title": "Big Idea 5.4 Crowdsourcing",
            "content": "Hacks . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? A crowdsource idea that we could use in out environment is a big repositiory that everyone in the class can edit. This would be helpful for the class because if people had trouble completing an assignment, they could look at another person’s project for inspiration and an idea for what to do. | . | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? For Del Norte crowdsourcing there could be a big forum that would have a bunch of assignments with answers to it and information on the topic that is important. This would be good for the project because there would be a lot of information about things and people would have more ideas and information that they may have missed when they first learned about the topic. | . | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. The data you could capture at the Night at the Museum to make the evening interesting is maybe a top 3 projects and why they like it. This would be better for the finals project because it would help improve the faults of the project and it would make the project a lot more composed and a lot better. | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week21/2023/02/01/crowdsourcing.html",
            "relUrl": "/markdown/week21/2023/02/01/crowdsourcing.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post10": {
            "title": "Big Idea 5.3 Computing Bias",
            "content": "Intentional or Purposeful bias (Crossover Group Up, 10 minutes) . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? Ages 25-34 use Facebook | Ages 10-19 use TikTok | This data shows that Facebook is focused towards older audiences, possible more mature audiences. TikTok is more for younger audiences because they are more attracted to the ease of use of the app and the short funny videos. | The difference may be because of the times the social media apps were made | I think TikTok is being attracted to most ages, but Facebook is not because the younger generation is not interested in it. | . | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? Female voices are used as virtual assistants because it may be more softer and less assertive compared to a masculine voice | It may also be from the subconcious gender role of the past where women are supposed to help men and do things for them | It may be offending to women and men in the world | It has been corrected for some virtual assistants because you can pick the voices you wnat the assistant to be | But things like Alexa cannot change the voice | . | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple,Netflix, Google) These companies have an algorithm that would suggest ads and videos based on your previous choices and actions on the website | This may be good but it might be seen as an invasion of privacy | This shouldn’t be fixed though because it is helpful for users and it helps the user find things that they are more interested in | . | . As Pairs (5 minutes) . Does the owner of the computer think this was intentional? The owner of the computer thinks this was intentional because he is saying that HP computers is purposely not recognizing his face. | . | If yes or no, justify you conclusion. He thinks this because when he put his face in the camera, the computer did not recognize his face and it does not move to follow his face. He claims this is racist because the white woman’s face was recognized, while his face was not followed. | . | How do you think this happened? I think this happened due to not enough tests done by HP. They did not test the stuff on people of different skin complexion. | . | Is this harmful? Was it intended to be harmful or exclude? I think this may not be harmful, but it would be more offensive to those with darker skin because the feature does not work on their skin. | . | Should it be corrected? It should be corrected because it is not fair for those with darker skin, while those with lighter skin, it does work. This should be fixed to work on all skin complexions. | . | What would you or should you do to produce a better outcome? To produce a better outcome, the HP people should use resources of people with darker skin complexion, not only light complexion people. | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week21/2023/02/01/Bias.html",
            "relUrl": "/markdown/week21/2023/02/01/Bias.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post11": {
            "title": "Individual Project Blog",
            "content": "Questions: . Each individual performs starts “pre-view” outline/write-up of materials required for College Board. For the College Board Performance Task, I need to make sure to complete all of the required parameters for a full score. My video must show the input, output, and the program functioning. The written response must include many things. It needs to describe the purpose, functionality, and inputs and outputs of the program. It need a list that stores data, and that list needs to be used somewhere else in the program. There also must be a list that manages complexity and describe how the list is important and how the program would function differently without it. The program needs a procedure with a parameter and an impact on the program, and it needs to be used in the program. The algorithm needs sequencing, selection, and iteration. The algorithm must be explained to rewrite it. Last, the written response needs to show tests on two arguments on a condition, and describe the results. | . | Describe portion of Project you will use for Create Performance task The portion of the Project I will use for the Create Performance task is my calculator feature from the SAAKD Productivity Corp. (SPC) | . | Describe code plan as it is required for CB, My code plan is to have function that would take the user’s expression and look for the signs in the expression. Then it would separate the expression into each specific number and operand. These would be stored in a list. Then another function would use the previous two lists to determine to add, subtract, multiply, and divide the numbers in the list, this will be iterated until all numbers and signs are used. This would give the result, which would be displayed on the screen. This is data abstraction because the list of the number and signs save space because it stores the data in a list instead of in individual variables. This is managing complexity because the data from the list would be iterated through quickly instead of a slower and more complex and inefficient method. | . | Consider what will be demonstrated in video, aka video plan In the video I will show a recording of the calculator receiving input from the user. Then When the user presses the equals button, the program would display the answer to the expression inputted. Then I would show the an improper input being rejected and a previous entry being edited and recalculated. This would show input, program functionality, and output. | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week20/2023/01/28/ProjectBlog.html",
            "relUrl": "/markdown/week20/2023/01/28/ProjectBlog.html",
            "date": " • Jan 28, 2023"
        }
        
    
  
    
        ,"post12": {
            "title": "Multiple Choice Questions 2 Test Corrections",
            "content": "My Grade . I got a 49/50 on my test. . I got this question wrong because I just made an error. This is because I knew that the answer must have an equal number of returns and borrows, but I thought that if the product was equal, it meant the borrows and returns would be equal. But I was wrong and I got the question wrong, but I got the other choice correct. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week20/2023/01/24/MCQ-2Correction.html",
            "relUrl": "/markdown/week20/2023/01/24/MCQ-2Correction.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post13": {
            "title": "Big Idea 5.1 and Big Idea 5.2 Reflection",
            "content": "Big Idea 5.1 and 5.2 . Think of three beneficial effects of your projects based on 5.1 Unit The calculator can help users quickly and easily calculate mathematics. | The todo list and notes can help users organize their thoughts and their assignments to ocmplete and to study. | The timer can help the student record and help plan future schedules based on assignments that have been previously timed. | . | Think of a potential harmful effect of your project. A potential harmful effect of my project is that the calculator can cause users to lose their ability to do simple math and make them solely dependant on the calculator. | . | Answer with an opinion and learnings so far this year: What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? The pros and cons of the school blocking websites at school are both good and bad. For the pros, students are required to stay focused during school and cannot wander off on their devices onto websites that have video games on them. A con is that when the student needs to access certain sites, the school may have blocked it due to a filter, but the site is actually educational. Another pro is that the teacher can somewhat regulate the classroom when they are on their devices. A con is that when the teacher has prepared some material and the website is blocked on school WiFi, the whole lesson is ruined. | . | What concerns do you have personally about the digital divide? For yourself or for others. The concerns I have personally about the digital divide is that for me I may not be able to have the technological resources that other students from more affluent neighborhoods and schools have access to. For example, I do not have a powerful laptop, so my ability to learn certain things is limited due to the digital divide. A concern for others about the digital divide, is that people on poorer status than mine, or in a thrid world country is unable to efficiently and properly learn about technology. This extends to that they cannot learn as efficiently at all, because websites like Canvas and Google Drive are very helpful in learning, but poorer people may not have access to these resources and they cannot learn as much as people in Del Norte High School. | . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week20/2023/01/24/5.1&5.2Reflection.html",
            "relUrl": "/markdown/week20/2023/01/24/5.1&5.2Reflection.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post14": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; def __dir__(self): return [&quot;name&quot;, &quot;uid&quot;] # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Test 1, find user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$VZ6...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$5mG...&#34; * name: &#34;Alexander Graham Bell&#34;, id: &#34;lex&#34;, psw: &#34;sha256$50p...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$qpx...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$Qrr...&#34; Test 2, change user 3 name: &#34;Thomas Edison&#34;, id: &#34;toby&#34;, psw: &#34;sha256$VZ6...&#34; name: &#34;Nicholas Tesla&#34;, id: &#34;nick&#34;, psw: &#34;sha256$5mG...&#34; * name: &#34;John Mortensen&#34;, id: &#34;jm1021&#34;, psw: &#34;sha256$rXF...&#34; name: &#34;Eli Whitney&#34;, id: &#34;eli&#34;, psw: &#34;sha256$qpx...&#34; name: &#34;Hedy Lemarr&#34;, id: &#34;hedy&#34;, psw: &#34;sha256$Qrr...&#34; Test 3, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$VZ6YE3wOIKULazyt$67f2b4ad2470130819590b895b77c0dc593c2c0a1f1d0cbb6f716b250ebc7b9c&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$5mGpLjBkE8isXPtN$2818a6d2924984c1064a835ef291304fe2157c3019ac84be00b928e7882b90f9&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$rXFrLFStOrylsCS5$c00b00b23720c426299a68f67be0a31d80b4181de13ddf549d6e07b7a293bec5&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$qpxtmahbzDD5kLpc$9e26c77bd2811f27f554ddecd36a6bf24a805e1936627c10e05ee1ba3e508bd0&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$QrriRqg3xp5GNkFQ$ea6642c3ad6db03094bb69e72b42f6d78e816ff3f3ead8f90da702580cecb151&#34;}] Test 4, make a dictionary [{&#34;_name&#34;: &#34;Thomas Edison&#34;, &#34;_uid&#34;: &#34;toby&#34;, &#34;_password&#34;: &#34;sha256$VZ6YE3wOIKULazyt$67f2b4ad2470130819590b895b77c0dc593c2c0a1f1d0cbb6f716b250ebc7b9c&#34;}, {&#34;_name&#34;: &#34;Nicholas Tesla&#34;, &#34;_uid&#34;: &#34;nick&#34;, &#34;_password&#34;: &#34;sha256$5mGpLjBkE8isXPtN$2818a6d2924984c1064a835ef291304fe2157c3019ac84be00b928e7882b90f9&#34;}, {&#34;_name&#34;: &#34;John Mortensen&#34;, &#34;_uid&#34;: &#34;jm1021&#34;, &#34;_password&#34;: &#34;sha256$rXFrLFStOrylsCS5$c00b00b23720c426299a68f67be0a31d80b4181de13ddf549d6e07b7a293bec5&#34;}, {&#34;_name&#34;: &#34;Eli Whitney&#34;, &#34;_uid&#34;: &#34;eli&#34;, &#34;_password&#34;: &#34;sha256$qpxtmahbzDD5kLpc$9e26c77bd2811f27f554ddecd36a6bf24a805e1936627c10e05ee1ba3e508bd0&#34;}, {&#34;_name&#34;: &#34;Hedy Lemarr&#34;, &#34;_uid&#34;: &#34;hedy&#34;, &#34;_password&#34;: &#34;sha256$QrriRqg3xp5GNkFQ$ea6642c3ad6db03094bb69e72b42f6d78e816ff3f3ead8f90da702580cecb151&#34;}] . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) . Hacks . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, uid, password, dob): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password},dob={self._dob})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11)) u2 = User(name=&#39;Safin Singh&#39;, uid=&#39;saf&#39;, password=&#39;123saf&#39;, dob=date(2006, 7, 13)) u3 = User(name=&#39;Alex Kumar&#39;, uid=&#39;ale&#39;, password=&#39;123ale&#39;, dob=date(2005, 2, 11)) u4 = User(name=&#39;Amay Advani&#39;, uid=&#39;ama&#39;, password=&#39;123ama&#39;, dob=date(2002, 9, 11)) u5 = User(name=&#39;Kaiden Do&#39;, uid=&#39;kai&#39;, password=&#39;123kai&#39;, dob=date(2006, 9, 10)) users = [u1, u2, u3, u4, u5] for x in users: print(x.name.upper()+&quot;:&quot;) print(&quot; t Name:&quot;, x.name) print(&quot; t User ID:&quot;, x.uid) print(&quot; t Date of Birth:&quot;, x.dob) print(&quot; t Age:&quot;, x.age, &quot;years old n&quot;) print(&quot;JSON ready string: n t&quot;, x, &quot; n&quot;) print(&quot;Raw Variables of object: n t&quot;, vars(x), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n t&quot;, dir(x), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n t&quot;, repr(x), &quot; n&quot;) . THOMAS EDISON: Name: Thomas Edison User ID: toby Date of Birth: 02-11-1847 Age: 175 years old JSON ready string: {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175} Raw Variables of object: {&#39;_name&#39;: &#39;Thomas Edison&#39;, &#39;_uid&#39;: &#39;toby&#39;, &#39;_password&#39;: &#39;sha256$a4SZLh3BvcHoy7Ue$33dcde46b12950438e42fedcffdf0464f0913f2a1c9c95995e3e1b4a1e3e987d&#39;, &#39;_dob&#39;: datetime.date(1847, 2, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Thomas Edison, uid=toby, password=sha256$a4SZLh3BvcHoy7Ue$33dcde46b12950438e42fedcffdf0464f0913f2a1c9c95995e3e1b4a1e3e987d,dob=1847-02-11) SAFIN SINGH: Name: Safin Singh User ID: saf Date of Birth: 07-13-2006 Age: 16 years old JSON ready string: {&#34;name&#34;: &#34;Safin Singh&#34;, &#34;uid&#34;: &#34;saf&#34;, &#34;dob&#34;: &#34;07-13-2006&#34;, &#34;age&#34;: 16} Raw Variables of object: {&#39;_name&#39;: &#39;Safin Singh&#39;, &#39;_uid&#39;: &#39;saf&#39;, &#39;_password&#39;: &#39;sha256$Gv0WFy0xcw6HDmul$f6921ce144052d5e0339c4aae3ff73a9af29356620f4509e1794cc6abc32f208&#39;, &#39;_dob&#39;: datetime.date(2006, 7, 13)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Safin Singh, uid=saf, password=sha256$Gv0WFy0xcw6HDmul$f6921ce144052d5e0339c4aae3ff73a9af29356620f4509e1794cc6abc32f208,dob=2006-07-13) ALEX KUMAR: Name: Alex Kumar User ID: ale Date of Birth: 02-11-2005 Age: 17 years old JSON ready string: {&#34;name&#34;: &#34;Alex Kumar&#34;, &#34;uid&#34;: &#34;ale&#34;, &#34;dob&#34;: &#34;02-11-2005&#34;, &#34;age&#34;: 17} Raw Variables of object: {&#39;_name&#39;: &#39;Alex Kumar&#39;, &#39;_uid&#39;: &#39;ale&#39;, &#39;_password&#39;: &#39;sha256$JiuNZyco2HK5Jhgu$4f72d7c07584d4b8911a6ec71a046d077076c79072ab9458bab3e407edc263b9&#39;, &#39;_dob&#39;: datetime.date(2005, 2, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Alex Kumar, uid=ale, password=sha256$JiuNZyco2HK5Jhgu$4f72d7c07584d4b8911a6ec71a046d077076c79072ab9458bab3e407edc263b9,dob=2005-02-11) AMAY ADVANI: Name: Amay Advani User ID: ama Date of Birth: 09-11-2002 Age: 20 years old JSON ready string: {&#34;name&#34;: &#34;Amay Advani&#34;, &#34;uid&#34;: &#34;ama&#34;, &#34;dob&#34;: &#34;09-11-2002&#34;, &#34;age&#34;: 20} Raw Variables of object: {&#39;_name&#39;: &#39;Amay Advani&#39;, &#39;_uid&#39;: &#39;ama&#39;, &#39;_password&#39;: &#39;sha256$cUP9G7eGqYZDJ0xl$62050482f7ac8716ed99bf91836591764db6669eafa9127dc65a2827582e4a50&#39;, &#39;_dob&#39;: datetime.date(2002, 9, 11)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Amay Advani, uid=ama, password=sha256$cUP9G7eGqYZDJ0xl$62050482f7ac8716ed99bf91836591764db6669eafa9127dc65a2827582e4a50,dob=2002-09-11) KAIDEN DO: Name: Kaiden Do User ID: kai Date of Birth: 09-10-2006 Age: 16 years old JSON ready string: {&#34;name&#34;: &#34;Kaiden Do&#34;, &#34;uid&#34;: &#34;kai&#34;, &#34;dob&#34;: &#34;09-10-2006&#34;, &#34;age&#34;: 16} Raw Variables of object: {&#39;_name&#39;: &#39;Kaiden Do&#39;, &#39;_uid&#39;: &#39;kai&#39;, &#39;_password&#39;: &#39;sha256$cLimwLoyRj5D6B2I$e7f65ada7f841f0d6f7f0d552bfeade762e25416f4e98cd5a2d917dfcfa0b520&#39;, &#39;_dob&#39;: datetime.date(2006, 9, 10)} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_dob&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Kaiden Do, uid=kai, password=sha256$cLimwLoyRj5D6B2I$e7f65ada7f841f0d6f7f0d552bfeade762e25416f4e98cd5a2d917dfcfa0b520,dob=2006-09-10) . Classes in CPT . import json class Calculation: def __init__(self, Input, Output): self._Input = Input self._Output = Output @property def Input(self): return self._Input @property def Output(self): return self._Output @Input.setter def isInput(self, Input): self._Input = Input @Output.setter def Output(self, Output): self._Output = Output @property def dictionary(self): dict = { &quot;Input&quot; : self.Input, &quot;Output&quot; : self.Output, } return dict def __str__(self): return json.dumps(self.dictionary) def __repr__(self): return f&#39;Calculation(Input={self._Input}, Output={self._Output})&#39; Calculation1 = Calculation(Input=&quot;1+3-4&quot;, Output=&quot;0&quot;) Calculation2 = Calculation(Input=&quot;1*3-4&quot;, Output=&quot;-1&quot;) Calculation3 = Calculation(Input=&quot;4/2-7&quot;, Output=&quot;-5&quot;) Calculation4 = Calculation(Input=&quot;9+4-3&quot;, Output=&quot;10&quot;) Calculations = [Calculation1, Calculation2, Calculation3, Calculation4] for x in range(len(Calculations)): print(&quot;Calculation&quot;, x) print(&quot; t Input:&quot;, Calculations[x].Input) print(&quot; t Output:&quot;, Calculations[x].Output) print(&quot;&quot;) print(json.dumps(str([Calculation.__dict__ for x in Calculations]))) . Calculation 0 Input: 1+3-4 Output: 0 Calculation 1 Input: 1*3-4 Output: -1 Calculation 2 Input: 4/2-7 Output: -5 Calculation 3 Input: 9+4-3 Output: 10 &#34;[mappingproxy({&#39;__module__&#39;: &#39;__main__&#39;, &#39;__init__&#39;: &lt;function Calculation.__init__ at 0x7ffb55713820&gt;, &#39;Input&#39;: &lt;property object at 0x7ffb5570c400&gt;, &#39;Output&#39;: &lt;property object at 0x7ffb5570c8b0&gt;, &#39;isInput&#39;: &lt;property object at 0x7ffb5570c810&gt;, &#39;dictionary&#39;: &lt;property object at 0x7ffb5570c590&gt;, &#39;__str__&#39;: &lt;function Calculation.__str__ at 0x7ffb55713af0&gt;, &#39;__repr__&#39;: &lt;function Calculation.__repr__ at 0x7ffb55713b80&gt;, &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__doc__&#39;: None}), mappingproxy({&#39;__module__&#39;: &#39;__main__&#39;, &#39;__init__&#39;: &lt;function Calculation.__init__ at 0x7ffb55713820&gt;, &#39;Input&#39;: &lt;property object at 0x7ffb5570c400&gt;, &#39;Output&#39;: &lt;property object at 0x7ffb5570c8b0&gt;, &#39;isInput&#39;: &lt;property object at 0x7ffb5570c810&gt;, &#39;dictionary&#39;: &lt;property object at 0x7ffb5570c590&gt;, &#39;__str__&#39;: &lt;function Calculation.__str__ at 0x7ffb55713af0&gt;, &#39;__repr__&#39;: &lt;function Calculation.__repr__ at 0x7ffb55713b80&gt;, &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__doc__&#39;: None}), mappingproxy({&#39;__module__&#39;: &#39;__main__&#39;, &#39;__init__&#39;: &lt;function Calculation.__init__ at 0x7ffb55713820&gt;, &#39;Input&#39;: &lt;property object at 0x7ffb5570c400&gt;, &#39;Output&#39;: &lt;property object at 0x7ffb5570c8b0&gt;, &#39;isInput&#39;: &lt;property object at 0x7ffb5570c810&gt;, &#39;dictionary&#39;: &lt;property object at 0x7ffb5570c590&gt;, &#39;__str__&#39;: &lt;function Calculation.__str__ at 0x7ffb55713af0&gt;, &#39;__repr__&#39;: &lt;function Calculation.__repr__ at 0x7ffb55713b80&gt;, &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__doc__&#39;: None}), mappingproxy({&#39;__module__&#39;: &#39;__main__&#39;, &#39;__init__&#39;: &lt;function Calculation.__init__ at 0x7ffb55713820&gt;, &#39;Input&#39;: &lt;property object at 0x7ffb5570c400&gt;, &#39;Output&#39;: &lt;property object at 0x7ffb5570c8b0&gt;, &#39;isInput&#39;: &lt;property object at 0x7ffb5570c810&gt;, &#39;dictionary&#39;: &lt;property object at 0x7ffb5570c590&gt;, &#39;__str__&#39;: &lt;function Calculation.__str__ at 0x7ffb55713af0&gt;, &#39;__repr__&#39;: &lt;function Calculation.__repr__ at 0x7ffb55713b80&gt;, &#39;__dict__&#39;: &lt;attribute &#39;__dict__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__weakref__&#39;: &lt;attribute &#39;__weakref__&#39; of &#39;Calculation&#39; objects&gt;, &#39;__doc__&#39;: None})]&#34; .",
            "url": "https://kaiden-dough.github.io/fastpages/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post15": {
            "title": "Week 16 Review Ticket",
            "content": "Lesson Grade Hacks . 3.9 &amp; 3.11 | 0.99/1.00 | Hack | . 3.12 &amp; 3.13 | Our Lesson | Our Lesson | . 3.14 &amp; 3.15 | 0.90/1.00 | Hack | . TOTAL | 1.89/2.00 |   | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week16/2022/12/15/week16reviewticket.html",
            "relUrl": "/markdown/week16/2022/12/15/week16reviewticket.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "College Board Vocab",
            "content": "Unit 2… Binary/Data Terms . Bits, Bytes, Hexadecimal / Nibbles: Bits: the smallest unit of data in a computer, used to represent a boolean value | Bytes: unit of data that is typically made up of 8 bits, used to represent a single character or symbol in a computer’s memory | Hexadecimal: a numeral system that uses base 16, used in computing as a way to represent binary data in a more compact and human-readable form | Nibbles: a unit of data that is made up of 4 bits, used to represent a single hexadecimal digit | . | Binary Numbers: Unsigned Integer, Signed Integer, Floating Point: Unsigned Integer: a positive whole number that can range from 0 to infinity that is determined by the number of bits used to represent the integer | Signed Integer: can represent both positive and negative whole numbers | Floating Point: a data type that represents a decimal number | . | Binary Data Abstractions: Boolean, ASCII, Unicode, RGB: Boolean: a data type that has only two possible values, true or false | ASCII: a standardized character encoding that represents letters, numbers, and other symbols in computers; represent text in computers | Unicode: a standardized character encoding that represents most of the world’s written languages; includes ASCII and many other characters from different scripts and languages | RGB: a color model used to represent colors in devices; combination of these three colors in different proportions creates a wide range of colors | . | Data Compression: Lossy, Lossless: Lossy: involves discarding some of the data in the original file in order to reduce its size; used for audio, video, and image files, where some loss of quality is acceptable in exchange for a smaller file size | Lossless: involves encoding the data in such a way that all of the original information can be recovered when the file is decompressed; used for text, software, and other types of data where it is important to preserve all of the original information Unit 3… Algorithm/Programming Terms . | . | Variables, Data Types, Assignment Operators: Variables: used to store and manipulate data in a program x = 10 . | Data Types: classification of data based on the type of value it can hold; include integers, floating-point numbers, characters, and strings x = 10 y = &quot;Hello&quot; Nums = [1,3,4,6] . | Assignment Operators: a symbol that is used to assign a value to a variable (=) | . | Managing Complexity with Variables: Lists, 2D Lists, Dictionaries, Class: Lists: an ordered collection of items with square brackets ([]) my_list = [1, 2, 3, 4, 5] mixed = [1, &#39;hello&#39;, 3.14, True] words = [&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;] . | 2D Lists: also called a matrix, a list of lists matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]] . | Dictionaries: collection of key-value pairs, uses curly braces ({}) dictionary = {&#39;one&#39;: 1, &#39;two&#39;: 2, &#39;three&#39;: 3} . | Class: a blueprint for creating objects, they have member variables and have behavior associated with them | . | Algorithms, Sequence, Selection, Iteration: Algorithms: a set of steps or instructions that are followed to solve a problem or perform a task | Sequences: executes a series of steps in a specific order print(x) print(y) print(&quot;Hi&quot;) . | Selection: executes one or more steps based on a specific condition if x &gt; 0: print(&quot;x is positive&quot;) elif x &lt; 0: print(&quot;x is negative&quot;) else: print(&quot;x is 0&quot;) . | Iteration: executes one or more steps repeatedly until a certain condition is met x = 10 while x &gt; 0: print(x) x -= 1 . | . | Expressions, Comparison Operators, Booleans Expressions and Selection, Booleans Expressions and Iteration, Truth Tables: Expressions: combination of values, variables, and operators that results in a single value | Comparison Operators: compare values and determine if they are equal, greater than, or less than each other ”==”: equal to | ”!=”: not equal to | ”&gt;”: greater than | ”&lt;”: less than | ”&gt;=”: greater than or equal to | ”&lt;=”: less than or equal to x = 4 y = 5 print(x == y) print(x != y) print(x &gt; y) print(x &lt; y) print(x &gt;= y) print(x &lt;= y) . | . | Boolean Expressions and Selection: a boolean variable (True/False) can be used as conditions in selection (if statements) | Boolean Expressions and Iteration: iteration (while loops) can use a boolean variable as a condition(if statements) | Truth Tables: A table for a logical operator containing each variable and all possible input and output results of that operator AND: all inputs must return true | OR: one input must return true | XOR: only one input can be true | . | . | Characters, Strings, Length, Concatenation, Upper, Lower, Traversing Strings: Characters: a single letter, number, symbol, or other element | Strings: sequence of characters name = &quot;Kaiden&quot; . | Length: number of characters it contains name = &quot;Kaiden&quot; print(len(name)) . | Concatenation: combining two or more strings into a single string name = &quot;Kaiden&quot; lastName = &quot;Do&quot; concatenated = name + &quot; &quot; + lastName . | Upper: convert a string to all uppercase name = &quot;Kaiden&quot; print(name.upper()) . | Lower: convert a string to all lowercase name = &quot;Kaiden&quot; print(name.lower()) . | Traversing Strings: to access each character in the string one by one, use a for loop to do this name = &quot;Kaiden&quot; for x in name: print(x) . | . | Python If, Elif, Else conditionals; Nested Selection Statements: Python If: execute a block of code if a specific condition is true if x &gt; 0: print(&quot;Hi&quot;) . | Elif: to specify additional conditions to check if the previous conditions are false if x &gt; 0: print(&quot;Hi&quot;) elif x &gt; -10: print(&quot;Bye&quot;) . | Else conditionals: execute a block of code if all of the previous conditions are false if x &gt; 0: print(&quot;Hi&quot;) elif x &gt; -10: print(&quot;Bye&quot;) else: print(&quot;NO NO NO&quot;) . | Nested Selection Statements: control structures that contain other control structures within them if x &gt; 0: if b &gt; 0: print(&quot;x and b are positive&quot;) . | . | Python For, While loops with Range, with List: Python For: used to execute a block of code multiple times for i in range(1, 6): print(i) . | While loops with Range: execute a block of code repeatedly until a certain condition is met x = 0 while x &lt;= 5: print(x) x += 1 . | with List: x = [4,3,5,2,1] i = 0 while i &lt;= len(x): print(x[i]) i += 1 . | . | Combining loops with conditionals to Break, Continue: Combining loops with conditionals to Break: break is used to exit a loop early | Continue: used to skip the rest of the current iteration and move on to the next one while y &gt; 0: if x == 0: break if x == 3: continue . | . | Procedural Abstraction, Python Def procedures, Parameters, Return Values: Procedural Abstraction: abstract away the details of how the task is performed, making your code easier to read and maintain, more efficient code | Python Def procedures: how procedures are made with the def word def Greeting(name): print(&quot;Hello&quot;, name) Greeting(&quot;Kaiden&quot;) . | Parameters: values that are passed to the procedure when it is called, defined within the parentheses of the procedure definition def Sum(x,y): print(x+y) Sum(6,8) . | Return Values: value that is returned can be used by the calling code to perform additional tasks or to assign to a variable def subtract(x,y): diff = x - y return diff print(subtract(5,2)) . | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week16/2022/12/15/vocab.html",
            "relUrl": "/markdown/week16/2022/12/15/vocab.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Week 16 Vocab",
            "content": "3.14 . Documentation: Text that explains the what, how, or why of your code | . def gradeAverage(num): sumNums = 0 for t in num: sumNums = sumNums + t average = sumNums / len(num) return average print(&quot;The average grade is&quot;, gradeAverage([65, 70, 72, 75, 80, 73, 61, 84, 81, 83])) . Documentation for the example above: The procedure gradeAverage takes a list of integer values representing the percentages in a certain class, and returns the average of those integers. | Libraries: A collection of pre-written code or procedures that coders can use to maximize their efficiency | . import math math.sqrt(64) . Application Programming Interface: A type of software through several computers are able to communicate information amongst each other 3.15 . | Randomization: generates a value between two numbers | . import random answer1 = random.randint(0,3) print(answer1) . 3.16 . Simulations: an imitation of a situation or process | . import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . Experiment: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact 3.17 . | Algorithm Efficiency: aspect of algorithmic programming that measures the number of steps needed to solve a problem Inefficient: | . def inefficientWay(numbers): for i in range(len(numbers)): min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j numbers[i], numbers[min_index] = numbers[min_index], numbers[i] return numbers print(inefficientWay([2, 4, 5, 1, 3])) . Efficient: | . def efficient_sort(numbers): for i in range(len(numbers)): min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j numbers[i], numbers[min_index] = numbers[min_index], numbers[i] return numbers print(efficient_sort([2, 4, 5, 1, 3])) . | Heuristic Approach: taking the shortest or easiest possibilities to the result 3.18 . | Collatz Conjecture: asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1 | . def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(i) else: i = (i / 2) list_.append(i) return list_ . Hailstone numbers: sequence of integers generated by Collatz conjecture | Undecidable problems: should give a “yes” or “no” answer, but yet no algorithm exists that can answer correctly on all inputs | Unsolvable problems: no algorithm can ever be written to find the solution | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week16/2022/12/15/CompliedWeek16Vocab.html",
            "relUrl": "/markdown/week16/2022/12/15/CompliedWeek16Vocab.html",
            "date": " • Dec 15, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Unit 3.17 & 3.18 Hacks",
            "content": "Hack 1 . iterations = 0 def collatz(i): while i &gt; 1: if (i % 2): i = 3*i + 1 else: i = i//2 print(i, end=&#39; &#39;) global iterations iterations += 1 i = int(input(&#39;Enter i: &#39;)) print(&quot;Input:&quot;, i, &quot; nSequence: &quot;, end=&quot; &quot;) collatz(i) print(&quot; nNumber of iterations:&quot;,iterations) . Input: 6 Sequence: 3 10 5 16 8 4 2 1 Number of iterations: 8 . Hack 2 . Efficient and Inefficient | . numList = [9,12,49,22,1,59,3,2,55,47,34] sum = 0 for x in range(len(numList)): sum += numList[x] print(sum) . 9 21 70 92 93 152 155 157 212 259 293 . numList = [9,12,49,22,1,59,3,2,55,47,34] sum2 = 0 for x in range(len(numList)): for i in range(numList[x]): sum2 += 1 print(sum2) . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 . The first one is more efficient because it has less code and less iterations that need to take place. In the second one it is inefficient because it repeats the addition many more times than the first one. . The first one is more efficient because it is adding the values to the sum for each number. The second one is inefficient because it is adding 1 to the sum the amount of times of whatever the number in the list is and doing this for every number. So if the number was 5 it would add 1, 5 times to the sum. This would make it iterate a lot more than the efficient one. . numList = [9,12,49,22,1,59,3,2,55,47,34] sum = 0 if sum == 0: for x in range(len(numList)): sum += numList[x] print(&quot;Sum of:&quot;, numList, &quot;is&quot;, sum) . Sum of: [9, 12, 49, 22, 1, 59, 3, 2, 55, 47, 34] is 293 .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week16/2022/12/14/Unit_3.17_3.18_HACKS.html",
            "relUrl": "/jupyter/week16/2022/12/14/Unit_3.17_3.18_HACKS.html",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Unit 3.16 Hacks",
            "content": "Hack #1 . An idea for a simulation is a coin flipping simulation to get data of how it lands. This is a simulation because the coin is not flipped in real life. The advantage is that more data can be found more efficiently. The disadvantage is that it might not have the the small change of landing on its side or different power in the coin flip and air resistance. | . Hack #2 . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . Welcome to the Simulations Quiz! True or False: Simulations will always have the same result. A: True, B: False You said: B Correct! True or False: A simulation has results that are more accurate than an experiment A: True, B: False You said: B Correct! True or False: A simulation can model real world events that are not practical for experiments A: True, B: False You said: A Correct! Which one of these is FALSE regarding simulations A: Reduces Costs, B: Is safer than real life experiments, C: More Efficient, D: More accurate than real life experiments You said: D Correct! Which of the following scenarios would be the LEAST beneficial to have as a simulation A: A retail company wants to identify the item which sold the most on their website, B: A restaurant wants to determine if the use of robots will increase efficiency, C: An insurance company wants to study the impact of rain on car accidents, D: A sports car company wants to study design changes to their new bike design You said: A Correct! Which of the following is better to do as a simulation than as a calculation A: Keeping score at a basketball game, B: Keeping track of how many games a person has won, C: Determining the average grade for a group of tests, D: Studying the impact of carbon emissions on the environment You said: D Correct! You scored: 6 /6 . Hack #3 . What makes it a simulation?: This is a simulation because the program generates a random number from 1 to 6. It is also a simulation because the dice is not being rolled in real life but it is rolled in a program. | What are it’s advantages and disadvantages?: The advantages of simulation are that it allows a lot of data of the dice results to be found in almost an instant. The disadvantage is that the dice would not experience the real life factors like air resistance, the power put into the roll, and friction. | In your opinion, would an experiment be better in this situation?: I think in this situation, a simulation is better because an experiment would take really long to get enough data. | . Hack #4 . import random rolls = int(input(&quot;How many rolls do you want?&quot;)) while rolls &gt; 0: diceResult = random.randint(1, 14) print(&quot;The 14-sided die landed on&quot;, diceResult) rolls -= 1 . The 14-sided die landed on 13 The 14-sided die landed on 9 The 14-sided die landed on 6 The 14-sided die landed on 14 The 14-sided die landed on 8 . Extra Credit . import random days = int(input(&quot;How many days?&quot;)) sunny = 0 rainy = 0 cloudy = 0 windy = 0 stormy = 0 while days &gt; 0: weather = random.randint(1, 5) if weather == 1: print(&quot;The weather is sunny&quot;) sunny += 1 elif weather == 2: print(&quot;The weather is rainy&quot;) rainy += 1 elif weather == 3: print(&quot;The weather is cloudy&quot;) cloudy += 1 elif weather == 4: print(&quot;The weather is windy&quot;) windy += 1 elif weather == 5: print(&quot;The weather is stormy&quot;) stormy += 1 days -= 1 print(&quot;Sunny:&quot;, sunny) print(&quot;Rainy:&quot;, rainy) print(&quot;Rainy:&quot;, rainy) print(&quot;Cloudy:&quot;, cloudy) print(&quot;Stormy:&quot;, stormy) . The weather is windy The weather is rainy The weather is cloudy The weather is cloudy The weather is sunny The weather is stormy The weather is windy The weather is windy The weather is windy The weather is rainy The weather is sunny The weather is stormy The weather is rainy The weather is sunny Sunny: 3 Rainy: 3 Rainy: 3 Cloudy: 2 Stormy: 2 . This is a simulation because it simulate the weather with a 20 percent chance of each one over a certain desired amount of days. This is done on a computer not in real life. The advantages of the simulation is that it is easier to and quicker to get data. The disadvantage is that the weather is not always the same probability to get each one. An experiment is better in this situation because the data would be more accurate than a simulation. .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week16/2022/12/13/Unit_3.16_HACKS.html",
            "relUrl": "/jupyter/week16/2022/12/13/Unit_3.16_HACKS.html",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Unit 3.14 & 3.15 Hacks",
            "content": "Hacks . Lesson 3.14.1 . import math decimalNum = float(input(&quot;Enter a decimal number to be rounded&quot;)) onlyDecimal = decimalNum - math.floor(decimalNum) if onlyDecimal &gt;= 0.5 and onlyDecimal &lt; 1: print(decimalNum, &quot;rounds up to&quot;, math.ceil(decimalNum)) elif onlyDecimal &gt; 0: print(decimalNum, &quot;rounds down to&quot;, math.floor(decimalNum)) else: print(decimalNum, &quot;stays the same&quot;) . 0.3 rounds down to 0 . My code is asking the user to input a number to be rounded. I used the import math in order to do the rounding. I first floor() the original number and subtracted it from the original number to only get the decimals. Then I compared the decimal to see if I need to round up, down, or stay the same. If it is round up, I use the ceil() of the original number to round up. If it is round down, I use the floor() of the original number to round down. . Lesson 3.15.1 . import random print(&quot;Random Number:&quot;) print(random.randint(1,100)) . Random Number: 95 . The import random function randomizes stuff. Random number would return a random number between the two numbers in the range given. | You can import math and flask and sys | . Lesson 3.15.2 . import random spinnerLand = random.randint(1,8) if spinnerLand &lt;= 3: print(&quot;You got green&quot;) elif spinnerLand &lt;= 5: print(&quot;You got blue&quot;) elif spinnerLand &lt;= 6: print(&quot;You got purple&quot;) elif spinnerLand &lt;= 7: print(&quot;You got red&quot;) elif spinnerLand &lt;= 8: print(&quot;You got orange&quot;) . You got blue . The numbers from RANDOM(12,20) that can be outputted are 12, 13, 14, 15, 16, 17, 18, 19, 20. All other numbers are excluded .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week16/2022/12/12/Unit_3.14_3.15_HACKS.html",
            "relUrl": "/jupyter/week16/2022/12/12/Unit_3.14_3.15_HACKS.html",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Unit 3 Sections 14 and 15",
            "content": "Section 3.14.1 - Libraries (Ethan Tran) . Learning Objective . To be able to select appropriate libraries and/or existing code to use in the creation of new programs. . College Board Essential Knowledge . A software library contains procedures that can be used in the creation of new programs. | Existing segments of code can come from internal or external sources, ie. libraries or previously written code. | The use of libraries simplifies the task of creating complex programs. | Application program interfaces (APIs) are specifications for how the procedures in a library behave and can be used. | Documentation for a library or API is necessary in understanding the key behaviors provided by the API/library and how to utilize them in your work. | . Defining a Library . A library is a collection of code from an external source that can be used to add functionality to a program. | Libraries are very useful, as they can be used to save time and effort in the development process. | Libraries are usually included in a program using a special keyword called &quot; .&quot; This keyword tells the program to look for the library and use its code. | . Example . import math math.sqrt(64) . 8.0 . Review Questions (Answer for candy!) . . 1) In your own words, what is a library? . 2) Why are libraries useful when writing a program? . 3) What keyword is used to add a pre-made library? . Hacks . Write a program that uses a library/libraries in any sort of manner. | Explain your work/code | . . . Lesson 3.15.1 . What is randomization? . 1) Randomization generates a value between two numbers. For example RANDOM(1,3) may result as 1 or 2 or 3, either one of those. . 2) Now if we look into our day to day life we can see that randomization is all around us. . Now for a piece of candy does anyone want to tell us an example of randomization during our day to day life. . 3) In order to use the random function we have to first import random at the very beggining. . Now lets look at the code below right here. . import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . 8 . 1) The lowest number that will be generated is 0 for answer 1 and for answer2, the lowest that will be generated is 1 so the lowest number that can be generated for answer 3 would be 1. . 2) The highest number that will be generated to answer1 is 3 and the highest number that will be generated for answer 2 is 8 so the highest number for answer 3 would be 11. . 3) The range of numbers that answer 3 could print out would be from 1 to 11. . So a normal dice contains six sides with 1-6 on the individual sides. Which of the following code would simulate the result of rolling the dice three times and adds together all the obtained values together? . A. . import random sum = random.randint(1,6) + random.randint(1,6) + random.randint(1,6) print(sum) . 12 . B. . import random sum = random.randint(1,18) print(sum) . 17 . C. . import random sum = 3*random.randint(1,6) print(sum) . 12 . 1) Its not B because B is saying that it is going to choose one number between the range of 1 and 18 and not the sum of 3 diff numbers. . 2) C is not correct also because C is saying that the computer is choosing one random between 1 and 6 and multiplying that 3 times but we want the sum of three different numbers between 1 and 6. . 3) So the answer is A. . . For the last example: . import random i = 1 while i &lt; 4: choose = random.randint(1,10) print(choose) i += 1 . 1 1 1 . Which answers could not be possible for the code above? . A. 4 7 6 . B. 9 1 8 . C. 2 11 5 . D. 5 10 2 . Random can also have different methods, in the above examples we only used one example, randint which returns a random number between the given range. Down below I have created a table of all the methods with the description of what it is used for with the random function. . Method | Description . seed() | Initialize the random number generator . getstate() | Returns the current internal state of the random number generator . setstate() | Restores the internal state of the random number generator . getrandbits() | Returns a number representing the random bits . randrange() | Returns a random number between the given range . randint() | Returns a random number between the given range . choice() | Returns a random element from the given sequence . choices() | Returns a list with a random selection from the given sequence . shuffle() | Takes a sequence and returns the sequence in a random order . sample() | Returns a given sample of a sequence . random() | Returns a random float number between 0 and 1 . uniform() | Returns a random float number between two given parameters . betavariate() | Returns a random float number between 0 and 1 based on the Beta distribution (used in statistics) . expovariate() | Returns a random float number based on the Exponential distribution (used in statistics) . gammavariate() | Returns a random float number based on the Gamma distribution (used in statistics) . gauss() | Returns a random float number based on the Gaussian distribution (used in probability theories) . lognormvariate() | Returns a random float number based on a log-normal distribution (used in probability theories) . normalvariate() | Returns a random float number based on the normal distribution (used in probability theories) . vonmisesvariate() | Returns a random float number based on the von Mises distribution (used in directional statistics) . paretovariate() | Returns a random float number based on the Pareto distribution (used in probability theories) . weibullvariate() | Returns a random float number based on the Weibull distribution (used in statistics) . Lesson Recap: 1) random function generates a random number from a to b (range of two numbers) . 2) You need to import random in order to use the random function . 3) Every result from an import function is equally likely to occur . Hacks for lesson 3.15.1 . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . . . 3.15.2 Lesson . Some Essential Knowledge that you need to know | RANDOM (a,b) will provide you with a random integer between the numbers a-b | Ex. RANDOM (7,18) can provide you with the number 13. | Using a random generator means each result can come out as different. | . Lets Try an Example Scenario . Try and formulate a way to write a segment of code that can simulate the flipping of a coin. | You have to use a random generator and assign the output of &quot;Heads&quot; or &quot;Tails&quot; to a specified result. | . import random flip = random.randint(1,2) if flip == 1: print(&quot;Heads&quot;) else: print(&quot;Tails&quot;) # Try this code for yourself! . This is a pretty simple code to understand. | First we use the randomization here between the 1 and 2 to determine which side of the coin we get. | If we get 1 then we get heads. If we get 2 or anything else than 2, then we get Tails. | . Now let&#39;s answer questions using your knowledge. . If you want yes to show up 50% of the time, which of the code segments can you use? | . random(1,100) &lt;= 50 random(1,100) == 50 random(1,10) &lt;= 5 random(1,10) &gt;= 5 . The answer is A,C, and D! | . Why isn&#39;t the answer B? . This because when you are saying equal to 50, you are saying only when this one number shows up the output will be yes. | You want it to come up 50 percent of the time not just when that one number shows up. | . Hacks 3.15.2 . For your hacks you need to create a random number generator that will simulate this situation: | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | . Hacks Summary . Hacks 3.14.1 . Write a program that uses a library/libraries in any sort of manner. | Explain your work/code | . Hacks 3.15.1 . Write a few lines of code that implements the import function . | Define what an import random function do . | List a few other things that we can import other than random . | . Hacks 3.15.2 . For your hacks you need to create a random number generator that will simulate this situation: | There is a spinner divided into eight equal parts. 3 parts of the spinner are green, two parts are blue, one part is purple, one part is red, and one part is orange. How can you simulate this situation using a random number generator. . | Also answer this question: What numbers can be outputted from RANDOM(12,20) and what numbers are excluded? . | .",
            "url": "https://kaiden-dough.github.io/fastpages/ap%20csp/unit%203/section%2014/section%2015/lesson/2022/12/11/Lesson-Unit-3-Section-14-15.html",
            "relUrl": "/ap%20csp/unit%203/section%2014/section%2015/lesson/2022/12/11/Lesson-Unit-3-Section-14-15.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "Unit 3.9 & 3.11 Hacks",
            "content": "Hacks . 3.9.1 . why is it important to know that algorithms that look different can do the same thing and that algorithms that look the same might have different results?(0.15) It is important to know that algorithms look different and that algorithms that look the same may have different results because when they look the same, a small difference can make it wrong. Also with different algorithms, it can do the same. It is important because I know that there are many ways to make an algorithm and I need to be careful when making algorithms. | . | for the converted conditional to boolean conversion(0.10) | . isInedible = False isLiquid = True if isInedible == True: print(&quot;Don&#39;t drink it&quot;) else: if isLiquid == True: print(&quot;Drink it&quot;) else: print(&quot;Don&#39;t drink it&quot;) . Drink it . isInedible = False isLiquid = True drinkTime = not(isInedible) and isLiquid if drinkTime == False: print(&quot;Don&#39;t drink it&quot;) if drinkTime == True: print(&quot;Drink it&quot;) . 3.9.2 . Develop your own complex algorithm using a flowchart and natural language, then code it! . . Start | There are 12 homeworks and 5 breads | Repeat following steps 4-5 until there is no more bread or homework | If there is more than one homework, do a homework | If there is more than one bread, eat a bread | Print done when finished | Finish | homework = 12 bread = 5 while (homework or bread) &gt; 0: if homework &gt; 0: homework -= 1 if bread &gt; 0: bread -= 1 print(&quot;Homework left:&quot;,homework,&quot; nBread left:&quot;,bread) . Homework left: 0 Bread left: 0 . 3.9.3 . Fix the number guessing game . Make a flow chart for the algorithm number guessing game | Make a function that gets the user guess | Modify the existing search function to give more encouraging feedback | FLOWCHART: . . import random #sets variables for the game num_guesses = 0 user_guess = -1 upper_bound = 100 lower_bound = 0 #generates a random number number = random.randint(0,100) # print(number) #for testing purposes print(f&quot;I&#39;m thinking of a number between 0 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): num = input(&quot;What number?&quot;) #add something here return num #add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if int(guess) &lt; int(number): print(&quot;Too low&quot;) #change this lower_bound = guess return lower_bound, upper_bound elif int(guess) &gt; int(number): print(&quot;Too high&quot;) #change this upper_bound = guess return lower_bound, upper_bound else: upper_bound, lower_bound = guess, guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) if int(upper_bound) == int(number): break else: print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . I&#39;m thinking of a number between 0 and 100. You guessed 50. Too high Guess a number between 0 and 50. You guessed 25. Too high Guess a number between 0 and 25. You guessed 15. You guessed the number in 3 guesses! . 3.11 . calculate the middle index and create a binary tree for each of these lists 12, 14, 43, 57, 79, 80, 99 | 92, 43, 74, 66, 30, 12, 1 | 7, 13, 96, 111, 33, 84, 60 | BELOW | . | Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? Set 1: 80, Set 2: 74, Set 3: 96 | . | Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] . C because it is unsorted | . | numListOne = [12,14,44,57,79,80,99] numListTwo = [92,43,74,66,30,12,1] numListThree = [7,13,96,111,33,84,60] numLists = [numListOne, numListTwo, numListThree] for x in range(len(numLists)): numLists[x].sort() middle = int(len(numLists[x])/2) print(&quot;Middle Index of List #&quot;,x+1,&quot;is&quot;,numLists[x][middle]) . Middle Index of List # 1 is 57 Middle Index of List # 2 is 43 Middle Index of List # 3 is 60 . . . .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week15/2022/12/06/Unit_3.9_3.11_HACKS.html",
            "relUrl": "/jupyter/week15/2022/12/06/Unit_3.9_3.11_HACKS.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Unit 3.8 & 3.10 Hacks",
            "content": "HACKS Unit 3 Section 8 . Hacks Unit 3 Section 3.8.1 . Define an Iteration Portion of code segments that repeat until the requirement is met | Make your own example of an iteration with at least 4 steps and a stopping condition(Similar to mine that I did) I have n homeworks to do | Start and finish homework assignment | Move onto next homework assignment | Repeat steps 2-3 until there is no more homework | | Program a simple iteration. | . fruit = [&quot;apple&quot;, &quot;orange&quot;, &quot;strawberry&quot;, &quot;pear&quot;] i = 0 for x in fruit: print(fruit[i]) i += 1 . apple orange strawberry pear . Hacks Unit 3 Section 3.8.2 . What is an iteration statement, in your own words? They change the order or course that the code is executed by repeating a section of code until the condition is met | Create a descending list of numbers using for loop | . for x in range(10, -1, -1): print(x) . 10 9 8 7 6 5 4 3 2 1 0 . Using while loop, make a list of numbers which will form an output of 3,16,29,42,55,68,81 | . for x in range(3, 94, 13): print(x) . 3 16 29 42 55 68 81 . HACKS Unit 3 Section 10 . Find the lowest value in a list (Luna Iwazaki) Use the list made below | Make a variable to hold the minimum and set it to potential minimum value | Loop | Check each element to see if it is less than the minimum variable | If the element is less than the minimum variable, update the minimum | After all the elements of the list have been checked, display the minimum value | . | . nums = [&quot;10&quot;, &quot;15&quot;, &quot;20&quot;, &quot;25&quot;, &quot;30&quot;, &quot;35&quot;] potentialMin = int(nums.pop()) while len(nums) != 0: newNum = int(nums.pop()) if newNum &lt; potentialMin: potentialMin = newNum print(potentialMin, &quot;is the minimum value.&quot;) . 10 is the minimum value. . Lists Quiz (Ethan Tran) Take a screenshot of your score on put it on your review ticket! . | .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week15/2022/12/05/Unit_3.8_3.10_HACKS.html",
            "relUrl": "/jupyter/week15/2022/12/05/Unit_3.8_3.10_HACKS.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Unit 3.9 & 3.11",
            "content": "Unit 3.9 . 3.9.1 Algorithms (Claire) . A little review on Algorithms: . what are the three components of an algorithm? . sel__ | seq__ | it___ | . Today we will be looking at algorithms from another standpoint. . Main Idea 1: Algorithms can be written in different ways and still do the same thing . However, Algorithms that look similar might not always have the same result | Different algorithms can be used to solve the same problem | . Examples . The goal with the two algorithms below is to show &quot;Wow! Good job!&quot; when you get an A and show &quot;Nice!&quot; when you get a B or C (pass), if you don&#39;t pass (lower than 70) it will show &quot;Do Better&quot; . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) if grade &gt;= 90: print(&quot;Wow! Good job!&quot;) if 70 &lt;= grade &lt; 90: print(&quot;Nice!&quot;) elif grade &lt; 70: print(&quot;Do Better&quot;) . What Grade Did You Get? Wow! Good job! . Yay! it worked! Lets look at the next one. Do you notice any differences? Do you think this algorithm will still achieve the same goal? If not, what is the flaw? . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) if grade &gt;= 90: print(&quot;Wow! Good job!&quot;) elif 70 &lt; grade &lt; 90: print(&quot;Nice!&quot;) elif grade &lt; 70: print(&quot;Do Better&quot;) . What Grade Did You Get? . So, why is this important? Why are we even doing this? . When 2 algorithms look extremely similar, it is easy to assume they do the same thing. However, that is not the case and we have learn how to notice small differences in code and pretty much debug. . just know that codes that look similar don&#39;t always produce the same things :) | . Real-life situation (Storytime) . Tommy and Billy are working on solving the same issue with an algorithm Tommy creates a functioning code and yells &quot;I did it!&quot; He looks over at his friend Billy which is having a bit of trouble and he offers help However, Billy&#39;s code looks basically the same! which confuses them Then they remeber that they were taught that algorithms that look similar don&#39;t always have the same results and they collaborate to do further investigation:) . Now, without running, investigate the algorithm below. This one looks different. Do you thing it will still achieve the same goal as above? . print(&quot;What Grade Did You Get?&quot;) grade = int(input(&quot;Enter Grade:&quot;)) A = grade &gt;= 90 B = 70 &lt;= grade &lt; 90 C = grade &lt; 70 if A: print(&quot;Wow! Good job!&quot;) elif B: print(&quot;Nice!&quot;) elif C: print(&quot;Do Better&quot;) . Why is this important? . When collaborating or working on group projects, two people might come up with two different ways to solve a problem, and that happens a lot. . know that same goal can be achieved in many ways (the possibilities are endless) | make notes in you code! (explain how it works to others or you future self) | . How to write Nested Conditionals as Boolean expressions . the following 2 pieces of code is supposed to print &quot;don&#39;t go to school&quot; unless: . it is a weekday | . isHoliday = False isWeekday = True #if holiday, dont go to school if isHoliday == True: print(&quot;don&#39;t go to school!&quot;) # otherwise, if it is a weekday, go to school else: if isWeekday == True: print(&quot;go to school!&quot;) # but if it is neither a weekday or holiday, don&#39;t go to school else: print(&quot;don&#39;t go to school&quot;) . go to school! . isHoliday = False isWeekday = True # setting variables here (same as above to make comparison easier) driveSchool = not(isHoliday) and isWeekday if driveSchool == False: print(&quot;don&#39;t go to school!&quot;) if driveSchool == True: print(&quot;go to school!&quot;) # now we can make a regular conditional/ if statement without having a nested conditional . go to school! . Hacks . why is it important to know that algorithms that look different can do the same thing and that algorithms that look the same might have different results?(0.15) | for the converted conditional to boolean conversion(0.10) | total: 0.25 | . 3.9.2 Developing Algorithms (Annika) . Developing Algorithms . When creating an algorithm, its good to outline its process before coding This ensures that it is sequenced correctly | . | You should represent the algorithm using a flowchart or natural language Visualization can help you better see the flow of the whole algorithm | This may allow for the coding process to be more efficient and effective | . | . Review of Selection and Iteration . Algorithms with iteration repeat a function until a goal is reached To more easily represent an algorithm without showing all the repeated steps, we can use iteration | . | Algorithms with selection only go through certain functions if certain things are true or false | . Example 1 . Start | The number of pretzels in the pack is 6 | Eat one pretzels, number of pretzels in pack goes down by 1 | How many pretzels are left? | Repeat step 3 until number of pretzels is 0 | Display that pack is empty | Finish | pretzel = 6 while (pretzel &gt; 0): pretzel -= 1 print(pretzel) if pretzel == 0: print(&quot;All done!&quot;) . Example 2 . The parking rate for a garage is as follows: Less than one hour: Free 1-2 hours: $5 &lt;br&gt; 2-3 hours: $8 3-4 hours: $10 &lt;br&gt; 4+ hours: $12 . . Start | Input number of hours parked | If hours is less than 1, cost is free | If hours is between 1 and 2, cost is $5 | If hours is between 2 and 3, cost is $8 | If hours is between 3 and 4, cost is $10 | If hours is more than 4, cost is $12 | Display cost and goodbye | Finish | print(&quot;The parking rate is as follows: n Less than one hour: Free n 1-2 hours: $5 n 2-3 hours: $8 n 3-4 hours: $10 n 4+ hours: $12&quot;) time = float(input(&quot;How many hours have you parked at this garage?&quot;)) print(&quot;How many hours have you parked at this garage?&quot;) print(time, &quot;hours costs:&quot;) if time &lt; 1 : print(&quot;Free&quot;) elif time &gt;= 1 and time &lt; 2 : print(&quot;$5&quot;) elif time &gt;= 2 and time &lt; 3 : print(&quot;$8&quot;) elif time &gt;= 3 and time &lt; 4 : print(&quot;$10&quot;) else: print(&quot;$12&quot;) print(&quot;Have a good day!&quot;) . Hacks . Develop your own complex algorithm using a flowchart and natural language, then code it! . Requirements: . Includes both a flowchart AND natural language | Working code of the same algorithm | Incorporates selection AND/OR iteration | Make it creative! | . Tips: . This site is good for making flowcharts! | Natural language should just be a list | Think about the whole process, not just the end result | . 3.9.3 Using preexisting algorithms (Grace) . Main Idea . Knowing existing algorithms can help construct new ones | simple existing algorithms can include determining min or max of two or more numbers | computing the sum or average | identifying if an integer is even or odd | . | Using existing correct algorithms can help as building blocks to reduce development time, testing, and identification of errors | . Create an algorithm that will start with any positive integer n and display the full sequence of numbers that result from following the Collatz Conjecture. . Example: 6 -&gt; 3 -&gt; 10 -&gt; 5 -&gt; 16 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 . What does this function do? . if (n MOD 2 = 0) { display(&quot;n is even&quot;) } else { display(&quot;n is odd&quot;) } . By modifying the preexisting code, we can write create new code that follows th Collatz Conjecture. . DISPLAY (&quot;Choose a value for n&quot;) n &lt;- INPUT () REPEAT UNTIL (n = 1) { IF (n MOD 2 = 0 ) { n &lt;- n/2 } ELSE { n &lt;- n * 3 + 1 } . Hacks . Fix the number guessing game . Make a flow chart for the algorithm number guessing game | Make a function that gets the user guess | Modify the existing search function to give more encouraging feedback | import random #sets variables for the game num_guesses = 0 user_guess = 0 upper_bound = 100 lower_bound = 0 #generates a random number number = random.randint(1,100) # print(number) #for testing purposes print(f&quot;I&#39;m thinking of a number between 1 and 100.&quot;) #Write a function that gets a guess from the user using input() def guess(): num = input(&quot;What number?&quot;) #add something here return num #add something here #Change the print statements to give feedback on whether the player guessed too high or too low def search(number, guess): global lower_bound, upper_bound if int(guess) &lt; int(number): print(&quot;Too low&quot;) #change this lower_bound = guess elif int(guess) &gt; int(number): print(&quot;Too high&quot;) #change this upper_bound = guess return lower_bound, upper_bound while user_guess != number: user_guess = guess() num_guesses += 1 print(f&quot;You guessed {user_guess}.&quot;) lower_bound, upper_bound = search(number, user_guess) print(f&quot;Guess a number between {lower_bound} and {upper_bound}.&quot;) print(f&quot;You guessed the number in {num_guesses} guesses!&quot;) . I&#39;m thinking of a number between 1 and 100. . Unit 3.11 Binary Search (Claire) . Binary Search: . repeatedly dividing a search interval in half . Binary Search Steps: . first put the numbers in order ascending | descending | . | find the middle number first this is found by taking the highest index number plus the lowest index number and divide by 2 | the numbers on the right will be greater and the numbers on the left will be smaller | this can be represented with a binary tree middle number with the smaller number branched off on the left and bigger numbers branched off on the right | . | . | these lists are not always numbers lists can be made with strings | ex. [&quot;apple&quot;, &quot;banana&quot;, &quot;cherry&quot;, &quot;peach&quot;, &quot;watermelon&quot;] | alphabetical order a-z | z-a | . | . | . Practice: . What is the middle number in a Binary Search given the following set of numbers in order: 1, 5, 19, 44, 89 | What is the middle number in a Binary Search given the following set of numbers that are not in order: 3, 87, 12, 66, 22 | Hacks: . calculate the middle index and create a binary tree for each of these lists 12, 14, 43, 57, 79, 80, 99 | 92, 43, 74, 66, 30, 12, 1 | 7, 13, 96, 111, 33, 84, 60 | . | Using one of the sets of numbers from the question above, what would be the second number looked at in a binary search if the number is more than the middle number? | Which of the following lists can NOT a binary search be used in order to find a targeted value? . a. [&quot;amy&quot;, &quot;beverly&quot;, &quot;christian&quot;, &quot;devin&quot;] . b. [-1, 2, 6, 9, 19] . c. [3, 2, 8, 12, 99] . d. [&quot;xylophone&quot;, &quot;snowman&quot;, &quot;snake&quot;, &quot;doorbell&quot;, &quot;author&quot;] . | Rubric: . All 4 hacks are graded the same way . 0.25/0.25 - shows full understanding of the lesson, completes all hacks assigned with explanation to go above and beyond, any extra hacks to show more understanding . 0.23/0.25 - shows understanding of algorithms/binary search and completes all hacks . 0.20/0.25 - does not understand algorithm/binary search and has not completed hacks .",
            "url": "https://kaiden-dough.github.io/fastpages/2022/12/02/unit3-9-11.html",
            "relUrl": "/2022/12/02/unit3-9-11.html",
            "date": " • Dec 2, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Palindrome Maker",
            "content": "first = input(&quot;What would you like to become a palindrome?&quot;) print(&quot;Input:&quot;, first) length = len(first) firstpart = first[0:(length-1)] lastchar = first[-1] flip = first[::-1] if first == flip: print(&quot;Is a palindrome&quot;) else: print(&quot;Isn&#39;t a palindrome&quot;) print(&quot;Palindrome:&quot;,firstpart+flip) . Input: hello Isn&#39;t a palindrome Palindrome: hellolleh .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week14/2022/12/01/palindrome.html",
            "relUrl": "/jupyter/week14/2022/12/01/palindrome.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Fibonacci Series",
            "content": "amount = int(input(&quot;How many terms do you want?&quot;)) num1 = 0 num2 = 1 count = 0 if amount &lt;= 0: print(&quot;Error: Positive integers only&quot;) elif(amount == 1): print(&quot;Terms:&quot;, amount) print(num1) else: print(&quot;Terms:&quot;, amount) print(num1) print(num2) while (count+2) &lt; amount: count += 1 temp = num2 num2 = num1 + temp num1 = temp print(num2) . Terms: 10 0 1 1 2 3 5 8 13 21 34 .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week14/2022/12/01/fibonacci.html",
            "relUrl": "/jupyter/week14/2022/12/01/fibonacci.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Unit 3.5 - 3.7 Hacks",
            "content": "Lesson 3.5 Hacks . Explain in your own words what each logical operator does NOT: returns the opposite of the data given, ex: if given true --&gt; NOT would make it false | AND: has two conditions and it sees if they are both met, ex: if a number is 5 --&gt; must be greater than 0 AND less than 4, therefore false | OR: determines of one of the two conditions set are met, ex: if a number is 5 --&gt; must be greater than 0 AND less than 4, therefore true | . | . Code your own scenario that makes sense for each logical operator | . print(&quot;NOT&quot;) isHot = False if not isHot: print(&quot;It is cold&quot;) print(&quot;&quot;) print(&quot;AND&quot;) age = 20 wallet = 50 ticket = 25 if age &gt;= 18 and wallet &gt;= ticket: print(&quot;Is old enough and can afford a ticket&quot;) print(&quot;&quot;) print(&quot;OR&quot;) member = True escorted = False if member or escorted: print(&quot;Can enter the building&quot;) . NOT It is cold AND Is old enough and can afford a ticket OR Can enter the building . Lesson 3.6 Hacks . 1 point for defining all the key terms in your own words. 0.5 points if you use examples that show you truly understand it. Selection: if a condition is true, then a piece of code would execute | Algorithm: a procedure of code that does something or a task | Conditional statement: statement that dictates and affects the order code is executed if a condition is true | . | 1 point for writing a program that uses binary conditional logic. 0.5 points if it is original and shows complexity | . number1 = int(input(&quot;What is number 1?&quot;)) number2 = int(input(&quot;What is number 2?&quot;)) cond = input(&quot;AND, OR, XOR?&quot;).lower() if cond == &quot;and&quot;: print(&quot;AND:&quot;, number1, &quot;&amp;&quot;, number2, &quot;--&gt;&quot;, number1 &amp; number2) elif cond ==&quot;or&quot;: print(&quot;OR:&quot;, number1, &quot;|&quot;, number2, &quot;--&gt;&quot;, number1 | number2) elif cond ==&quot;xor&quot;: print(&quot;XOR:&quot;, number1, &quot;^&quot;, number2, &quot;--&gt;&quot;, number1 ^ number2) else: print(&quot;Error&quot;) . OR: 5 | 4 --&gt; 5 . Lesson 3.7 Hacks . Create 3 different flow charts representing nested statements and transfer them into code. | . | carColor = &quot;blue&quot; carPrice = 20000 color = input(&quot;What car color?&quot;) budget = input(&quot;What budget?&quot;) if carColor == color: if carPrice &lt;= int(budget): print(&quot;I will buy&quot;) else: print(&quot;Too expensive&quot;) else: if carPrice &lt;= int(budget)/2: print(&quot;I will buy because cheap&quot;) else: print(&quot;Wrong color and too expensive&quot;) print(&quot;Thanks&quot;) . I will buy Thanks . | w = int(input(&quot;What is w?&quot;)) z = int(input(&quot;What is z?&quot;)) if w &gt; z: if w%2 == 0: print(w, &quot;is greater than&quot;, z, &quot;and is even&quot;) else: print(w, &quot;is greater than&quot;, z, &quot;and is odd&quot;) else: if w%2 == 0: print(w, &quot;is less than&quot;, z, &quot;and is even&quot;) else: print(w, &quot;is less than&quot;, z, &quot;and is odd&quot;) print(&quot;Comparison&quot;) . 59 is less than 60 and is odd Comparison . | t = int(input(&quot;What is t?&quot;)) m = int(input(&quot;What is m?&quot;)) if t == m: print(&quot;Very Good&quot;, t, &quot;=&quot;, m) else: if t &lt; m: print(&quot;Too Small&quot;, t, &quot;&lt;&quot;, m) else: print(&quot;Too Large&quot;, t, &quot;&gt;&quot;, m) print(&quot;Done&quot;) . Too Large 6 &gt; 3 Done . Create a piece of code that displays four statements instead of three. Try to do more if you can. | . age = int(input(&quot;What is your age?&quot;)) grade = int(input(&quot;What is your grade?&quot;)) print(&quot;age:&quot;, age) print(&quot;grade:&quot;, grade) if grade &gt;= 1 and age &gt;= 7: if (grade + 6) == age: print(&quot;You are normal&quot;) elif (grade + 6) &gt; age: print(&quot;You are advanced&quot;) else: print(&quot;You are dumb&quot;) else: print(&quot;You are very young&quot;) . age: 9 grade: 6 You are advanced . Make piece of code that gives three different recommendations for possible classes to take at a school based on two different conditions. These conditions could be if the student likes STEM or not. | . print(&quot;answer: y/n&quot;) math = input(&quot;Do you like math?&quot;) english = input(&quot;Do you like english?&quot;) science = input(&quot;Do you like science?&quot;) history = input(&quot;Do you like history?&quot;) print(&quot;Math?:&quot;, math) print(&quot;English?:&quot;, english) print(&quot;Science?:&quot;, science) print(&quot;History?:&quot;, history) if math == &quot;y&quot;: print(&quot;Take Math 101&quot;) if english == &quot;y&quot;: print(&quot;Take English 101&quot;) if science == &quot;y&quot;: print(&quot;Take Science 101&quot;) if history == &quot;y&quot;: print(&quot;Take History 101&quot;) elif english == &quot;y&quot;: print(&quot;Take English 101&quot;) if science == &quot;y&quot;: print(&quot;Take Science 101&quot;) if history == &quot;y&quot;: print(&quot;Take History 101&quot;) elif science == &quot;y&quot;: print(&quot;Take Science 101&quot;) if history == &quot;y&quot;: print(&quot;Take History 101&quot;) else: print(&quot;Take History 101&quot;) . answer: y/n Math?: n English?: y Science?: y History?: y Take English 101 Take Science 101 Take History 101 .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week14/2022/12/01/Unit_3.5_3.7_HACKS.html",
            "relUrl": "/jupyter/week14/2022/12/01/Unit_3.5_3.7_HACKS.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Truth Table Hacks",
            "content": "console.log(&quot;AND: 6 &amp; 2&quot;) console.log(&quot;Thinking: 0110 &amp; 0010 --&gt; 0010&quot;) console.log(&quot;Should print 2&quot;) console.log(&quot;Test:&quot;) console.log(6 &amp; 2) console.log() console.log(&quot;OR: 3 | 8&quot;) console.log(&quot;Thinking: 0011 | 1000 --&gt; 1011&quot;) console.log(&quot;Should print 11&quot;) console.log(&quot;Test:&quot;) console.log(3 | 8) console.log() console.log(&quot;XOR: 9 ^ 3&quot;) console.log(&quot;Thinking: 1001 ^ 0011 --&gt; 1010&quot;) console.log(&quot;Should print 10&quot;) console.log(&quot;Test:&quot;) console.log(9 ^ 3) console.log() console.log(&quot;NOT: ! 0&quot;) console.log(&quot;Thinking: false is 0 in binary, so ! 0 is not false which is true&quot;) console.log(&quot;Should print true&quot;) console.log(&quot;Test:&quot;) console.log(! 0) . AND: 6 &amp; 2 Thinking: 0110 &amp; 0010 --&gt; 0010 Should print 2 Test: 2 OR: 3 | 8 Thinking: 0011 | 1000 --&gt; 1011 Should print 11 Test: 11 XOR: 9 ^ 3 Thinking: 1001 ^ 0011 --&gt; 1010 Should print 10 Test: 10 NOT: ! 0 Thinking: false is 0 in binary, so ! 0 is not false which is true Should print true Test: true .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week14/2022/11/30/TruthTableHacks.html",
            "relUrl": "/jupyter/week14/2022/11/30/TruthTableHacks.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Simulations- Unit 3 Section 16 Lesson",
            "content": "3.16 Intro to Simulations - Alexa . What is a simulation? A simulation is an imitation of a situation or process | Aka a virtual experiment | . | . Guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Examples of Simulations: . Simulations are used all the time over many different industries . testing safety of a car | games | testing the efficiency of a parking lot | testing a new train route | . Simulation vs. Experiment . Experiment definition: procedure undertaken to make a discovery, test a hypothesis, or demonstrate a known fact | . So, why use a simulation? . Advantages: Can be safer | More cost-effective | More efficient | More data in less time | . | Disadvantages: Not as accurate as experiments | outside factors not included (ex: in rolling dice simulation gravity and air resistance) | . | When do you not use a simulation? when a situation already has set results/data (won&#39;t change) | examples: a score in a game, most purchased food, average yearly wage | . | . leads into real life game example: . . . A Real Life Example: Four Corners - Lydia &amp; Ava . an example of a simulation and experiment = the game of 4 corners | games are simulations! | We are going to play a round of 4 corners here in class. This game is a real life version of our simulation. | Mr. Mortensen will be the person in the middle choosing corners. | Everyone will choose a corner, and if your corner is chosen, you are out! | . | . The rules of the game: . a person stands in the center of a room and the 4 coners are labeled 1-4 | Every player chooses a corner while the person in the middle closes their eyes | person in the middle chooses/calls out a number when instructed | every player in the chosen corner is now out | contine until there is a winner! | Let&#39;s play! . Below is the simulation of the four corners game! . import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . You chose corner number 3 and are still in! You chose corner number 2 and are still in! You chose corner number 4 and are still in! You chose corner number 1 and are still in! You chose corner number 2 and you&#39;re OUT . Comparing Experiment to Simulation Code: . Mr. Mortensen (person in the middle) = random.randint | if statement = if player is out | else = safe/continue | while loop = repeats process until there is a winner of the game | . DEBRIEF QUESTIONS: . Why is it better to code simulations than experiement in real life? | What makes this game a simulation? | What are its advantages and disadvantages? | Would an experiment be better in this situation? (raise hands for each team) | . . Hack #1 . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (collegeboard based questions) . Simulations Quiz (either screenshot or paste quiz in your notebook): | . questions_number = 6 answers_correct = 0 questions = [ &quot;True or False: Simulations will always have the same result. n A: True, n B: False&quot;, &quot;True or False: A simulation has results that are more accurate than an experiment n A: True, n B: False&quot;, &quot;True or False: A simulation can model real world events that are not practical for experiments n A: True, n B: False&quot;, &quot;Which one of these is FALSE regarding simulations n A: Reduces Costs, n B: Is safer than real life experiments, n C: More Efficient, n D: More accurate than real life experiments&quot;, &quot;Which of the following scenarios would be the LEAST beneficial to have as a simulation n A: A retail company wants to identify the item which sold the most on their website, n B: A restaurant wants to determine if the use of robots will increase efficiency, n C: An insurance company wants to study the impact of rain on car accidents, n D: A sports car company wants to study design changes to their new bike design &quot;, &quot;Which of the following is better to do as a simulation than as a calculation n A: Keeping score at a basketball game, n B: Keeping track of how many games a person has won, n C: Determining the average grade for a group of tests, n D: Studying the impact of carbon emissions on the environment&quot; ] question_answers = [ &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;A&quot;, &quot;D&quot; ] print(&quot;Welcome to the Simulations Quiz!&quot;) def ask_question (question, answer): print(&quot; n&quot;, question) user_answer = input(question) print(&quot;You said: &quot;, user_answer) if user_answer == answer: print(&quot;Correct!&quot;) global answers_correct answers_correct = answers_correct + 1 else: print(&quot;You are incorrect&quot;) for num in range(questions_number): ask_question(questions[num], question_answers[num]) print(&quot;You scored: &quot;, answers_correct, &quot;/6&quot;) . . . Rolling a Dice Example - Sri . Below is a simulation of rolling dice! Examine the code and think about how this simulation works and its purpose! . def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) import random def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results num_dice_input = input(&quot;How many dice do you want to roll? [1-6] &quot;) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) print(&quot;you rolled:&quot;, roll_results) . you rolled: [5, 1, 2] . . . Game of Life - Lydia &amp; Ava . Below is a simulation of the Game of Life, originally written by John Horton Conway. Mr. Mortensen has this game on the APCSP site and we think that it is a great example of an interactive simulation. . What it is . This game is an unpredictable cellular automaton | automaton = simulates and imitates human life, hence why this is called the game of life | After creating the initial configuration, the game evolves without pattern | . How it works . Cells in this game are alive or dead, similar to binary where they are on or off | The user created an initial configuration of cells on the grid, and presses play (tap the squares on the grid) | a cells&#39;s status (alive or dead, on or off) depends on the surrounding 8 cells status (surrounding 8 boxes). Here are the rules: The birth rule= a dead cell (blue box) that is surrounded by at least 3 alive cells (yellow boxes), will become alive | The death rule= an alive cell (yellow) with no or only one surviving cell around it dies (becomes blue) | Cell survival= an alive cell (yellow) with 2 or 3 alive neighboring cells will stay alive | . | . Try it Out! . Use the grid below to create cell figurations, press play, and watch your cells die, live, and move around! . . Remix of Game of Life . start step . . Hack #3 . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . . . Hacks Overview . Use these guiding questions for a simulation: . - What makes it a simulation? - What are it’s advantages and disadvantages? - In your opinion, would an experiment be better in this situation? . Hack #1 (0.3) . Create an idea for a simulation and describe it (you don’t actually have to code it just think about/answer the guiding questions). | . Hack #2 (0.1) . Simulations Quiz (either screenshot or paste quiz in your notebook) | . Hack #3 (0.2) . Describe the rolling dice simulation (answer guiding questions) | . Hack #4 (0.3) . Add a feature onto the rolling dice simulation above ex: a 14-sided dice or expand the purpose of the simulation (hint: use conditionals to make dice part of a game/real life situation) | . | . Extra Credit (0.1) . For the extra 0.1: try coding a simple simulation and describe it (guiding question) | .",
            "url": "https://kaiden-dough.github.io/fastpages/studentlesson/simulations",
            "relUrl": "/studentlesson/simulations",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Unit 3.3 & 3.4 Hacks",
            "content": "Hack 1 . Sequencing: 1, 2, 3, 4, 5 | Selection: 3 | Iteration: 4 | . Hack 2 . Evaluate the arithmetic expression or this code: . num1 = 5 . num2 = num1 * 3 15 . num3 = num2 / num1 * (9 % 2) * 4 12 . result = (num3 % num1 + num2) % num3 * 3 / 5 3 . result = 3 . HACK for 3.3! CROSS WORD PUZZLE! . 1 down ITERATION | 2 down SELECTION | 3 across SEQUENCE | . Hack 3 . Quiz .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week14/2022/11/29/Unit_3.3_3.4_HACKS.html",
            "relUrl": "/markdown/week14/2022/11/29/Unit_3.3_3.4_HACKS.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Unit 3 Notes",
            "content": "Vocab Link . Unit 3 Section 1-2: Hacks . Unit 3, Section 1.1: Data Types and Variables . Variable is an abstraction in a program that holds a value, only one value at a time | They have good names to organize code and understand what the variables represent | Some variables are booleans, numbers, lists and strings; each are used in different instances | Variables are seen as “containers” that have a name and value | Naming variables certain names are important to prevent confusion | Some variables are used for different things | . Unit 3, Section 1.2: Variables . Determine the value of variable as a result of an assignment, use assignment operator | In python, they use equal sign to assign a value to the variable | Recap: learn what is an assignment operator, how to use it, how to store value inside a variable | . Unit 3, Section 2.1 : List and Strings Using Variables . Strings are a series of characters, both numbers and letters and characters | Lists are sequences of elements with each element is a variable In order | Can store different types of variables | Can be accessed by index (starts at 0) | . | . Unit 3, Section 2.2 : Data Abstraction with Lists . Lists bundle multiple variables under one name, can have different types of variables | User doesn’t know how the list stores data so it is data abstraction | . Unit 3, Section 2.3 : Managing Complexity with lists . Use lists to manage complexity | Simplifies code and makes code faster and easier Code is easier to read | . | Many variables are not needed, don’t need to edit/add/remove entire variable to change it | . Unit 3 Section 3-4: Hacks . Lesson 3.3 . An algorithm is a finite set of instructions that completes a task Sequencing: the order the code is completed | Selection: lets algorithm make a decision based on if a condition is met | Iteration: a loop of something until a condition is met | . | Mathematical Expressions Sequential code statements are used in algorithms to specify how signals are assigned | . | Arithmetic Operators: addition, subtraction, multiplication, division, and modulus +, -, *, /, % | MOD returns the remainder Lesson 3.4 . | . | String Concatenation Joins two or more strings together to make a new string strings are sequences of characters | substring string in python can be found with the string and which range of characters | . | . | . Unit 3 Section 5-7: Hacks . Lesson 3.5 . Boolean . Boolean is a true (1) or false (0) –&gt; (binary) | Used to tell if something is true or false | Ex 1 &amp; Ex 2: score = 3 if score == 3: print(&quot;Score equals 3&quot;) . Relational Operators . | Mathematical relationship between two variables | Determines output even if statement is not true | Ex 1 age = 18 if age &gt;= 16: print(&quot;Can Drive&quot;) . | Ex 2 passengers = 3 cart = 4 if cart &gt;= passengers: print(&quot;Not Full&quot;) . | . Logical Operators . NOT: opposite of the data, usually true/false | AND: evaluate 2 conditions together and if both conditions are met | OR: determines if one of the conditions is met | . Lesson 3.6 . Selection: specific block of code that will execute if the condition passed | Algorithm: finite set of code that completes a task | Conditional statement: affects the sequence of control by executing statements in different order Affects the sequential flow of the code | . | . Lesson 3.7 . Nested Conditional Statement: conditional statement with more inside of it | Nested into each other: else if in else if | Question 1: x = 5 &amp; y = 4 x is smaller than y | . | Question 2: height = 60 &amp; age = 17 &amp; photo taken The total bill is $10. | . | . Unit 3 Section 8 &amp; 10: Hacks . Lesson 3.8 Iteration . Iteration: repeating part of an algorithm until a condition is met | Iteration Statements: changes the flow of the code by repeating statements a number of times and it stops repeating once a condition is met | Repeat Until: the loop of code loops if the condition is not true Section 3.8.1 . | Stopping condition is used to stop the iteration when the requirement is already met Section 3.8.2 . | Iteration Statement: causes statement to be executed 0 or more times, depending on the loop-termination condition | Starting Value: where the variable starts | Ending Value: where the variable stops | Incrementing Value: how the variable increases Section 3.8.3 . | break would stop the loop Section 3.10 Lists . | Traversing Lists: all elements in the list are accessed, for partial traversal, only portion of elements are accessed Section 3.10.1 . | pop() –&gt; takes element off the list and returns it | sort() –&gt; permanently changes the order of the list | sorted() –&gt; temporarily changes the order | min() –&gt; returns the minimum value of the list | max() –&gt; returns the maximum value of the list | sum() –&gt; returns the sum of the values in the list list.pop() list.sort() sorted(list) min(list) max(list) sum(list) . Section 3.10.2 . | Traversing a list is process of visiting each element in a list in sequential order; used to access, search for, and modify elements in a list Complete Traversal: all elements are accessed | Partial Traversal: only a portion are accessed | Iterative Traversal: loops used to iterate through list to access each single element at a time | | insert() –&gt; allows value to be inserted at index i | append() –&gt; allows value to be added at end of list | remove() –&gt; allows an element at index i to be removed | length() –&gt; returns number of elements in the list list.insert() list.append() list.remove() list.length() . Lesson 3.9 &amp; 3.11: Hacks . Lesson 3.9 . 3.9.1 Algorithms . | Review: components of an algorithm are selection, sequencing, and iteration | Algorithms don’t always do the same thing because of a small equals sign 70 &lt;= grade 70 &lt; grade . These are not the same. . | But there are multiple ways to make an algorithm, so they don’t need to be identical to work. | Can use nested conditionals with booleans while making algorithms 3.9.2 Developing Algorithms . | should outline or brainstorm before coding an algorithm to make sure it is sequenced correctly def multiply(x,y): product = x*y return product products = multiply(5,6) def function(x,y): while x &gt; 0: print(y+x) x+=1 multiply = x*y return multiply . Use a flowchart or pseudo-code and write it out | Helps visualize the algorithm and makes it easier to code it after | . | Iteration and selection are used within algorithms 3.9.3 Using Pre-existing Algorithms . | You can make new algorithms by branching off old ones | Collatz Conjecture: can repeating two arithmetic operations make all integer become 1? Lesson 3.11 Binary Search . | Binary Search: repeatedly diving search interval in half first put numbers in order from small to big | get middle number, then finds if the number is bigger or small than the middle number | then moves to the respective side and repeats past step until finds the desired result | . | Practice: 19 | 22 Lesson 3.14-15: Hacks . Section 3.14.1 Libraries . | | Documentation: Text that explains the what, how, or why of your code def gradeAverage(num): sumNums = 0 for t in num: sumNums = sumNums + t average = sumNums / len(num) return average print(&quot;The average grade is&quot;, gradeAverage([65, 70, 72, 75, 80, 73, 61, 84, 81, 83])) . | Library contains procedures that can be used in new programs | Code segments can come from internal or external sources | Libraries can simplify complex programs | libraries are included with a “.” import math math.sqrt(64) . Section 3.15.1 . | Randomization generates a random value between two numbers import random answer1 = random.randint(0,3) print(answer1) . | Need to do import random at the beginning to use random import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . | The range includes the numbers in the range | Many methods for random seed() | getstate() | setstate() | getrandbits() | randrange() | randint() | choice() | choices() | shuffle() | sample() | random() | uniform() | betavariate() | expovariate() | gammavariate() | gauss() | lognormvariate() | normalvariate() | vonmisesvariate() | paretovariate() | weibullvariate() 3.15.2 Lesson . | . | RANDOM (a,b) will provide you with a random integer between the numbers a-b | Ex. RANDOM (7,18) can provide you with the number 13. | Using a random generator means each result can come out as different. python import random flip = random.randint(1,2) | . if flip == 1: print(“Heads”) else: print(“Tails”) . # Lesson 3.16: [Hacks](https://kaiden-dough.github.io/fastpages/jupyter/week16/2022/12/13/Unit_3.16_HACKS.html) ## 3.16 Intro to Simulations - Simulation: an imitation of situation or process also called a virtual experiment - Examples: testing safety of cars, games, testing things python import random status = &quot;in&quot; while status != &quot;out&quot;: chooseCorner = input(&quot;What corner do you choose?&quot;) corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) . Experiment: procedure undertaken to make a discovery, test a hypothesis, or to demonstrate a fact | Simulation Pros and Cons Pros: safer, cheaper, efficient | Cons: not as accurate, no outside factors | Don’t simulate a situation with set results | . | Four Corners Example Simulation python import random | . status = “in” while status != “out”: chooseCorner = input(“What corner do you choose?”) . corner = random.randint(1,4) if int(chooseCorner) == corner: status = &quot;out&quot; print(&quot;You chose corner number &quot; + chooseCorner + &quot; and you&#39;re OUT&quot;) else: print(&quot;You chose corner number &quot; + chooseCorner + &quot; and are still in!&quot;) - Rolling Dice Simulation python def parse_input(input_string): if input_string.strip() in {&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;}: return int(input_string) else: print(&quot;Please enter a number from 1 to 6.&quot;) raise SystemExit(1) . import random . def roll_dice(num_dice): roll_results = [] for _ in range(num_dice): roll = random.randint(1, 6) roll_results.append(roll) return roll_results . num_dice_input = input(“How many dice do you want to roll? [1-6] “) num_dice = parse_input(num_dice_input) roll_results = roll_dice(num_dice) . print(“you rolled:”, roll_results) . # Lesson 3.17 &amp; 3.18: [Hacks](https://kaiden-dough.github.io/fastpages/jupyter/week16/2022/12/14/Unit_3.17_3.18_HACKS.html) ## Section 3.17 - Sometimes when a problem has too many possibilities, a heuristic approach would be taken - Algorithmic efficiency: aspect of algorithmic programming that measures the number of steps needed to solve a problem, need code that is more efficient to speed up the code processing. - Inefficient: python def inefficientWay(numbers): for i in range(len(numbers)): min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j numbers[i], numbers[min_index] = numbers[min_index], numbers[i] return numbers print(inefficientWay([2, 4, 5, 1, 3])) - Efficient: python def efficient_sort(numbers): for i in range(len(numbers)): min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j numbers[i], numbers[min_index] = numbers[min_index], numbers[i] return numbers print(efficient_sort([2, 4, 5, 1, 3])) ## Section 3.18 - Undecidability: you don&#39;t know if the problem can be solved or if every number works in the code - An undecidable problem is one that should give a &quot;yes&quot; or &quot;no&quot; answer, but yet no algorithm exists that can answer correctly on all inputs. - Unsolvable: An unsolvable problem is one for which no algorithm can ever be written to find the solution. - Collatz: The conjecture asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1 python def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(i) else: i = (i / 2) list_.append(i) return list_ . Hailstone Numbers: The sequence of integers generated by Collatz conjecture are called Hailstone Numbers. | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week14/2022/11/28/Unit_3_Sections.html",
            "relUrl": "/markdown/week14/2022/11/28/Unit_3_Sections.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Unit 3 Sections 8 and 10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statement | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop . . Unit 3 Section 8.1 . Unit 3 Section 8.1 - Taiyo Iwazaki . Lesson Objectives: . Express an algorithm that uses iteration without using a programming language | Define an iteration | The Basics Of Iteration | Examples | LESSON Vocab: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | Before we dive deeper, we need to understand that an iteration is a part of an algorithm. And in that iteration is a set of instructions that need to be followed until a certain desired output is met. . Examples . Here is an example using online shopping: . . Lets say you are looking for a lost item inside of your house... What steps would you take? . Suppose there are n rooms to search... number the rooms 1-n . | Start by searching in room number 1 . | Search each room thoroughly for you item. . | Change the room number to the next highest number . | Repeat steps 3 and 4 until you have found your lost item. . | Enjoy the lost item. . | WAIT! There is a flaw in the program. . This is where a stopping condition is useful for when the iteration already meets the desired requirement and gets out of the loop. . Programming Examples . i = 0 while (i &lt; 5): print(&quot;Hello, World!&quot;) i = i + 1 . Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! . i = 0 while (i &lt; 5): #Try changing the 5 and see what happens! print(&quot;Hello, World!&quot;) i = i + 1 if (i == 3): #Try Changing the 3 and see what happens! break . Hello, World! Hello, World! Hello, World! . These are just a few examples of what you can do with iteration. . Summary: . An Iteration is a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met | We can use stopping conditions to stop an iteration if a condition is already met | . Unit 3 Section 3.8.2 . Unit 3 Section 3.8.2 - Parav Salaniwal . Lesson Objectives . Determine the result or side effect of iteration statements | Learn how to use iterations with for loops and while loops | Creating code to learn how to incrementally list numbers | Learn the range function and using variables in code | . Definition: Iteration Statement - cause statements to be executed zero or more times, subject to some loop-termination criteria . The first function we will learn is the range function, which we will use with for loop. As you may be able to guess, this will give us the sum based on the input provided. We always use a variable, such as i, to represent what the range of numbers the output will show. For example, if I wanted to list the numbers from 1-10 using the range function, it would look like this: . for i in range(11): print(i) . 0 1 2 3 4 5 6 7 8 9 10 . Now the first thing you may notice is my input for the range was 11, and you may wonder why is it not 10? This is because when using the range function, the last number, or the ending value, is not included in the output, therefore we would have to add 1 to receive the correct output. Now if we were looking to include a starting value to have it start from 1 and end at 10, the code would look like this: . for i in range(1,11): print(i) . 1 2 3 4 5 6 7 8 9 10 . When using the range with for loop, the you can list much more than just a increment of one, would anyone like to guess how we could include a change in the incremented value? Try making a change in the python code above to change the incremented value. When using the range function: . for i in range(starting value, ending value, incremented value): print(i) . Now with while loops, we can provide a similar output with a variation in the input. Similar to for loops, it requires a variable which is the starting value. . i=1 while i&lt;=10: print(i) i=i+1 . 1 2 3 4 5 6 7 8 9 10 . Based on your knowledge from for loops, which values in the code above are the starting, incrementing, and ending values? . LESSON . . Unit 3 Section 3.8.3 . Unit 3 Section 3.8.3 - Nikhil . Here is some basic code I have created, let&#39;s first look into this one: I created a list of pets, cat, dog, fish, and snake. Then I created a for loop, &quot;for i in pets&quot; and this looks at every element/value in pets, so &quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot; and &quot;snake&quot;. This next if statmenets checks if the element in the list is &quot;fish&quot; and if it is, it breaks the loop. The statement would just print, cat and dog since the loop breaks at fish. . pets = [&quot;cat&quot;, &quot;dog&quot;, &quot;fish&quot;, &quot;snake&quot;] for i in pets: if i == &quot;fish&quot;: break print(i) . cat dog . This while loop checks if number less than 10 is even and if so, it will print out the even numbers. We set a starting value of number = 0, then while the number is less than 10, the percent sign means modulus so meaning if there is a remaninder when we dvide. So if number divided by 2 has no remainder then it will print number. Then after that it will add 1 to the number and repeat the process untill it reaches 10. So let&#39;s check for 0, while 0 is less than ten, then it moves to next statement, since 0 divded by 2 has a remainder of 0 it will print the value of 0. Now it will add 1 to zero. Then it will see that 1 is less than ten, and then check if 1 divided by 2 has a remainder of 0 which it does not, so it skips the print, and goes straight to addding one, so on so forth. . number = 0 while number &lt; 10: if number % 2 == 0: print(number) number += 1 . 0 2 4 6 8 . The purpose of this code is to find the sum of all the even numbers between and any number of your choosing. The integer input asks for the minimum and maximum value. The next statement puts a starting sum value set to 0. The for i in range (minimum,maximum+1) looks at every number between those two values, in this case 1 and 100. Then the if i modulus 2 checks if any numbers that are divisible by 2 and the remainder comes to 0. If there is a number that has a remainder of 0 when divided by 2, it adds that number to the sum. Then the last print statement, prints out the final sum of all even numbers between the two numbers of your choosing. . minimum = int(input(&quot;please enter a minimum number you want your range to be&quot;)) maximum = int(input(&quot;please enter a number that you want to be the maximum value&quot;)) sum = 0 for i in range(minimum,maximum+1): if i % 2 == 0: sum += i print(&quot;The sum of all the even numbers between&quot;, minimum, &quot;and&quot;, maximum, &quot;:&quot;, sum) . The sum of all the even numbers between 1 and 3 : 2 . LESSON . . HACKS Unit 3 Section 8 . Hacks Unit 3 Section 3.8.1 . Define an Iteration | Make your own example of an iteration with at least 4 steps and a stopping condition(Similar to mine that I did) | Program a simple iteration. | Hacks Unit 3 Section 3.8.2 . What is an iteration statement, in your own words? | Create a descending list of numbers using for loop | Using while loop, make a list of numbers which will form an output of 3,16,29,42,55,68,81 | . Section 10 - Lists - Luna Iwazaki, Ethan Tran . Section 10 - Lists . Lists Recap . append() - adding element to the end of the list . names = [&#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # add element to the end of the list names.append(&#39;luna&#39;) # start with empty list names = [] names.append(&#39;taiyo&#39;) names.append(&#39;ethan&#39;) names.append(&#39;parav&#39;) names. append(&#39;nikhil&#39;) . insert() - adding an element in a specific position . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # adding in a specific position names.insert(0, &#39;taiyo&#39;) names.insert(3, &#39;ethan&#39;) . remove() - remove an item from the list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # deleting by value names.remove(&#39;parav&#39;) # by position del names[-1] . pop() - takes the item off the top of the &quot;stack&quot; (by default it returns the last element of the list but you can also pop from any position) . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # pop last item of list most_recent_name = names.pop() print(most_recent_name) # pop first item of list first_name = names.pop(0) print(first_name) . len() - returns the number of items in a list . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # find length of list num_names = len(names) print(&quot;There are&quot; + str(num_names) + &quot;names.&quot;) . sort() - changes order of list permanently . sorted() - returns a copy of the list which leaves the original copy unchanged . names = [&#39;luna&#39;, &#39;taiyo&#39;, &#39;ethan&#39;, &#39;parav&#39;, &#39;nikhil&#39;] # sort permanently names.sort() # sort permanently in reverse alphabetical order names.sort(reverse=True) # temp. sort print(sorted(names)) print(sorted(names, reverse=True)) # reversing the order of a list names.reverse() . range() - use to work with number efficiently . for number in range(11): print(number) # making list of numbers 1 to 10 # using the list() value can generate a large list of numbers numbers = list(range(1, 10)) . min() - find the least value in list . nums = [10, 30, 40, 60, 70, 60] least = min(nums) print(min(nums)) . max() - find the highest value in list . nums = [10, 30, 40, 60, 70, 60] highest = max(nums) print(max(nums)) . sum() - sum of all in list . nums = [10, 30, 40, 60, 70, 60] total = sum(nums) print(sum(nums)) . Practice Question . Using the information above fill in the missing code . AP Exam Reference Sheet . Since CS is taught in different languages the pseudocode represents fundamental programming concepts. . provides basic operations on lists | provides pseudocode for loops | helps you understand code used in questions | students can use this reference sheet in the AP Exam | . APCSP Testing Reference Sheet . If you looked at the reference sheet and seem to not understand some concepts here is a Khan Academy resource which can help you understand specific topics. . Khan Academy Resource . Practice Question . If the list words contain [&#39;song&#39;, &#39;book&#39;, &#39;video&#39;, &#39;book&#39;] what will be the following code output . Finding Values in Lists (Luna Iwazaki) . Part 1 . use the list below | make a variable to hold the minimum and set it to potential minimum value | loop | check each element to see if it is less than the minimum variable | if the element is less than the minimum variable, update the minimum | after all the elements of the list have been checked, display the minimum value | . nums = [&#39;38&#39;, &#39;45&#39;, &#39;67&#39;, &#39;83&#39;, &#39;78&#39;] # add code here . Part 2 . use the list from part 1 | find the sum of even numbers in a list | . Unit 3.10.2 (Ethan Tran) . Traversing a list is the process of visiting each element in a list in a sequential order. It can be used to access, search for, and modify elements in the list. | . Traversing Lists . 1) Complete Traversal: All elements in a list are assessed . 2) Partial Traversal: Only a given portion of elements are assessed . 3) Iterative Traversal: When loops are used to iterate through a list and to access each single element at a time. . Quick Lists Reference Sheet . A given element of a list can be evaluated using index, [ ] | . 1) Ex. listName[i] 2) Ex. listName[3] . insert( ) allows a value to be inserted into a list at index i | append( ) allows a value to be added at the end of a list | remove( ) allows an element at index i to be deleted from a list | length( ) returns the number of elements currently in a specific list | . . A loop such as the example above allows a user to access each item within the list . College Board Example Question . &lt;/html&gt; &lt;/div&gt; &lt;/div&gt; . HACKS Unit 3 Section 10 . Find the lowest value in a list (Luna Iwazaki) . Use the list made bellow | Make a variable to hold the minimum and set it to potential minimum value | Loop | Check each element to see if it is less than the minimum variable | If the element is less than the minimum variable, update the minimum | After all the elements of the list have been checked, display the minimum value | . nums[&quot;10&quot;, &quot;15&quot;, &quot;20&quot;, &quot;25&quot;, &quot;30&quot;, &quot;35&quot;] min . Lists Quiz (Ethan Tran) . Take a screenshot of your score on put it on your review ticket! . import getpass, sys import random def ask_question (question, answer): print(question) ans = input(question) print(ans) if ans == answer: print(&quot;Correct!&quot;) return 1 else: print(&quot;Wrong&quot;) return 0 question_list = [&quot;What allows a value to be inserted into a list at index i?&quot; , &quot;What allows an element at index i to be deleted from a list?&quot; , &quot;What returns the number of elements currently in a specific list?&quot; , &quot;What allows a value to be added at the end of a list?&quot;] answer_list = [&quot;index()&quot;, &quot;remove()&quot;, &quot;length()&quot; , &quot;append()&quot;] # Set points to 0 at the start of the quiz points = 0 # If the length of the quiz is greater than 0, then random questions will be chosen from the &quot;question_list&quot; set while len(question_list) &gt; 0: index = random.randint(0, len(question_list) - 1) # The points system where a point is rewarded for each correct answer points = points + ask_question(question_list[index], answer_list[index]) # If a question or answer has already been used, then it shall be deleted del question_list[index] del answer_list[index] # Calculating score using the points system and dividing it by the total number of questions (6) score = (points / 4) # Calculating the percentage of correct answers by multiplying the score by 100 percent = (score * 100) # Printing the percentage, and formatting the percentage in a way where two decimals can be shown (through &quot;{:.2f}&quot;) print(&quot;{:.2f}&quot;.format(percent) + &quot;%&quot;) # Adding final remarks based upon the users given scores if points &gt;= 5: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Amazing job!&quot;) elif points == 4: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Not too bad, keep on studying! &quot; ) else: print(&quot;Your total score is: &quot;, points, &quot;out of 4. Its alright, better luck next time!&quot;) . What allows a value to be inserted into a list at index i? index() Correct! What allows an element at index i to be deleted from a list? remove() Correct! What allows a value to be added at the end of a list? append() Correct! What returns the number of elements currently in a specific list? length() Correct! 100.00% Your total score is: 4 out of 4. Not too bad, keep on studying! . . . College Board Reference Sheets . List Operations . . &lt;/div&gt; .",
            "url": "https://kaiden-dough.github.io/fastpages/2022/11/28/Unit_3.8_3.10.html",
            "relUrl": "/2022/11/28/Unit_3.8_3.10.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Unit 3.1 & 3.2 Hacks",
            "content": "Unit 3.1.1 Hacks . Uses variables | Show your understanding of different variable data types by using at least 2 different types in your code | Uses meaningful names to prevent confusion | . drink = &quot;water&quot; volume = 20 print(&quot;There are&quot;,volume,&quot;liters of&quot;, drink) . There are 20 liters of water . Unit 3.1.2 Hacks . In your own words, briefly explain by writing down what an assignment operator is An assignment operator is an equal sign that assigns a value to a variable | . | In Collegeboard pseudocode, what symbol is used to assign values to variables? An arrow &lt;- | . | A variable, x, is initially given a value of 15. Later on, the value for x is changed to 22. If you print x, would the command display 15 or 22? . It would display 22 | . | Bonus: multiple ways to define a variable . | . var age = 1; const b = 3 . Unit 3.2.1 Hacks . Questions . What is a list? A list is a sequence of elements with each element being a variable | What is an element An element is one of the things in a list | What is an easy way to reference the elements in a list or string? An easy way to reference elements in a list or string is by using index | What is an example of a string? A string is a series of characters, for example a person&#39;s name | . Create an index of your favorite foods Tips: Index starts at 1, Strings are ordered sequences of characters . Extra work: Try to create an index that lists your favorite food and print the element at index 3. More work: Create a list of your favorite foods and create an index to access them. . marks = [&quot;food1&quot;] . favFoods = [&quot;pizza&quot;,&quot;steak&quot;,&quot;ribs&quot;,&quot;hamburger&quot;,&quot;fried chicken&quot;] print(favFoods[3]) print(favFoods[0]) print(favFoods[4]) print(favFoods[-1]) . hamburger pizza fried chicken fried chicken . Unit 3.2.2 Hacks . The following code is incomplete. Its intended purpose is to increase three numbers, all of which ask for user input, by an amount specified the user. The input code is abstracted, but the actual logic isn’t connected to the abstraction. . num1=input(&quot;Input a number. &quot;) num2=input(&quot;Input a number. &quot;) num3=input(&quot;Input a number. &quot;) add=input(&quot;How much would you like to add? &quot;) # Add code in the space below numlist = [int(num1),int(num2),int(num3)] print(&quot;Original numbers:&quot;,numlist) print(&quot;Adding:&quot;,add) # The following is the code that adds the inputted addend to the other numbers. It is hidden from the user. for i in range(len(numlist)): numlist[i-1] += int(add) print(&quot;New numbers:&quot;,numlist) . Original numbers: [9, 101, -40] Adding: 15 New numbers: [24, 116, -25] . Unit 3.2.3 Hacks . On a single markdown file: . Insert a screenshot of your score on the python quiz . | Insert a screenshot of your simplifying of the food list . | Why are using lists better for a program, rather than writing out each line of code? . Using lists are better for a program because it reduces redundancy and makes the program more organized and simpler. Also the code is easier to read and faster to write. | . | Make your own list the “long and slow way” then manage the complexity of the list Long and Slow Way | . | . fruit1 = &quot;apple&quot; fruit2 = &quot;banana&quot; fruit3 = &quot;orange&quot; fruit4 = &quot;mango&quot; fruit5 = &quot;kiwi&quot; fruit6 = &quot;lemon&quot; fruit7 = &quot;lime&quot; print(fruit1, fruit2, fruit3, fruit4, fruit5, fruit6, fruit7) . apple banana orange mango kiwi lemon lime . Better Way . fruits = [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;mango&quot;, &quot;kiwi&quot;, &quot;lemon&quot;, &quot;lime&quot;] print(fruits) . [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;, &#39;mango&#39;, &#39;kiwi&#39;, &#39;lemon&#39;, &#39;lime&#39;] .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week14/2022/11/28/Unit_3.1_3.2_HACKS.html",
            "relUrl": "/jupyter/week14/2022/11/28/Unit_3.1_3.2_HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Unit 3.17-3.18 Group Lesson Period 4",
            "content": "Hailstone numbers . iterations = 0 def collatz(i): while i &gt; 1: if (i % 2): i = 3*i + 1 else: i = i//2 print(i, end=&#39; &#39;) global iterations iterations += 1 i = int(input(&#39;Enter i: &#39;)) print(&quot;Input:&quot;, i, &quot; nSequence: &quot;, end=&quot; &quot;) collatz(i) print(&quot; nNumber of iterations:&quot;,iterations) . Input: 5 Sequence: 16 8 4 2 1 Number of iterations: 5 . Number of iterations . def collatz(i): while i != 1: if i % 2 &gt; 0: i =((3 * i) + 1) list_.append(i) else: i = (i / 2) list_.append(i) return list_ print(&#39;Please enter a number: &#39;, end=&#39;&#39;) while True: try: i = int(input()) list_ = [i] break except ValueError: print(&#39;Invaid selection, try again: &#39;, end=&#39;&#39;) l = collatz(i) print(&#39;&#39;) print(&#39;Number of iterations:&#39;, len(l) - 1) . Please enter a number: Number of iterations: 8 . Vocab . Collatz . The Collatz conjecture is one of the most famous unsolved problems in mathematics. The conjecture asks whether repeating two simple arithmetic operations will eventually transform every positive integer into 1. . Hailstone numbers . The sequence of integers generated by Collatz conjecture are called Hailstone Numbers. Examples:Input : N = 7 Output : Hailstone Numbers: 7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1 No.&gt; ### Iteration The action or a process of iterating or repeating:such as. : a procedure in which repetition of a sequence of operations yields results successively closer to a desired result. . Undecidable problems . An undecidable problem is one that should give a &quot;yes&quot; or &quot;no&quot; answer, but yet no algorithm exists that can answer correctly on all inputs. . Unsolvable problems . An unsolvable problem is one for which no algorithm can ever be written to find the solution. . Additional information . A problem posed by L. Collatz in 1937, also called the 3x+1 mapping, 3n+1 problem, Hasse&#39;s algorithm, Kakutani&#39;s problem, Syracuse algorithm, Syracuse problem, Thwaites conjecture, and Ulam&#39;s problem (Lagarias 1985). Thwaites (1996) has offered a £1000 reward for resolving the conjecture. Let a_0 be an integer. Then one form of Collatz problem asks if iterating . always returns to 1 for positive a_0. (If negative numbers are included, there are four known cycles (excluding the trivial 0 cycle): (4, 2, 1), (-2, -1), (-5, -14, -7, -20, -10), and (-17, -50, -25, -74, -37, -110, -55, -164, -82, -41, -122, -61, -182, -91, -272, -136, -68, -34).) . The members of the sequence produced by the Collatz are sometimes known as hailstone numbers. Conway proved that the original Collatz problem has no nontrivial cycles of length &lt;400. Lagarias (1985) showed that there are no nontrivial cycles with length &lt;275000. Conway (1972) also proved that Collatz-type problems can be formally undecidable. Kurtz and Simon (2007) proved that a natural generalization of the Collatz problem is undecidable; unfortunately, this proof cannot be applied to the original Collatz problem. . The Collatz algorithm has been tested and found to always reach 1 for all numbers &lt;=19·2^(58) approx 5.48×10^(18) (Oliveira e Silva 2008), improving the earlier results of 10^(15) (Vardi 1991, p. 129) and 5.6×10^(13) (Leavens and Vermeulen 1992). Because of the difficulty in solving this problem, Erdős commented that &quot;mathematics is not yet ready for such problems&quot; (Lagarias 1985). . The numbers of steps required for the algorithm to reach 1 for a_0=1, 2, ... are 0, 1, 7, 2, 5, 8, 16, 3, 19, 6, 14, 9, 9, 17, 17, 4, 12, 20, 20, 7, ... (OEIS A006577; illustrated above). Of these, the numbers of tripling steps are 0, 0, 2, 0, 1, 2, 5, 0, 6, ... (OEIS A006667), and the number of halving steps are 0, 1, 5, 2, 4, 6, 11, 3, 13, ... (OEIS A006666). The smallest starting values of a_0 that yields a Collatz sequence containing n=1, 2, ... are 1, 2, 3, 3, 3, 6, 7, 3, 9, 3, 7, 12, 7, 9, 15, 3, 7, 18, 19, ... (OEIS A070167). . The Collatz problem can be implemented as an 8-register machine (Wolfram 2002, p. 100), quasi-cellular automaton (Cloney et al. 1987, Bruschi 2005), or 6-color one-dimensional quasi-cellular automaton with local rules but which wraps first and last digits around (Zeleny). In general, the difficulty in constructing true local-rule cellular automata arises from the necessity of a carry operation when multiplying by 3 which, in the worst case, can extend the entire length of the base-b representation of digits (and thus require propagating information at faster than the CA&#39;s speed of light). . More information . Hacks/Assignment . Take the two codes above and combine them so one imput gives the output that contains both the hailstone numbers and the number of iterations it takes i = 1. The more efficient the code, the higher your grade will be. (Algorithm Efficency) (.25) . Unit 3, Section 17: Algorithm Efficiency - Kush &amp; Yasha . What is Algorithm Efficiency? . Yasha - Algorithmic efficiency is an aspect of algorithmic programming that measures the number of steps needed to solve a problem. For instance, If I wanted to create a sorting algorithm that sorts numbers the numbers [2,4,5,1,3]from least to greatest, rather than having an algorithm that compares itself to the next number and swaps accordingly it would be more efficient if you had a program that scans through all the numbers and checks whether a number is smaller or bigger than the rest than and sorts accordingly. Both of the algorithms had the same objective, but one runs more efficiently than the other. . Here is an example of an inefficient algorithm: . def inefficientWay(numbers): # Then it loops over the numbers for i in range(len(numbers)): # Now it finds the minimum number in the unsorted part of the list min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j # Then it swaps the minimum number with the first unsorted number numbers[i], numbers[min_index] = numbers[min_index], numbers[i] # return the sorted list return numbers # test the algorithm print(inefficientWay([2, 4, 5, 1, 3])) # should print [1, 2, 3, 4, 5] . [1, 2, 3, 4, 5] . Yasha - This algorithm is inefficent because it uses a loop to find the minimum number in the unsorted part of the list and then swaps it with the first unsorted number. This is an inefficient way to sort a list. . Kush - Here is an efficent way to sort a list: . def efficient_sort(numbers): # loop over the numbers for i in range(len(numbers)): # find the minimum number in the unsorted part of the list min_index = i for j in range(i+1, len(numbers)): if numbers[j] &lt; numbers[min_index]: min_index = j # swap the minimum number with the first unsorted number numbers[i], numbers[min_index] = numbers[min_index], numbers[i] # return the sorted list return numbers # test the algorithm print(efficient_sort([2, 4, 5, 1, 3])) # should print [1, 2, 3, 4, 5] . [1, 2, 3, 4, 5] . Yasha - The difference in this algorithm is that it uses a loop to find the minimum number in the unsorted part of the list and then swaps it with the first unsorted number. . How can you use algorithms to better your life: Mini activity . Yasha - Just for a second, think about all the tasks in your life that would work so much better automated. The sky&#39;s the limit. For an activity, write down or take a mental note of a task that you encounter in your day to day life, and think of ways where you can automate that task. An example of this would be me creating an algorithm for my morning routine. . tasks = [&quot;wake up&quot;, &quot;eat breakfast&quot;, &quot;brush teeth&quot;, &quot;go to school&quot;] def complete_tasks(tasks): for task in tasks: # code to complete each task goes here if task == &quot;wake up&quot;: print(&quot;Waking up now!&quot;) elif task == &quot;eat breakfast&quot;: print(&quot;Eating breakfast now!&quot;) elif task == &quot;go to school&quot;: print(&quot;Going to school now!&quot;) # and so on for each task in the list # call the function to complete the tasks complete_tasks(tasks) . Waking up now! Eating breakfast now! Going to school now! . Taking a heuristic approach to problems P1 . Kush - Sometimes when a problem has too many possibilities, a heuristic approach would be taken. let&#39;s use planes as an example. Imagine you were a musician on tour. You have shows in New Zealand, United States, Canada, and Russia. Well, what would be the shortest flight route so you can arrive at those destinations as fast as possible? You start in the United States. . Taking a heuristic approach to problems P2 . Kush - Well, since there are multiple possibilities, I chose to pick the countries closest to each other. The reason I chose this algorithm in particular is that it made the most sense. I had to start at United States, but then I went on to Canada, Russia, New Zealand, and then back to the United States. . Visual Representation . Hacks/assignment . Write 2 algorithms: One is efficent and one is innefficent, then explain why one is efficent while the other isn&#39;t. (.25) | Explain why one algorithm is more efficient than another using mathematical and/or formal reasoning. (.25) | use variables, if statements, and loops to program your algorithm and upload to jupyter notebooks/ fastpages. (.25) | .",
            "url": "https://kaiden-dough.github.io/fastpages/2022/11/28/Quinn&Group.html",
            "relUrl": "/2022/11/28/Quinn&Group.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Calling and Developing Procedures Hack Plan",
            "content": "Create a Procedure to Convert 8-bit Binary to Decimal . With the developed procedure, the class will use the procedure and call it throughout the program. They would make a binary calculator, binary color picker, and possibly a binary to other base number systems. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week13/2022/11/17/hackplan.html",
            "relUrl": "/markdown/week13/2022/11/17/hackplan.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "Tools and Issue Verification",
            "content": "Python Jupyter Notebook . . Javascript Fastpages Markdown . Link to the Binary Math Markdown Page . Running make server to run the local server . .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week13/2022/11/16/toolscheck.html",
            "relUrl": "/markdown/week13/2022/11/16/toolscheck.html",
            "date": " • Nov 16, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "Binary Calculator",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . Decimal to Binary Calculator . Input a decimal number: Binary : ___ Input a decimal number: Binary : ___ Choose an operation: + - * / Answer : ___ &lt;&gt; Binary Answer : ___",
            "url": "https://kaiden-dough.github.io/fastpages/frontend/binarycalculator",
            "relUrl": "/frontend/binarycalculator",
            "date": " • Nov 16, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Trimester 1 Final Reflection",
            "content": "My Grade . I got a 50/50 on the Tri 1 Final Exam on College Board. | . | . Questions I Found Difficult . Question 18 | I didn’t know what exactly the World Wide Web and Internet were | My answer was a lucky guess | . | Question 19 | I did not know the binary values for the large numbers like 14 and 15 and 29 | I had to google a binary converter in order to complete the question | . | Question 22 | My binary skills are not that good so it took me a while converting the binary into decimal | But I still got the correct answer | . | Question 24 | My binary is not good so it took some time doing question | . | . Conclusion . My understanding of the topics in the exam were all good except for the topics relating to binary and the internet and world wide web. I did not know the complex binary to decimal conversions. Also I did not know the explicit relationship between the world wide web and the internet. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week11/2022/11/04/tri1finalreflection.html",
            "relUrl": "/markdown/week11/2022/11/04/tri1finalreflection.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Night At The Museum Blog",
            "content": "Our Project . While presenting our project our games had many positive reactions | People complemented our blackjack game | They also liked the multiplayer aspect of the pong game | Here is a photo of our project at the N@tM: | . Other People’s Projects . Ivy League Acceptance Calculator A user would input information about themselves like: Ethnicity | Gender | GPA | SAT score | ACT score | extracurriculars | . | Then the program would generate the acceptance probabilities to Ivy League Schools | Very cool and informative project | . | NBA Teams Stats You could search into a search bar about an NBA team | The program would produce links to the statistics about the team | Project is a great website for a one stop shop for basketball teams | . | CodeHoots A revamped version of Kahoot Frontend was remodeled | It was kind of like a singleplayer trivia game | . | There was very beautiful frontend | Players had a timer and a skip button, if they ran out of time or skip, they would lose points | This project was very innovative and I think it was cool | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week11/2022/11/03/nightatthemuseum.html",
            "relUrl": "/markdown/week11/2022/11/03/nightatthemuseum.html",
            "date": " • Nov 3, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Fetch of Backend True/False Questions",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . Statement True &#128002;&#128169; .",
            "url": "https://kaiden-dough.github.io/fastpages/data/trfa",
            "relUrl": "/data/trfa",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "The Internet (Unit 4.1)",
            "content": "The Internet Video #1 Notes . Computers and their users wanted to talk to each other | They could do this through the internet, computer network | Packet Switching: message or file is broken up into packers and sent in any order, then they are reassembled by the recipient’s device | Path and Routing: how the sender gets to the receiver and the process of finding the path | Bandwidth: max amount of data that can be sent in fixed amount of time on computer network (bits per second) | Takeaway: how computer devices work together on a network | . The Internet Video #2 Notes . Packet: small amount of data sent over a network | Protocols: Open Systems Interconnect | Transmissions Control Protocol | . | First goes through ethernet, then the message passes the message through until it hits the intended receiver | Takeaway: how Internet works, how data is sent through packets, differences between Internet and World Wide Web | . MCQ Grade: . Correction: Question 3, the World Wide Web is a info system that is accessed through the Internet, the Internet is a network of interconnected networks. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week8/2022/10/11/theinternet.html",
            "relUrl": "/markdown/week8/2022/10/11/theinternet.html",
            "date": " • Oct 11, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Group Plan",
            "content": "Lawnmowers Game Arcade . Project Purpose and Function: We would like to create a website that consists of mini games like retro games and casino games. . Different Components: We would like to have Retro Games: Pong and Snake + Casino Games: Blackjack and Slot Machine. Also we will have a currency. . Frontend Stuff: We will use HTML and CSS to create a homepage that links to the separate games. We will have a grassy, lawnmower theme and it would have sound effects related to lawn mowing. . The Pong game will use grass patches as the paddles and a small lawnmower icon as the ball. . | In the Snake game we will replace the snake with a lawnmower and it gets longer when it eats grass clumps and as it gets longer the grass holder extends. . | In the Blackjack game we will have a blackjack table that shows buttons to pick hit or stand and bet. The cards and chips also would move around the screen. . | In the Slot Machine game there would be a slot machine with a button that would start the spinning of the machine and then it would display the winnings and result. . | The Currency would be a leaf icon. . | . Backend Stuff: For our games, we will use a library called pygame and turtle. For our graphics, we will upload photos and use photoshop and our artistic skills to make different icons. . In the Pong game we will follow the mouse cursor and the ball will bounce off the paddles and slowly increase speed. . | In the Snake game we will take arrow input to control the lawnmower. And the program will detect if the Snake hits itself or the wall. (Algorithm Implementation can be used here because the sequencing can occur while the game is starting up and prompting the user to start, the selection can happen when it detects if the user clicks a key in order to move, and the iteration can repeat the detection of the keys while the game is playing) . | In Blackjack we will let the user hit or stand and bet their currency. Then after they stand the program would control the dealer to play its turn. Then if the player did not bust, the points of the player would be compared to the dealer to decide the winner. (Procedural Abstraction can be used here to set a function that would check if the player won or busted) . | For the Slot Machine every spin will be random and if they have a 3 in a row and our program would check if they have three in a row. If it comes out true, then they would win whatever prize. (Data Abstraction can be implemented here to set the different images the slot machine could display and we can randomize it to display the slots) . | The Currency would be global throughout the website and it would let them receive a reward and let them play the games. (Managing Complexity can be implemented here to track currency uses and amounts) . | . Testing: While programming, we will be constantly testing our code to make sure it works and it functions are we desire it to. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/09/groupplan.html",
            "relUrl": "/markdown/week7/2022/10/09/groupplan.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Airline API",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . . import requests url = &quot;https://iata-and-icao-codes.p.rapidapi.com/airlines&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;460f88d59amsh76ca8a31ce1e3e8p1980d4jsn45f1c423170f&quot;, &quot;X-RapidAPI-Host&quot;: &quot;iata-and-icao-codes.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) all = response.json() for x in all: for key, value in x.items(): if (key == &quot;name&quot;): print(&quot;Airline Name:&quot;, value) if (key == &quot;icao_code&quot;): print(&quot; ICAO Code:&quot;, value) . Airline Name: VASCO ICAO Code: VFC Airline Name: Branson Air Express ICAO Code: None Airline Name: Angara Airlines ICAO Code: AGU Airline Name: Star Peru ICAO Code: SRU Airline Name: Air Burkina ICAO Code: VBW Airline Name: Avianca ICAO Code: GLG Airline Name: Maya Island Air ICAO Code: MYD Airline Name: Albawings ICAO Code: AWT Airline Name: Blue Air ICAO Code: BMS Airline Name: Helvetic Airways ICAO Code: OAW Airline Name: Sun d&#39;Or Airlines ICAO Code: ERO Airline Name: Passaredo Linhas Aéreas ICAO Code: PTB Airline Name: Binter Cabo Verde ICAO Code: NTB Airline Name: Air Chathams ICAO Code: CVA Airline Name: Air Choice One ICAO Code: WBR Airline Name: Pacificair ICAO Code: None Airline Name: Air Inuit ICAO Code: AIE Airline Name: Jubba Airways ICAO Code: JBW Airline Name: Silver Airways ICAO Code: SIL Airline Name: Airline Urga ICAO Code: URG Airline Name: Air Philip ICAO Code: APV Airline Name: Avior Regional ICAO Code: RGR Airline Name: Air Antilles ICAO Code: GUY Airline Name: Tarco Aviation ICAO Code: TRQ Airline Name: Sichuan Airlines ICAO Code: CSC Airline Name: Malawi Airlines ICAO Code: MWI Airline Name: Boutique Air ICAO Code: BTQ Airline Name: Gazpromavia ICAO Code: GZP Airline Name: FlyDamas ICAO Code: FDK Airline Name: Kenn Borek Air ICAO Code: KBA Airline Name: Airnorth ICAO Code: ANT Airline Name: Star East Airlines ICAO Code: SEK Airline Name: Warbelows Air ICAO Code: WAV Airline Name: Airlink ICAO Code: LNK Airline Name: Bassaka Air ICAO Code: BSX Airline Name: Aeromexico Connect ICAO Code: SLI Airline Name: FlyOne ICAO Code: FIA Airline Name: FlyMontserrat ICAO Code: MNT Airline Name: SmartAvia ICAO Code: AUL Airline Name: ASL Airlines France ICAO Code: FPO Airline Name: Rutaca Airlines ICAO Code: RUC Airline Name: Canadian North ICAO Code: MPE Airline Name: TAG Airlines ICAO Code: TGU Airline Name: CemAir ICAO Code: KEM Airline Name: TUI fly Nordiс ICAO Code: BLX Airline Name: Air Timor ICAO Code: 586 Airline Name: Israir Airlines ICAO Code: ISR Airline Name: Solaseed Air ICAO Code: SNJ Airline Name: Aklak Air ICAO Code: AKK Airline Name: Niger Airlines ICAO Code: NIN Airline Name: Orbest ICAO Code: OBS Airline Name: Cham Wings Airlines ICAO Code: SAW Airline Name: ALROSA ICAO Code: DRU Airline Name: SaudiGulf ICAO Code: SGQ Airline Name: SmartLynx Airlines Estonia ICAO Code: MYX Airline Name: Madagasikara Airways ICAO Code: AYS Airline Name: Sylt Air ICAO Code: AWU Airline Name: First Air ICAO Code: FAB Airline Name: MAYAir ICAO Code: MYI Airline Name: Air Panama ICAO Code: PST Airline Name: Elite Airways ICAO Code: MNU Airline Name: RusLine ICAO Code: RLU Airline Name: Federal Airlines ICAO Code: FDR Airline Name: Windrose Airlines ICAO Code: WRC Airline Name: Mann Yadanarpon Airlines ICAO Code: MYP Airline Name: TransNusa ICAO Code: TNU Airline Name: Bering Air ICAO Code: BRG Airline Name: STP Airways ICAO Code: STP Airline Name: Fly Mid Africa ICAO Code: MFG Airline Name: BHAir ICAO Code: BGH Airline Name: EcoJet ICAO Code: ECO Airline Name: Myanmar Airways International ICAO Code: MMA Airline Name: Regional Air ICAO Code: REG Airline Name: Pacific Coastal Airlines ICAO Code: PCO Airline Name: Air Tindi ICAO Code: TID Airline Name: Afriqiyah Airways ICAO Code: AAW Airline Name: EWA Air ICAO Code: EWR Airline Name: LATAM Colombia ICAO Code: ARE Airline Name: PAL Express ICAO Code: GAP Airline Name: Jetstar Asia ICAO Code: JSA Airline Name: Air Arabia Maroc ICAO Code: MAC Airline Name: Fly540 ICAO Code: FFV Airline Name: IndiGo ICAO Code: IGO Airline Name: Jeju Air ICAO Code: JJA Airline Name: Lucky Air ICAO Code: LKE Airline Name: StarFlyer ICAO Code: SFJ Airline Name: TruJet ICAO Code: TRJ Airline Name: Ravn Alaska ICAO Code: RVF Airline Name: Eurowings ICAO Code: GWI Airline Name: Onur Air ICAO Code: OHY Airline Name: Interjet ICAO Code: AIJ Airline Name: Wright Air Service ICAO Code: WRT Airline Name: Fly All Ways ICAO Code: EDR Airline Name: Pan Pacific Airlines ICAO Code: AAV Airline Name: Congo Airways ICAO Code: CGA Airline Name: Air Changan ICAO Code: CGN Airline Name: Alliance Air ICAO Code: LLR Airline Name: Dana Air ICAO Code: DAN Airline Name: Cape Air ICAO Code: KAP Airline Name: Central Mountain Air ICAO Code: GLR Airline Name: Tropic Air ICAO Code: TOS Airline Name: Caicos Express Airways ICAO Code: CXE Airline Name: SATENA ICAO Code: NSE Airline Name: Air Moldova ICAO Code: MLD Airline Name: Avior Airlines ICAO Code: ROI Airline Name: Jet Airways ICAO Code: JAI Airline Name: Southern Airways Express ICAO Code: FDY Airline Name: National Airways Ethiopia ICAO Code: NAE Airline Name: Astra Airlines ICAO Code: AZI Airline Name: Azimuth ICAO Code: AZO Airline Name: HOP! ICAO Code: HOP Airline Name: Air Travel ICAO Code: HTU Airline Name: AeroLink ICAO Code: XAU Airline Name: Georgian Airways ICAO Code: TGZ Airline Name: Mandarin Airlines ICAO Code: MDA Airline Name: Aruba Airlines ICAO Code: ARU Airline Name: Air Algerie ICAO Code: DAH Airline Name: Aztec Airways ICAO Code: AZY Airline Name: Air Juan ICAO Code: None Airline Name: AlbaStar ICAO Code: LAV Airline Name: Alaska Airlines ICAO Code: ASA Airline Name: Royal Air Maroc ICAO Code: RAM Airline Name: Austral ICAO Code: AUT Airline Name: Africa World Airlines ICAO Code: AFW Airline Name: Venezolana ICAO Code: VNE Airline Name: La Compagnie ICAO Code: DJT Airline Name: Belavia ICAO Code: BRU Airline Name: Bhutan Airlines ICAO Code: BTN Airline Name: ZanAir ICAO Code: TAN Airline Name: EastAfrican ICAO Code: EXZ Airline Name: Uni Air ICAO Code: UIA Airline Name: Eritrean Airlines ICAO Code: ERT Airline Name: Iran Air Tours ICAO Code: IRB Airline Name: Seaborne Airlines ICAO Code: SBS Airline Name: Cambodia Bayon Airlines ICAO Code: BYC Airline Name: French Bee ICAO Code: FBU Airline Name: Biman Bangladesh Airlines ICAO Code: BBC Airline Name: Royal Brunei Airlines ICAO Code: RBA Airline Name: Nouvelair ICAO Code: LBT Airline Name: Okay Airways ICAO Code: OKA Airline Name: Air Botswana ICAO Code: BOT Airline Name: US-Bangla Airlines ICAO Code: UBG Airline Name: airBaltic ICAO Code: BTI Airline Name: flyCAA ICAO Code: FPY Airline Name: Caribbean Airlines ICAO Code: BWA Airline Name: TUI Airways ICAO Code: TOM Airline Name: Blue Bird Airways ICAO Code: BBG Airline Name: CEIBA Intercontinental ICAO Code: CEL Airline Name: Aegean Airlines ICAO Code: AEE Airline Name: Air Canada ICAO Code: ACA Airline Name: Air India ICAO Code: AIC Airline Name: Avianca ICAO Code: AVA Airline Name: British Airways ICAO Code: BAW Airline Name: American Airlines ICAO Code: AAL Airline Name: Finnair ICAO Code: FIN Airline Name: Aeromexico ICAO Code: AMX Airline Name: Alitalia ICAO Code: AZA Airline Name: Aerolineas Argentinas ICAO Code: ARG Airline Name: Air France ICAO Code: AFR Airline Name: Jetstar Pacific ICAO Code: PIC Airline Name: 9 Air ICAO Code: JYH Airline Name: AirAsia ICAO Code: AXM Airline Name: Air Busan ICAO Code: ABL Airline Name: Eastar Jet ICAO Code: ESR Airline Name: Skymark Airlines ICAO Code: SKY Airline Name: Spring Airlines ICAO Code: CQH Airline Name: Blue Panorama Airlines ICAO Code: BPA Airline Name: Flybe ICAO Code: BEE Airline Name: Azul ICAO Code: AZU Airline Name: Aereo Calafia ICAO Code: CFV Airline Name: jetBlue ICAO Code: JBU Airline Name: Trade Air ICAO Code: TDR Airline Name: AZUR Air ICAO Code: KTK Airline Name: Cinnamon Air ICAO Code: CIN Airline Name: Cronos Airlines ICAO Code: CRA Airline Name: Air China ICAO Code: CCA Airline Name: CM Airlines ICAO Code: OMT Airline Name: Corendon Dutch Airlines ICAO Code: CND Airline Name: Chalair Aviation ICAO Code: CLG Airline Name: PNG Air ICAO Code: TOK Airline Name: Lufthansa CityLine ICAO Code: CLH Airline Name: Grand China Air ICAO Code: GDC Airline Name: Coastal Aviation ICAO Code: CSV Airline Name: Alitalia CityLiner ICAO Code: CYL Airline Name: Cubana ICAO Code: CUB Airline Name: Copa Airlines ICAO Code: CMP Airline Name: China Airlines ICAO Code: CAL Airline Name: Cyprus Airways ICAO Code: CYP Airline Name: China Southern Airlines ICAO Code: CSN Airline Name: Severstal Air Company ICAO Code: SSF Airline Name: Daallo Airlines ICAO Code: DAO Airline Name: Norwegian Air International ICAO Code: IBK Airline Name: BRA ICAO Code: BRX Airline Name: Condor ICAO Code: None Airline Name: Norwegian ICAO Code: NAN Airline Name: Norwegian ICAO Code: NRS Airline Name: Thomas Cook Scandinavia ICAO Code: VKG Airline Name: Norwegian Air Argentina ICAO Code: NAA Airline Name: TAAG Angola ICAO Code: DTA Airline Name: SCAT Airlines ICAO Code: VSV Airline Name: Danish Air Transport ICAO Code: DTR Airline Name: Donghai Airlines ICAO Code: EPA Airline Name: New Gen Airways ICAO Code: VGO Airline Name: Enter Air ICAO Code: ENT Airline Name: Estelar Latinoamerica ICAO Code: ETR Airline Name: Equaflight ICAO Code: EKA Airline Name: Evelop! ICAO Code: EVE Airline Name: Wamos Air ICAO Code: PLM Airline Name: easyJet ICAO Code: EJU Airline Name: Ernest Airlines ICAO Code: ERN Airline Name: ANA Wings ICAO Code: AKX Airline Name: Aer Lingus ICAO Code: EIN Airline Name: Emirates ICAO Code: UAE Airline Name: Ellinair ICAO Code: ELB Airline Name: AirDolomiti ICAO Code: DLA Airline Name: Pegas Fly ICAO Code: KAR Airline Name: Iran Aseman Airlines ICAO Code: IRC Airline Name: TAME ICAO Code: TAE Airline Name: Serene Air ICAO Code: SEP Airline Name: Etihad Airways ICAO Code: ETD Airline Name: Safarilink Aviation ICAO Code: XLK Airline Name: flyadeal ICAO Code: FAD Airline Name: Air Flamenco ICAO Code: WAF Airline Name: FlyValan ICAO Code: FXP Airline Name: iFly ICAO Code: RSY Airline Name: Bulgaria Air ICAO Code: LZB Airline Name: Vivaair ICAO Code: VVC Airline Name: FAT Far Eastern Air Transport ICAO Code: FEA Airline Name: Ariana Afghan Airlines ICAO Code: AFG Airline Name: Icelandair ICAO Code: ICE Airline Name: Shanghai Airlines ICAO Code: CSH Airline Name: Fastjet Tanzania ICAO Code: FTZ Airline Name: Flybondi ICAO Code: FBD Airline Name: FlyPelican ICAO Code: FRE Airline Name: Flyest Lineas Aereas ICAO Code: None Airline Name: FlyEgypt ICAO Code: FEG Airline Name: Fly Tiwi ICAO Code: None Airline Name: Fuzhou Airlines ICAO Code: FZA Airline Name: Rossiya Airlines ICAO Code: SDM Airline Name: Ibex Airlines ICAO Code: IBX Airline Name: Firefly ICAO Code: FFM Airline Name: China Express Airlines ICAO Code: HXA Airline Name: Cathay Pacific ICAO Code: CPA Airline Name: SUN-AIR ICAO Code: SUS Airline Name: Fiji Airways ICAO Code: FJI Airline Name: Delta ICAO Code: DAL Airline Name: Chengdu Airlines ICAO Code: UEA Airline Name: Ruili Airlines ICAO Code: RLH Airline Name: Air Arabia Egypt ICAO Code: RBG Airline Name: Fastjet Zimbabwe ICAO Code: FJW Airline Name: FlySafair ICAO Code: SFR Airline Name: AirAsia X ICAO Code: XAX Airline Name: Nok Air ICAO Code: NOK Airline Name: Thai AirAsia ICAO Code: AIQ Airline Name: AirAsia Japan ICAO Code: WAJ Airline Name: Condor ICAO Code: CFG Airline Name: easyJet ICAO Code: EZS Airline Name: Eurowings ICAO Code: EWG Airline Name: Eurowings ICAO Code: EWE Airline Name: Norwegian ICAO Code: NAX Airline Name: Pobeda ICAO Code: PBD Airline Name: Ryanair ICAO Code: RYR Airline Name: GOL Linhas Aéreas ICAO Code: GLO Airline Name: Fly Corporate ICAO Code: None Airline Name: Flydubai ICAO Code: FDB Airline Name: Allegiant Air ICAO Code: AAY Airline Name: Flair Airlines ICAO Code: FLE Airline Name: Frontier Airlines ICAO Code: FFT Airline Name: Gowair Vacation Airlines ICAO Code: GWR Airline Name: Gulf Air ICAO Code: GFA Airline Name: Loong Air ICAO Code: CDC Airline Name: Air Greenland ICAO Code: GRL Airline Name: Germania Flug ICAO Code: GSW Airline Name: APG Airlines ICAO Code: RIV Airline Name: Sky Express Greece ICAO Code: SEH Airline Name: Aurigny ICAO Code: AUR Airline Name: Tianjin Airlines ICAO Code: GCR Airline Name: Air Guilin ICAO Code: CGH Airline Name: Avianca Guatemala ICAO Code: GUG Airline Name: Grant Aviation ICAO Code: GUN Airline Name: GX Airlines ICAO Code: CBG Airline Name: Colorful Guizhou Airlines ICAO Code: CGZ Airline Name: Air Rarotonga ICAO Code: RAR Airline Name: Thomas Cook Airlines Balearics ICAO Code: CTB Airline Name: Bulgarian Air Charter ICAO Code: BUC Airline Name: Ravn Alaska ICAO Code: RVF Airline Name: Eagle Air ICAO Code: FEI Airline Name: Taron Avia ICAO Code: TRV Airline Name: Hawaiian Airlines ICAO Code: HAL Airline Name: Asia Atlantic Airlines ICAO Code: AAQ Airline Name: Air Senegal ICAO Code: SZN Airline Name: Air Cote D&#39;Ivoire ICAO Code: VRE Airline Name: Taban Airlines ICAO Code: TBN Airline Name: Skippers Aviation ICAO Code: None Airline Name: Juneyao Airlines ICAO Code: DKH Airline Name: Hainan Airlines ICAO Code: CHH Airline Name: North-Wright Airways ICAO Code: NWL Airline Name: Hong Kong Airlines ICAO Code: CRK Airline Name: Uzbekistan Airways ICAO Code: UZB Airline Name: Aurora ICAO Code: SHU Airline Name: ATA Airlines ICAO Code: TBZ Airline Name: Island Air Express ICAO Code: EXP Airline Name: Izhavia ICAO Code: IZA Airline Name: Iraqi Airways ICAO Code: IAW Airline Name: Batik Air ICAO Code: BTK Airline Name: Solomon Airlines ICAO Code: SOL Airline Name: Fly Baghdad ICAO Code: FBA Airline Name: Air Kiribati ICAO Code: AKL Airline Name: Trigana Air Service ICAO Code: TGN Airline Name: NAM Air ICAO Code: LKN Airline Name: IrAero ICAO Code: IAE Airline Name: Qazaq Air ICAO Code: QAZ Airline Name: Iran Air ICAO Code: IRA Airline Name: Sepehran Airlines ICAO Code: SHI Airline Name: Caspian Airlines ICAO Code: CPN Airline Name: Yemenia ICAO Code: IYE Airline Name: Arkia ICAO Code: AIZ Airline Name: Azerbaijan Airlines ICAO Code: AHY Airline Name: Buta Airways ICAO Code: None Airline Name: Northwestern Air ICAO Code: PLR Airline Name: Badr Airlines ICAO Code: BDR Airline Name: Buffalo Airways ICAO Code: BFL Airline Name: Alaska Seaplanes ICAO Code: None Airline Name: Berjaya Air ICAO Code: BVT Airline Name: JetSmart ICAO Code: JAT Airline Name: Helijet ICAO Code: JBA Airline Name: Beijing Capital Airlines ICAO Code: CBJ Airline Name: Iberia ICAO Code: IBE Airline Name: Iberia Express ICAO Code: IBS Airline Name: Japan Air Commuter ICAO Code: JAC Airline Name: Air Seychelles ICAO Code: SEY Airline Name: Int&#39;Air Iles ICAO Code: IIA Airline Name: Harbour Air Seaplanes ICAO Code: HES Airline Name: AirAsia India ICAO Code: IAD Airline Name: Air Do ICAO Code: ADO Airline Name: Air India Express ICAO Code: AXB Airline Name: GoAir ICAO Code: GOW Airline Name: Jetstar Japan ICAO Code: JJP Airline Name: Spring Airlines Japan ICAO Code: SJO Airline Name: Tigerair Taiwan ICAO Code: TTW Airline Name: Wings Air ICAO Code: WON Airline Name: Air Italy ICAO Code: ISS Airline Name: Himalaya Airlines ICAO Code: HIM Airline Name: Transavia ICAO Code: TRA Airline Name: Sky Airline ICAO Code: SKU Airline Name: Air Arabia ICAO Code: ABY Airline Name: Jazeera Airways ICAO Code: JZR Airline Name: Jet Asia Airways ICAO Code: JAA Airline Name: Fuji Dream Airlines ICAO Code: FDA Airline Name: Meraj Airlines ICAO Code: MRJ Airline Name: Jambojet ICAO Code: None Airline Name: Joy Air ICAO Code: JOY Airline Name: Air Koryo ICAO Code: KOR Airline Name: Air Serbia ICAO Code: ASL Airline Name: Bearskin Airlines ICAO Code: BLS Airline Name: DAC Aviation ICAO Code: None Airline Name: InterCaribbean Airways ICAO Code: IWY Airline Name: Jubba Airways ICAO Code: JUB Airline Name: Taquan Air ICAO Code: TQN Airline Name: Cambodia Angkor Air ICAO Code: KHV Airline Name: Air KBZ ICAO Code: KBZ Airline Name: Drukair ICAO Code: DRK Airline Name: Air Astana ICAO Code: KZR Airline Name: Air Belgium ICAO Code: ABB Airline Name: KrasAvia ICAO Code: SSJ Airline Name: Air Malta ICAO Code: AMC Airline Name: China United Airlines ICAO Code: CUA Airline Name: Maroomba Airlines ICAO Code: None Airline Name: Komiaviatrans ICAO Code: KMA Airline Name: ASKY Airlines ICAO Code: SKK Airline Name: Cambodia Airways ICAO Code: KME Airline Name: Penair ICAO Code: PEN Airline Name: Kuwait Airways ICAO Code: KAC Airline Name: Korea Express Air ICAO Code: KEA Airline Name: Cayman Airways ICAO Code: CAY Airline Name: Kunming Airlines ICAO Code: KNA Airline Name: LASA Líneas Aéreas ICAO Code: None Airline Name: Mauritania Airlines International ICAO Code: MAI Airline Name: Luxair ICAO Code: LGL Airline Name: Liat ICAO Code: LIA Airline Name: Lao Skyway ICAO Code: LLL Airline Name: Miami Air International ICAO Code: BSK Airline Name: Loganair ICAO Code: LOG Airline Name: Libyan Airlines ICAO Code: LAA Airline Name: Avianca Costa Rica ICAO Code: LRC Airline Name: LongJiang Airlines ICAO Code: SNG Airline Name: Level ICAO Code: BOS Airline Name: EL AL ICAO Code: ELY Airline Name: Aero Mongolia ICAO Code: MNG Airline Name: Kenmore Air ICAO Code: KEN Airline Name: SkyJet Airlines ICAO Code: MSJ Airline Name: Motor Sich Airlines ICAO Code: MSI Airline Name: SilkAir ICAO Code: SLK Airline Name: Calm Air ICAO Code: CAV Airline Name: Hunnu Air ICAO Code: MML Airline Name: Egyptair ICAO Code: MSR Airline Name: Thomas Cook Airlines ICAO Code: TCX Airline Name: Air Mediterranean ICAO Code: MAR Airline Name: Mokulele Airlines ICAO Code: MHO Airline Name: MASwings ICAO Code: MWG Airline Name: Amakusa Airlines ICAO Code: AHX Airline Name: Nordwind Airlines ICAO Code: NWS Airline Name: Nolinor Aviation ICAO Code: NRL Airline Name: Novair ICAO Code: NVR Airline Name: Nesma Airlines ICAO Code: NSS Airline Name: Cobham Aviation Services Australia ICAO Code: JTE Airline Name: Nesma Airlines ICAO Code: NMA Airline Name: Air Vanuatu ICAO Code: AVN Airline Name: Al Naser Wings ICAO Code: NAD Airline Name: aero ICAO Code: NIG Airline Name: TAP Air Portugal ICAO Code: PGA Airline Name: Niger Airways ICAO Code: NWA Airline Name: Neos ICAO Code: NOS Airline Name: Nile Air ICAO Code: NIA Airline Name: SWISS ICAO Code: SWR Airline Name: Lufthansa ICAO Code: DLH Airline Name: LOT Polish ICAO Code: LOT Airline Name: EgyptAir Express ICAO Code: MSE Airline Name: LATAM Brasil ICAO Code: TAM Airline Name: Mango ICAO Code: MNO Airline Name: Japan Airlines ICAO Code: JAL Airline Name: Cathay Dragon ICAO Code: HDA Airline Name: LATAM Chile ICAO Code: LAN Airline Name: Malaysia Airlines ICAO Code: MAS Airline Name: LATAM Express ICAO Code: LXP Airline Name: LATAM Peru ICAO Code: LPE Airline Name: NORRA ICAO Code: FCM Airline Name: KLM ICAO Code: KLM Airline Name: Kenya Airways ICAO Code: KQA Airline Name: Middle East Airlines ICAO Code: MEA Airline Name: Xiamen Airlines ICAO Code: CXA Airline Name: China Eastern ICAO Code: CES Airline Name: Air Madagascar ICAO Code: MDG Airline Name: Air Mauritius ICAO Code: MAU Airline Name: Kulula ICAO Code: CAW Airline Name: Jetstar ICAO Code: JST Airline Name: Jin Air ICAO Code: JNA Airline Name: Lion Air ICAO Code: LNI Airline Name: Myway Airlines ICAO Code: MYW Airline Name: Peach ICAO Code: APJ Airline Name: Lanmei Airlines ICAO Code: MKR Airline Name: Vanilla Air ICAO Code: VNL Airline Name: Atlasglobal ICAO Code: KKK Airline Name: Jet2.com ICAO Code: EXS Airline Name: Spirit Airlines ICAO Code: NKS Airline Name: Air Japan ICAO Code: AJX Airline Name: Hebei Airlines ICAO Code: HBH Airline Name: Binter Canarias ICAO Code: IBB Airline Name: Karun Airlines ICAO Code: IRG Airline Name: Air Macau ICAO Code: AMU Airline Name: Air Iceland Connect ICAO Code: FXI Airline Name: Avianca Brazil ICAO Code: ONE Airline Name: Orenburzhye ICAO Code: ORG Airline Name: NOVA Airways ICAO Code: NOV Airline Name: Olympic Air ICAO Code: OAL Airline Name: BOA Boliviana de Aviación ICAO Code: BOV Airline Name: Oriental Air Bridge ICAO Code: ORC Airline Name: Cairo Aviation ICAO Code: CCE Airline Name: Laudamotion ICAO Code: LDM Airline Name: Overland Airways ICAO Code: OLA Airline Name: Originair ICAO Code: OGN Airline Name: Hinterland Aviation ICAO Code: HND Airline Name: Samoa Airways ICAO Code: PAO Airline Name: MIAT Mongolian Airlines ICAO Code: MGL Airline Name: Nauru Airlines ICAO Code: RON Airline Name: PassionAir ICAO Code: DIG Airline Name: Chongqing Airlines ICAO Code: CQN Airline Name: TUIfly Netherlands ICAO Code: TFL Airline Name: Skyward Express ICAO Code: SEW Airline Name: Andes Lineas Aereas ICAO Code: ANS Airline Name: Proflight Zambia ICAO Code: PFZ Airline Name: AirKenya ICAO Code: XAK Airline Name: Wingo ICAO Code: RPB Airline Name: Pascan Aviation ICAO Code: PSC Airline Name: Privilege Style ICAO Code: PVG Airline Name: SprintAir ICAO Code: SRN Airline Name: Peruvian Airlines ICAO Code: PVN Airline Name: PAL Airlines ICAO Code: PVL Airline Name: Pegasus Airlines ICAO Code: PGT Airline Name: Porter Airlines ICAO Code: POE Airline Name: People&#39;s Viennaline ICAO Code: PEV Airline Name: Bangkok Airways ICAO Code: BKP Airline Name: Phoenix Air ICAO Code: PHA Airline Name: Polar Airlines ICAO Code: RKA Airline Name: Air Saint Pierre ICAO Code: SPM Airline Name: PIA ICAO Code: PIA Airline Name: Southern Air Charter ICAO Code: SOA Airline Name: Canaryfly ICAO Code: CNF Airline Name: Philippine Airlines ICAO Code: PAL Airline Name: UIA ICAO Code: AUI Airline Name: Plus Ultra Lineas Aereas ICAO Code: PUE Airline Name: St Barth Commuter ICAO Code: SBU Airline Name: Precision Air ICAO Code: PRF Airline Name: Air Niugini ICAO Code: ANG Airline Name: Surinam Airways ICAO Code: SLM Airline Name: LATAM Paraguay ICAO Code: LAP Airline Name: Maldivian ICAO Code: DQA Airline Name: Anguilla Air Services ICAO Code: AXL Airline Name: 40 Mile Air ICAO Code: MLA Airline Name: SkyBahamas ICAO Code: SBM Airline Name: Trans Air Congo ICAO Code: TSG Airline Name: Qeshm Air ICAO Code: IRQ Airline Name: Camair-co ICAO Code: CRC Airline Name: JC International Airlines ICAO Code: JCC Airline Name: Bamboo Airways ICAO Code: BAV Airline Name: Air Kyrgyzstan ICAO Code: LYN Airline Name: Air Canada Express ICAO Code: JZA Airline Name: LASER Airlines ICAO Code: LER Airline Name: Monacair ICAO Code: None Airline Name: Skytrans ICAO Code: SKP Airline Name: Alliance Airlines ICAO Code: UTY Airline Name: Azur Air Ukraine ICAO Code: UTN Airline Name: Lao Airlines ICAO Code: LAO Airline Name: Qingdao Airlines ICAO Code: QDA Airline Name: Transair Senegal ICAO Code: GTS Airline Name: Yakutia Airlines ICAO Code: SYL Airline Name: DOT LT ICAO Code: DNU Airline Name: Nepal Airlines ICAO Code: RNA Airline Name: SyrianAir ICAO Code: SYR Airline Name: Atlantic Airways ICAO Code: FLI Airline Name: Rotana Jet ICAO Code: RJD Airline Name: Royal Flight ICAO Code: ABG Airline Name: Armenia Aircompany ICAO Code: NGT Airline Name: Kam Air ICAO Code: KMF Airline Name: Ryanair Sun ICAO Code: RYS Airline Name: UVT Aero ICAO Code: BUG Airline Name: Air Canada Rouge ICAO Code: ROU Airline Name: Royal Air Charter ICAO Code: RYL Airline Name: Regent Airways ICAO Code: RGE Airline Name: SANSA ICAO Code: LRS Airline Name: Aerolineas Sosa ICAO Code: NSO Airline Name: Azores Airlines ICAO Code: RZO Airline Name: Sunrise Airways ICAO Code: KSZ Airline Name: Croatia Airlines ICAO Code: CTN Airline Name: Asiana Airlines ICAO Code: AAR Airline Name: Japan Transocean Air ICAO Code: JTA Airline Name: S7 Airlines ICAO Code: SBI Airline Name: Qantas ICAO Code: QFA Airline Name: Qatar Airways ICAO Code: QTR Airline Name: Royal Jordanian ICAO Code: RJA Airline Name: Tarom ICAO Code: ROT Airline Name: CSA Czech Airlines ICAO Code: CSA Airline Name: Citilink ICAO Code: CTV Airline Name: Air Peace ICAO Code: APK Airline Name: airblue ICAO Code: ABQ Airline Name: Air Seoul ICAO Code: ASV Airline Name: West Air ICAO Code: CHB Airline Name: Indonesia AirAsia ICAO Code: AWQ Airline Name: JetLite ICAO Code: JLL Airline Name: Malindo Air ICAO Code: MXD Airline Name: SmartWings Czechia ICAO Code: TVS Airline Name: Volaris Costa Rica ICAO Code: VOC Airline Name: Jordan Aviation ICAO Code: JAV Airline Name: SalamAir ICAO Code: OMS Airline Name: Sounds Air ICAO Code: SDA Airline Name: Aircalin ICAO Code: ACI Airline Name: Shandong Airlines ICAO Code: CDG Airline Name: Sudan Airways ICAO Code: SUD Airline Name: XL Airways France ICAO Code: XLF Airline Name: Tassili Airlines ICAO Code: DTH Airline Name: Sharp Airlines ICAO Code: SHA Airline Name: Flybe ICAO Code: BCI Airline Name: Sriwijaya Air ICAO Code: SJY Airline Name: Air Cairo ICAO Code: MSC Airline Name: SATA Air Acores ICAO Code: SAT Airline Name: Sky Pasada ICAO Code: WCC Airline Name: SundAir ICAO Code: SDR Airline Name: Corsair International ICAO Code: CRL Airline Name: Air Namibia ICAO Code: NMB Airline Name: Somon Air ICAO Code: SMR Airline Name: Avianca Peru ICAO Code: TPU Airline Name: Fly Art ICAO Code: FLB Airline Name: Eastern Airways ICAO Code: EZE Airline Name: Turkmenistan Airlines ICAO Code: TUA Airline Name: AirSWIFT ICAO Code: ATX Airline Name: Twin Jet ICAO Code: TJT Airline Name: Avianca El Salvador ICAO Code: TAI Airline Name: Air Tanzania ICAO Code: ATC Airline Name: SkyTaxi ICAO Code: IGA Airline Name: BRA ICAO Code: SCW Airline Name: Tailwind Airlines ICAO Code: TWI Airline Name: Tradewind Aviation ICAO Code: GPD Airline Name: Airnorth ICAO Code: ANO Airline Name: LAM Mozambique Airlines ICAO Code: LAM Airline Name: Air Tahiti Nui ICAO Code: THT Airline Name: Tandem Aero ICAO Code: TDM Airline Name: Air Transat ICAO Code: TSC Airline Name: Tunisair ICAO Code: TAR Airline Name: Tibet Airlines ICAO Code: TBA Airline Name: Air Caraibes ICAO Code: FWI Airline Name: Air Caledonie ICAO Code: TPC Airline Name: Tsaradia ICAO Code: None Airline Name: Buddha Air ICAO Code: BHA Airline Name: Karinou Airlines ICAO Code: KRN Airline Name: Ural Airlines ICAO Code: SVR Airline Name: Tus Airways ICAO Code: CYF Airline Name: Myanmar National Airlines ICAO Code: UBA Airline Name: Ultimate Air Shuttle ICAO Code: UJC Airline Name: Tunisair Express ICAO Code: TUX Airline Name: AtlasGlobal Ukraine ICAO Code: UJX Airline Name: Auric Air ICAO Code: AUK Airline Name: ALMasria Universal Airlines ICAO Code: LMU Airline Name: Vistara ICAO Code: VTI Airline Name: South African Airways ICAO Code: SAA Airline Name: SAS Scandinavian ICAO Code: SAS Airline Name: Air Zimbabwe ICAO Code: AZW Airline Name: Bahamasair ICAO Code: BHS Airline Name: Utair ICAO Code: UTA Airline Name: Buraq Air ICAO Code: BRQ Airline Name: Conviasa ICAO Code: VCV Airline Name: Vieques Air Link ICAO Code: VES Airline Name: Aerovias DAP ICAO Code: DAP Airline Name: VI Airlink ICAO Code: VIL Airline Name: THAI airways ICAO Code: THA Airline Name: United Airlines ICAO Code: UAL Airline Name: Brussels Airlines ICAO Code: BEL Airline Name: Singapore Airlines ICAO Code: SIA Airline Name: Turkish Airlines ICAO Code: THY Airline Name: TAP Air Portugal ICAO Code: TAP Airline Name: SriLankan Airlines ICAO Code: ALK Airline Name: Saudia ICAO Code: SVA Airline Name: Aeroflot ICAO Code: AFL Airline Name: Air Europa ICAO Code: AEA Airline Name: Air Austral ICAO Code: REU Airline Name: Thai Lion Air ICAO Code: TLM Airline Name: Urumqi Air ICAO Code: CUH Airline Name: HK Express ICAO Code: HKE Airline Name: Scoot ICAO Code: SCO Airline Name: SpiceJet ICAO Code: SEJ Airline Name: Tigerair Australia ICAO Code: TGG Airline Name: T&#39;way Air ICAO Code: TWB Airline Name: easyJet ICAO Code: EZY Airline Name: Transavia France ICAO Code: TVF Airline Name: TUI fly Belgium ICAO Code: JAF Airline Name: Volotea ICAO Code: VOE Airline Name: Sun Country Airlines ICAO Code: SCX Airline Name: Iliamna Air Taxi ICAO Code: IAR Airline Name: Virgin Australia ICAO Code: VOZ Airline Name: LATAM Ecuador ICAO Code: LNE Airline Name: Aeropostal ICAO Code: ALV Airline Name: Anisec Luftfahrt ICAO Code: FOO Airline Name: Med-View Airline ICAO Code: MEV Airline Name: Max Air ICAO Code: NGL Airline Name: Flyme ICAO Code: VQI Airline Name: Novoair ICAO Code: NVQ Airline Name: Cabo Verde Airlines ICAO Code: TCV Airline Name: Virgin Atlantic ICAO Code: VIR Airline Name: Air Tahiti ICAO Code: VTA Airline Name: Viva Air Peru ICAO Code: VPE Airline Name: Aeromar ICAO Code: TAO Airline Name: Thai Vietjet Air ICAO Code: TVJ Airline Name: FlexFlight ICAO Code: FXT Airline Name: Arik Air ICAO Code: ARA Airline Name: Mahan Air ICAO Code: IRM Airline Name: Wings of Lebanon ICAO Code: WLB Airline Name: Wizz Air UK ICAO Code: WUK Airline Name: KLM Cityhopper ICAO Code: KLC Airline Name: RwandAir ICAO Code: RWD Airline Name: Avianca Honduras ICAO Code: ISV Airline Name: THAI Smile ICAO Code: THD Airline Name: Widerøe ICAO Code: WIF Airline Name: White Airways ICAO Code: WHT Airline Name: Edelweiss Air ICAO Code: EDW Airline Name: Winair ICAO Code: WIA Airline Name: Swift Air ICAO Code: SWQ Airline Name: Wasaya Airways ICAO Code: WSG Airline Name: Jetways Airlines ICAO Code: JWX Airline Name: Westair Aviation ICAO Code: WAA Airline Name: Oman Air ICAO Code: OMA Airline Name: Red Wings ICAO Code: RWZ Airline Name: Alaska Seaplanes ICAO Code: None Airline Name: Air Europa Express ICAO Code: OVA Airline Name: Corendon Airlines ICAO Code: CAI Airline Name: JetSuiteX ICAO Code: JSX Airline Name: Air Corsica ICAO Code: CCM Airline Name: XpressAir ICAO Code: XAR Airline Name: Corendon Airlines Europe ICAO Code: CXI Airline Name: Indonesia AirAsia X ICAO Code: IDX Airline Name: African Express Airways ICAO Code: AXK Airline Name: Air Century ICAO Code: CEY Airline Name: AB Aviation ICAO Code: AYD Airline Name: NordStar ICAO Code: TYA Airline Name: Suparna Airlines ICAO Code: YZR Airline Name: Kish Air ICAO Code: IRK Airline Name: Yamal Airlines ICAO Code: LLM Airline Name: YANAIR ICAO Code: ANR Airline Name: Yangon Airways ICAO Code: AYG Airline Name: Asian Wings Airways ICAO Code: AWM Airline Name: Avia Traffic Company ICAO Code: AVJ Airline Name: Libyan Wings ICAO Code: LWA Airline Name: Montenegro Airlines ICAO Code: MGX Airline Name: Air Creebec ICAO Code: CRQ Airline Name: Heli Air Monaco ICAO Code: MCM Airline Name: Perimeter Aviation ICAO Code: PAG Airline Name: TAR Aerolineas ICAO Code: LCT Airline Name: HOP! Regional ICAO Code: RAE Airline Name: Yeti Airlines ICAO Code: NYT Airline Name: EuroAtlantic Airways ICAO Code: MMZ Airline Name: Amaszonas Uruguay ICAO Code: AUZ Airline Name: Amaszonas ICAO Code: AZN Airline Name: Bek Air ICAO Code: BEK Airline Name: Sky Angkor Airlines ICAO Code: SWM Airline Name: Iberia Regional by Air Nostrum ICAO Code: ANE Airline Name: Vietnam Airlines ICAO Code: HVN Airline Name: Vueling ICAO Code: VLG Airline Name: Golden Myanmar Airlines ICAO Code: GMR Airline Name: NokScoot ICAO Code: NCT Airline Name: Philippines AirAsia ICAO Code: APG Airline Name: SEAir International ICAO Code: SGD Airline Name: Thai AirAsia X ICAO Code: TAX Airline Name: Sevenair ICAO Code: RVP Airline Name: Vietjet ICAO Code: VJC Airline Name: SunExpress ICAO Code: SXS Airline Name: SunExpress Deutschland ICAO Code: SXD Airline Name: TUI fly Deutschland ICAO Code: TUI Airline Name: Wizz Air ICAO Code: WZZ Airline Name: EasyFly ICAO Code: EFY Airline Name: Viva Aerobus ICAO Code: VIV Airline Name: Volaris ICAO Code: VOI Airline Name: Flynas ICAO Code: KNE Airline Name: Southwest Airlines ICAO Code: SWA Airline Name: Sunwing Airlines ICAO Code: SWG Airline Name: ViaAir ICAO Code: SRY Airline Name: WestJet ICAO Code: WJA Airline Name: WestJet Encore ICAO Code: WEN Airline Name: Swoop ICAO Code: WSW Airline Name: Aigle Azur ICAO Code: AAF Airline Name: Regional Express ICAO Code: RXA Airline Name: Zoom Air ICAO Code: ZOM Airline Name: Paranair ICAO Code: AZP Airline Name: Azman Air ICAO Code: AZM Airline Name: Air Canada Express ICAO Code: GGN Airline Name: Hi Fly Malta ICAO Code: HFM Airline Name: EVA Air ICAO Code: EVA Airline Name: Adria Airways ICAO Code: ADR Airline Name: Ethiopian Airlines ICAO Code: ETH Airline Name: Austrian Airlines ICAO Code: AUA Airline Name: All Nippon Airways ICAO Code: ANA Airline Name: Shenzhen Airlines ICAO Code: CSZ Airline Name: LATAM Argentina ICAO Code: DSM Airline Name: BA CityFlyer ICAO Code: CFE Airline Name: Globus Airlines ICAO Code: GLP Airline Name: J-Air ICAO Code: JLJ Airline Name: Qatar Executive ICAO Code: QQE Airline Name: Jiangxi Air ICAO Code: CJX Airline Name: Korean Air ICAO Code: KAL Airline Name: Garuda Indonesia ICAO Code: GIA Airline Name: Joon ICAO Code: JON Airline Name: Turpial Airlines ICAO Code: VTU Airline Name: Air Manas ICAO Code: MBB Airline Name: Cebgo ICAO Code: SRQ Airline Name: Cebu Pacific ICAO Code: CEB Airline Name: Air New Zealand ICAO Code: ANZ Airline Name: Scoot ICAO Code: TGW Airline Name: Hi Fly ICAO Code: HFY Airline Name: Hibernian Airlines ICAO Code: HBN .",
            "url": "https://kaiden-dough.github.io/fastpages/week7/2022/10/09/api.html",
            "relUrl": "/week7/2022/10/09/api.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Identifying and Correcting Errors (Unit 1.4)",
            "content": "Identifying and Correcting Errors Video #1 Notes . Programmers run into errors many times and it is a part of the programming process | Logic Error: when the programmer makes a mistake in the algorithm that causes an unexpected result | Syntax Error: a typo in the code that doesn’t let the program to run or compile | Run-Time Error: the program fails while running, it can run but cannot finish the processes, also called a bug | Overflow Error: when the result is too large for the range | Takeaway: How to identify an error and understand the 4 main errors | . Identifying and Correcting Errors Video #2 Notes . How to correct a syntax error: use the IDEs’ suggestion and guidance of where the error is happening | How to correct logic errors: use Test Cases and try out different inputs | Hand Tracing: writing out the values of variables within the loop as it iterates to determine if the result is correct | Add Extra Outputs: help to find and fix the error | Some IDEs show visualizations and debuggers to help correct errors | . | Takeaway: How to correct errors and ways to correct and find errors | . Identifying and Correcting Errors Video #3 Notes . Programmers start thinking of and does testing from start to finish | Testing to make sure the requirements are met | Minimum number example: C wouldn’t work because the minimum number would be rewritten every single round | Temperature example: B because the sign should have been less than or equal to | The testing is used to revise, refine, and improve the program | Testing is used to find and fix problems in the program | Takeaway: Identify inputs and intended outputs by testing the program | . MCQ Grade: . Question 3 Corrections: the Number 7 results in the correct answer. But number 8 results in check minus instead of check. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week7/2022/10/03/identifyingandcorrectingerrors.html",
            "relUrl": "/markdown/week7/2022/10/03/identifyingandcorrectingerrors.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;460f88d59amsh76ca8a31ce1e3e8p1980d4jsn45f1c423170f&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # print(response.json()) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;460f88d59amsh76ca8a31ce1e3e8p1980d4jsn45f1c423170f&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;status&#34;:&#34;success&#34;,&#34;data&#34;:{&#34;stats&#34;:{&#34;total&#34;:1500,&#34;totalCoins&#34;:15880,&#34;totalMarkets&#34;:29503,&#34;totalExchanges&#34;:172,&#34;totalMarketCap&#34;:&#34;983464610639&#34;,&#34;total24hVolume&#34;:&#34;63343925158&#34;},&#34;coins&#34;:[{&#34;uuid&#34;:&#34;Qwsogvtv82FCd&#34;,&#34;symbol&#34;:&#34;BTC&#34;,&#34;name&#34;:&#34;Bitcoin&#34;,&#34;color&#34;:&#34;#f7931A&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg&#34;,&#34;marketCap&#34;:&#34;384189257981&#34;,&#34;price&#34;:&#34;20039.85225285541&#34;,&#34;listedAt&#34;:1330214400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.79&#34;,&#34;rank&#34;:1,&#34;sparkline&#34;:[&#34;20223.555335162455&#34;,&#34;20136.54831352927&#34;,&#34;20049.815416539706&#34;,&#34;20094.393545497052&#34;,&#34;20158.58698671382&#34;,&#34;20232.898003614322&#34;,&#34;20293.618431388033&#34;,&#34;20355.557600474516&#34;,&#34;20337.9076796474&#34;,&#34;20378.945224236224&#34;,&#34;20339.414870489745&#34;,&#34;20264.990263682765&#34;,&#34;20213.26195787923&#34;,&#34;20202.974824398778&#34;,&#34;20157.250216544355&#34;,&#34;20141.409719078547&#34;,&#34;20143.75303286625&#34;,&#34;20204.211148012277&#34;,&#34;20220.284434483106&#34;,&#34;20137.216620466203&#34;,&#34;20006.100174996944&#34;,&#34;20069.0906701522&#34;,&#34;20048.293652930657&#34;,&#34;20090.639746665587&#34;,&#34;20084.906588703758&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc&#34;,&#34;24hVolume&#34;:&#34;36457447479&#34;,&#34;btcPrice&#34;:&#34;1&#34;},{&#34;uuid&#34;:&#34;razxDUgYGNAdQ&#34;,&#34;symbol&#34;:&#34;ETH&#34;,&#34;name&#34;:&#34;Ethereum&#34;,&#34;color&#34;:&#34;#3C3C3D&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rk4RKHOuW/eth.svg&#34;,&#34;marketCap&#34;:&#34;166095675168&#34;,&#34;price&#34;:&#34;1357.926575523784&#34;,&#34;listedAt&#34;:1438905600,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.42&#34;,&#34;rank&#34;:2,&#34;sparkline&#34;:[&#34;1356.1441141557204&#34;,&#34;1351.126644284867&#34;,&#34;1349.0384567537553&#34;,&#34;1350.486586991934&#34;,&#34;1353.0627871586412&#34;,&#34;1361.5377625273948&#34;,&#34;1374.2027236665588&#34;,&#34;1375.7214408982059&#34;,&#34;1373.1173416682698&#34;,&#34;1375.6203205822255&#34;,&#34;1374.5833968999716&#34;,&#34;1369.002110485522&#34;,&#34;1366.0660235467826&#34;,&#34;1364.8208492018532&#34;,&#34;1360.0380488934045&#34;,&#34;1358.8777951928896&#34;,&#34;1359.201867480813&#34;,&#34;1366.6546209787482&#34;,&#34;1370.3407047067003&#34;,&#34;1366.4064227205356&#34;,&#34;1361.2014385928683&#34;,&#34;1365.232068355049&#34;,&#34;1362.6548801446975&#34;,&#34;1364.1019072109643&#34;,&#34;1362.7987815464114&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth&#34;,&#34;24hVolume&#34;:&#34;12617566162&#34;,&#34;btcPrice&#34;:&#34;0.06776130673968905&#34;},{&#34;uuid&#34;:&#34;HIVsRcGKkPFtW&#34;,&#34;symbol&#34;:&#34;USDT&#34;,&#34;name&#34;:&#34;Tether USD&#34;,&#34;color&#34;:&#34;#22a079&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mgHqwlCLj/usdt.svg&#34;,&#34;marketCap&#34;:&#34;68302484910&#34;,&#34;price&#34;:&#34;1.0013180922249538&#34;,&#34;listedAt&#34;:1420761600,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.13&#34;,&#34;rank&#34;:3,&#34;sparkline&#34;:[&#34;1.0001435467325461&#34;,&#34;1.0010566171285733&#34;,&#34;1.0007218035748657&#34;,&#34;0.9998195240120525&#34;,&#34;1.0001942073599759&#34;,&#34;0.999198242906088&#34;,&#34;0.999970326331934&#34;,&#34;0.9999578602237212&#34;,&#34;1.0002749344768964&#34;,&#34;0.9998618718046304&#34;,&#34;1.0006329886842509&#34;,&#34;1.0010446040777476&#34;,&#34;1.0005604241221613&#34;,&#34;1.0006413322201635&#34;,&#34;1.0004437331204448&#34;,&#34;1.0006101471625053&#34;,&#34;1.0001687521957723&#34;,&#34;0.9995037614095902&#34;,&#34;1.0006440819313598&#34;,&#34;1.001376308434132&#34;,&#34;1.0003961159670858&#34;,&#34;1.0000147257385132&#34;,&#34;1.0001689083946086&#34;,&#34;0.9998823624197636&#34;,&#34;1.000601519429449&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt&#34;,&#34;24hVolume&#34;:&#34;41087071831&#34;,&#34;btcPrice&#34;:&#34;0.000049966341048362&#34;},{&#34;uuid&#34;:&#34;aKzUVe4Hh_CON&#34;,&#34;symbol&#34;:&#34;USDC&#34;,&#34;name&#34;:&#34;USDC&#34;,&#34;color&#34;:&#34;#7894b4&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/jkDf8sQbY/usdc.svg&#34;,&#34;marketCap&#34;:&#34;46322170245&#34;,&#34;price&#34;:&#34;1.0014872322256272&#34;,&#34;listedAt&#34;:1539043200,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.17&#34;,&#34;rank&#34;:4,&#34;sparkline&#34;:[&#34;0.9999345475197645&#34;,&#34;1.000912309467801&#34;,&#34;1.0005863270210245&#34;,&#34;0.9998825447125274&#34;,&#34;1.0001565051935892&#34;,&#34;0.9992645129007548&#34;,&#34;0.9998675462392212&#34;,&#34;0.9998272931691644&#34;,&#34;1.0002224153445407&#34;,&#34;0.9999317743533871&#34;,&#34;1.0006585942367816&#34;,&#34;1.000952432863041&#34;,&#34;1.0004393434555847&#34;,&#34;1.0005154262173783&#34;,&#34;1.0004131871429036&#34;,&#34;1.0005795066052903&#34;,&#34;1.0001604732903788&#34;,&#34;0.9995282049737586&#34;,&#34;1.0005651552462809&#34;,&#34;1.0012346841550612&#34;,&#34;1.0005913061423513&#34;,&#34;0.9999219703304918&#34;,&#34;1.000293948230519&#34;,&#34;0.9999281319907949&#34;,&#34;1.000499583671794&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc&#34;,&#34;24hVolume&#34;:&#34;3515409201&#34;,&#34;btcPrice&#34;:&#34;0.000049974781230382&#34;},{&#34;uuid&#34;:&#34;WcwrkfNI4FUAe&#34;,&#34;symbol&#34;:&#34;BNB&#34;,&#34;name&#34;:&#34;Binance Coin&#34;,&#34;color&#34;:&#34;#e8b342&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1N19L_dZ/bnb.svg&#34;,&#34;marketCap&#34;:&#34;42468944274&#34;,&#34;price&#34;:&#34;293.1404150315455&#34;,&#34;listedAt&#34;:1503014400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.25&#34;,&#34;rank&#34;:5,&#34;sparkline&#34;:[&#34;294.0404258490945&#34;,&#34;293.2855539660301&#34;,&#34;293.0648258481622&#34;,&#34;293.07747587851765&#34;,&#34;293.8892235863702&#34;,&#34;294.692062571157&#34;,&#34;297.0994193910956&#34;,&#34;296.5460033456306&#34;,&#34;296.5992676846958&#34;,&#34;296.31121173116384&#34;,&#34;295.9763936716012&#34;,&#34;295.45727286275803&#34;,&#34;294.70032990109524&#34;,&#34;295.3080570428542&#34;,&#34;294.4981060492843&#34;,&#34;294.3337487623815&#34;,&#34;294.2316324183209&#34;,&#34;294.6298571055105&#34;,&#34;294.6595144809562&#34;,&#34;294.0329800033172&#34;,&#34;293.5917691431179&#34;,&#34;294.0227751304564&#34;,&#34;293.6815627093513&#34;,&#34;293.5849695749711&#34;,&#34;293.2590784452913&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb&#34;,&#34;24hVolume&#34;:&#34;670918350&#34;,&#34;btcPrice&#34;:&#34;0.014627873066767593&#34;},{&#34;uuid&#34;:&#34;-l8Mn2pVlRs-p&#34;,&#34;symbol&#34;:&#34;XRP&#34;,&#34;name&#34;:&#34;XRP&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1oPuTyfX/xrp.svg&#34;,&#34;marketCap&#34;:&#34;24730778459&#34;,&#34;price&#34;:&#34;0.49601855066320694&#34;,&#34;listedAt&#34;:1421798400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.45&#34;,&#34;rank&#34;:6,&#34;sparkline&#34;:[&#34;0.49553799515562663&#34;,&#34;0.4963944697788394&#34;,&#34;0.4938981661775617&#34;,&#34;0.49343949277953586&#34;,&#34;0.49137790768876555&#34;,&#34;0.4914838199245121&#34;,&#34;0.49555594870572434&#34;,&#34;0.4951890037750714&#34;,&#34;0.495754600642816&#34;,&#34;0.49961106217113954&#34;,&#34;0.5027605293364544&#34;,&#34;0.49962279916372687&#34;,&#34;0.4954048830836824&#34;,&#34;0.49435764214593075&#34;,&#34;0.4936624491660951&#34;,&#34;0.49429837449816666&#34;,&#34;0.4966456636473714&#34;,&#34;0.497538805172514&#34;,&#34;0.499422605944309&#34;,&#34;0.49623220498597587&#34;,&#34;0.4950030830343421&#34;,&#34;0.49640009824587233&#34;,&#34;0.4958072314621451&#34;,&#34;0.49722200793643323&#34;,&#34;0.4970756649928469&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp&#34;,&#34;24hVolume&#34;:&#34;2153144831&#34;,&#34;btcPrice&#34;:&#34;0.000024751607167789&#34;},{&#34;uuid&#34;:&#34;vSo2fu9iE1s0Y&#34;,&#34;symbol&#34;:&#34;BUSD&#34;,&#34;name&#34;:&#34;Binance USD&#34;,&#34;color&#34;:&#34;#f0b90b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/6SJHRfClq/busd.svg&#34;,&#34;marketCap&#34;:&#34;21409580683&#34;,&#34;price&#34;:&#34;1.0013067238646687&#34;,&#34;listedAt&#34;:1563197940,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.12&#34;,&#34;rank&#34;:7,&#34;sparkline&#34;:[&#34;1.0000799678228294&#34;,&#34;1.0008905430035575&#34;,&#34;1.0006911778549377&#34;,&#34;0.9998223006382758&#34;,&#34;1.0001331288898294&#34;,&#34;0.9991026459307589&#34;,&#34;0.9998674015440719&#34;,&#34;0.9998433930969712&#34;,&#34;1.0001634369759003&#34;,&#34;0.999743197805345&#34;,&#34;1.0005842712581856&#34;,&#34;1.0010101947902401&#34;,&#34;1.0004569135406234&#34;,&#34;1.0005187863539011&#34;,&#34;1.0003603032522226&#34;,&#34;1.000511480157415&#34;,&#34;1.000089429567618&#34;,&#34;0.9994167455393567&#34;,&#34;1.0005356630408002&#34;,&#34;1.0012875995431658&#34;,&#34;1.000382721602677&#34;,&#34;1.0000168735947466&#34;,&#34;1.000108904159323&#34;,&#34;0.9997112862091224&#34;,&#34;1.0004958391321148&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd&#34;,&#34;24hVolume&#34;:&#34;6263962442&#34;,&#34;btcPrice&#34;:&#34;0.000049965773760732&#34;},{&#34;uuid&#34;:&#34;qzawljRxB5bYu&#34;,&#34;symbol&#34;:&#34;ADA&#34;,&#34;name&#34;:&#34;Cardano&#34;,&#34;color&#34;:&#34;#3cc8c8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryY28nXhW/ada.svg&#34;,&#34;marketCap&#34;:&#34;13339221520&#34;,&#34;price&#34;:&#34;0.4287417616937746&#34;,&#34;listedAt&#34;:1506902400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.34&#34;,&#34;rank&#34;:8,&#34;sparkline&#34;:[&#34;0.43193246074859537&#34;,&#34;0.430512533378958&#34;,&#34;0.42935079509289215&#34;,&#34;0.42999716955939554&#34;,&#34;0.43113793091933544&#34;,&#34;0.43164235605366286&#34;,&#34;0.4351709066340561&#34;,&#34;0.4357776886667802&#34;,&#34;0.43477220488691914&#34;,&#34;0.435032637484956&#34;,&#34;0.43469659246229525&#34;,&#34;0.43367955301045125&#34;,&#34;0.4325627475054175&#34;,&#34;0.43224817517625874&#34;,&#34;0.43131439672036864&#34;,&#34;0.4311269834439529&#34;,&#34;0.43033267004685644&#34;,&#34;0.4315575887711084&#34;,&#34;0.43212509953213496&#34;,&#34;0.4309126256113925&#34;,&#34;0.429306192919787&#34;,&#34;0.42996753867920334&#34;,&#34;0.42967860854102746&#34;,&#34;0.4299956873366783&#34;,&#34;0.42958841920603125&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada&#34;,&#34;24hVolume&#34;:&#34;497429406&#34;,&#34;btcPrice&#34;:&#34;0.000021394457218749&#34;},{&#34;uuid&#34;:&#34;zNZHO_Sjf&#34;,&#34;symbol&#34;:&#34;SOL&#34;,&#34;name&#34;:&#34;Solana&#34;,&#34;color&#34;:&#34;#9cddec&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/yvUG4Qex5/solana.svg&#34;,&#34;marketCap&#34;:&#34;11963350910&#34;,&#34;price&#34;:&#34;33.678542508157825&#34;,&#34;listedAt&#34;:1586539320,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.82&#34;,&#34;rank&#34;:9,&#34;sparkline&#34;:[&#34;34.1497454542223&#34;,&#34;33.85943727489043&#34;,&#34;33.76194937947399&#34;,&#34;33.83018839969452&#34;,&#34;34.013048292328065&#34;,&#34;34.22695861442601&#34;,&#34;34.302948506263874&#34;,&#34;34.36117055139888&#34;,&#34;34.33297730862471&#34;,&#34;34.37725515202584&#34;,&#34;34.38122367897517&#34;,&#34;34.2550563983116&#34;,&#34;34.01974117371273&#34;,&#34;34.037114601179724&#34;,&#34;34.018562769728476&#34;,&#34;33.992592583476906&#34;,&#34;33.968249070492554&#34;,&#34;34.076722259021444&#34;,&#34;34.11137751431098&#34;,&#34;33.940212287279515&#34;,&#34;33.89494614343538&#34;,&#34;33.92127374129869&#34;,&#34;33.873984510988144&#34;,&#34;33.807053062760865&#34;,&#34;33.72616159969263&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/zNZHO_Sjf+solana-sol&#34;,&#34;24hVolume&#34;:&#34;830833998&#34;,&#34;btcPrice&#34;:&#34;0.001680578383673417&#34;},{&#34;uuid&#34;:&#34;a91GCGd_u96cF&#34;,&#34;symbol&#34;:&#34;DOGE&#34;,&#34;name&#34;:&#34;Dogecoin&#34;,&#34;color&#34;:&#34;#c2a633&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/H1arXIuOZ/doge.svg&#34;,&#34;marketCap&#34;:&#34;8462327097&#34;,&#34;price&#34;:&#34;0.06378441506375986&#34;,&#34;listedAt&#34;:1391212800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.30&#34;,&#34;rank&#34;:10,&#34;sparkline&#34;:[&#34;0.06508468000318819&#34;,&#34;0.06498414093039298&#34;,&#34;0.06433091677136754&#34;,&#34;0.06433630601076162&#34;,&#34;0.06451575976472833&#34;,&#34;0.0650019016600869&#34;,&#34;0.06499257008710045&#34;,&#34;0.06506417867247787&#34;,&#34;0.06570475320958324&#34;,&#34;0.06606716612821471&#34;,&#34;0.06581607679725353&#34;,&#34;0.06558476365046208&#34;,&#34;0.06535918379965736&#34;,&#34;0.06516894403820425&#34;,&#34;0.06522819536528995&#34;,&#34;0.06512901579983153&#34;,&#34;0.06503874743950451&#34;,&#34;0.06529626541952577&#34;,&#34;0.06535446649523742&#34;,&#34;0.06499123465130338&#34;,&#34;0.06440797483386555&#34;,&#34;0.06442796997062027&#34;,&#34;0.06402886312409285&#34;,&#34;0.06395977844314375&#34;,&#34;0.06391024647625458&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge&#34;,&#34;24hVolume&#34;:&#34;465284737&#34;,&#34;btcPrice&#34;:&#34;0.00000318287850923&#34;},{&#34;uuid&#34;:&#34;uW2tk-ILY0ii&#34;,&#34;symbol&#34;:&#34;MATIC&#34;,&#34;name&#34;:&#34;Polygon&#34;,&#34;color&#34;:&#34;#8247e5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WulYRq14o/polygon.png&#34;,&#34;marketCap&#34;:&#34;7362726215&#34;,&#34;price&#34;:&#34;0.8409093774070842&#34;,&#34;listedAt&#34;:1558961160,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.88&#34;,&#34;rank&#34;:11,&#34;sparkline&#34;:[&#34;0.8492361528788174&#34;,&#34;0.8453801338634946&#34;,&#34;0.8432829962954229&#34;,&#34;0.849181551492284&#34;,&#34;0.8536201943011714&#34;,&#34;0.8541813180047458&#34;,&#34;0.8515224098574884&#34;,&#34;0.850265179544537&#34;,&#34;0.847322542943578&#34;,&#34;0.8476972952771256&#34;,&#34;0.8471467304336225&#34;,&#34;0.844702158937144&#34;,&#34;0.8447557537787462&#34;,&#34;0.847783834534723&#34;,&#34;0.8464624696426057&#34;,&#34;0.844304871333146&#34;,&#34;0.8409800916467571&#34;,&#34;0.8417212018286235&#34;,&#34;0.8408371640708998&#34;,&#34;0.839748301181124&#34;,&#34;0.841132637326318&#34;,&#34;0.8438753976857096&#34;,&#34;0.8434398947847157&#34;,&#34;0.8449687251128872&#34;,&#34;0.8428929432958985&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic&#34;,&#34;24hVolume&#34;:&#34;422472023&#34;,&#34;btcPrice&#34;:&#34;0.000041961855147274&#34;},{&#34;uuid&#34;:&#34;25W7FG7om&#34;,&#34;symbol&#34;:&#34;DOT&#34;,&#34;name&#34;:&#34;Polkadot&#34;,&#34;color&#34;:&#34;#d64cA8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/RsljYqnbu/polkadot.svg&#34;,&#34;marketCap&#34;:&#34;7333877679&#34;,&#34;price&#34;:&#34;6.375078654537634&#34;,&#34;listedAt&#34;:1598365200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.11&#34;,&#34;rank&#34;:12,&#34;sparkline&#34;:[&#34;6.391801336376841&#34;,&#34;6.403951175982247&#34;,&#34;6.399701718761633&#34;,&#34;6.405337242113671&#34;,&#34;6.4266248804229384&#34;,&#34;6.451455659600661&#34;,&#34;6.483491915376635&#34;,&#34;6.501811546262432&#34;,&#34;6.498760844193182&#34;,&#34;6.4976323368143705&#34;,&#34;6.477581013777311&#34;,&#34;6.479927431264483&#34;,&#34;6.448634624359964&#34;,&#34;6.443891275539751&#34;,&#34;6.44572217932727&#34;,&#34;6.439723965897828&#34;,&#34;6.433324405763729&#34;,&#34;6.454887962515635&#34;,&#34;6.4604059173103&#34;,&#34;6.432341334197665&#34;,&#34;6.393903714970722&#34;,&#34;6.3932166668482395&#34;,&#34;6.382577104663209&#34;,&#34;6.390580012706444&#34;,&#34;6.385565565622373&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/25W7FG7om+polkadot-dot&#34;,&#34;24hVolume&#34;:&#34;325811572&#34;,&#34;btcPrice&#34;:&#34;0.000318120042707863&#34;},{&#34;uuid&#34;:&#34;xz24e0BjL&#34;,&#34;symbol&#34;:&#34;SHIB&#34;,&#34;name&#34;:&#34;Shiba Inu&#34;,&#34;color&#34;:&#34;#fda32b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/D69LfI-tm/shib.png&#34;,&#34;marketCap&#34;:&#34;6652273521&#34;,&#34;price&#34;:&#34;0.000011283528342602&#34;,&#34;listedAt&#34;:1620650373,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.08&#34;,&#34;rank&#34;:13,&#34;sparkline&#34;:[&#34;0.000011431411395939&#34;,&#34;0.000011396885952609&#34;,&#34;0.000011384972187891&#34;,&#34;0.00001139313280198&#34;,&#34;0.000011429580139168&#34;,&#34;0.000011482444529902&#34;,&#34;0.000011517178722671&#34;,&#34;0.000011525811358147&#34;,&#34;0.000011555785322931&#34;,&#34;0.000011591429783261&#34;,&#34;0.000011505189155736&#34;,&#34;0.000011477778399831&#34;,&#34;0.000011435045514583&#34;,&#34;0.000011441068522037&#34;,&#34;0.000011451531930929&#34;,&#34;0.000011472997282849&#34;,&#34;0.000011474732607287&#34;,&#34;0.000011470300373336&#34;,&#34;0.000011446550501303&#34;,&#34;0.000011383535979231&#34;,&#34;0.000011350372067707&#34;,&#34;0.000011344541379274&#34;,&#34;0.00001129354780181&#34;,&#34;0.00001127407837216&#34;,&#34;0.000011288295361626&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/xz24e0BjL+shibainu-shib&#34;,&#34;24hVolume&#34;:&#34;265483639&#34;,&#34;btcPrice&#34;:&#34;5.63054468e-10&#34;},{&#34;uuid&#34;:&#34;MoTuySvg7&#34;,&#34;symbol&#34;:&#34;DAI&#34;,&#34;name&#34;:&#34;Dai&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg&#34;,&#34;marketCap&#34;:&#34;6335120578&#34;,&#34;price&#34;:&#34;1.0008022121623688&#34;,&#34;listedAt&#34;:1585574040,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.08&#34;,&#34;rank&#34;:14,&#34;sparkline&#34;:[&#34;0.9996807063197282&#34;,&#34;1.000636651844088&#34;,&#34;1.000345680785842&#34;,&#34;0.9996768088644196&#34;,&#34;0.9997620874678727&#34;,&#34;0.9991192679426156&#34;,&#34;0.9994334358286668&#34;,&#34;0.9995689641224628&#34;,&#34;0.999907059929403&#34;,&#34;0.9994838161730176&#34;,&#34;1.0000962236419397&#34;,&#34;1.0004931721027528&#34;,&#34;1.0001779802955908&#34;,&#34;1.0001089295458878&#34;,&#34;1.000237652922639&#34;,&#34;1.0001493027958073&#34;,&#34;0.999867560403255&#34;,&#34;0.999266680200031&#34;,&#34;0.9999978573315924&#34;,&#34;1.0006339409383798&#34;,&#34;1.0006808487898204&#34;,&#34;0.9996158529540979&#34;,&#34;1.0000733663835433&#34;,&#34;0.999699967664402&#34;,&#34;1.0001229877486109&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/MoTuySvg7+dai-dai&#34;,&#34;24hVolume&#34;:&#34;113100839&#34;,&#34;btcPrice&#34;:&#34;0.000049940598340478&#34;},{&#34;uuid&#34;:&#34;qUhEFk1I61atv&#34;,&#34;symbol&#34;:&#34;TRX&#34;,&#34;name&#34;:&#34;TRON&#34;,&#34;color&#34;:&#34;#eb0029&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/behejNqQs/trx.svg&#34;,&#34;marketCap&#34;:&#34;5776182222&#34;,&#34;price&#34;:&#34;0.06255591911198198&#34;,&#34;listedAt&#34;:1505260800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.18&#34;,&#34;rank&#34;:15,&#34;sparkline&#34;:[&#34;0.06250613632267232&#34;,&#34;0.06233936646337086&#34;,&#34;0.06235487176617015&#34;,&#34;0.06246245556557078&#34;,&#34;0.06240660740134105&#34;,&#34;0.0623051569646796&#34;,&#34;0.06218981455801479&#34;,&#34;0.06255572539146104&#34;,&#34;0.0628439660805138&#34;,&#34;0.06274927695509415&#34;,&#34;0.0627107369451555&#34;,&#34;0.06257675995151533&#34;,&#34;0.06246267761934192&#34;,&#34;0.06246860310215167&#34;,&#34;0.06252676971107378&#34;,&#34;0.06266602786490501&#34;,&#34;0.0627064601307051&#34;,&#34;0.06268244860432474&#34;,&#34;0.06272181454243733&#34;,&#34;0.06264305726817844&#34;,&#34;0.06255904556452598&#34;,&#34;0.06259253116625534&#34;,&#34;0.06262592704572888&#34;,&#34;0.06266205758233426&#34;,&#34;0.06261625379086024&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qUhEFk1I61atv+tron-trx&#34;,&#34;24hVolume&#34;:&#34;328335231&#34;,&#34;btcPrice&#34;:&#34;0.000003121575864067&#34;},{&#34;uuid&#34;:&#34;Mtfb0obXVh59u&#34;,&#34;symbol&#34;:&#34;WETH&#34;,&#34;name&#34;:&#34;Wrapped Ether&#34;,&#34;color&#34;:&#34;#303030&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/KIviQyZlt/weth.svg&#34;,&#34;marketCap&#34;:&#34;5519902938&#34;,&#34;price&#34;:&#34;1358.9816391781385&#34;,&#34;listedAt&#34;:1600259445,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.54&#34;,&#34;rank&#34;:16,&#34;sparkline&#34;:[&#34;1355.9613432898727&#34;,&#34;1353.422449060138&#34;,&#34;1349.1540983542507&#34;,&#34;1350.9005820344698&#34;,&#34;1354.6594355436337&#34;,&#34;1358.5734173716921&#34;,&#34;1372.2393635736669&#34;,&#34;1375.4133500184457&#34;,&#34;1373.8416709111418&#34;,&#34;1374.2684069108268&#34;,&#34;1374.1400838469938&#34;,&#34;1371.4603171603485&#34;,&#34;1367.29338349385&#34;,&#34;1365.576647957882&#34;,&#34;1361.8120768983374&#34;,&#34;1361.2918823579867&#34;,&#34;1360.0415578756765&#34;,&#34;1365.3854475170606&#34;,&#34;1371.9196006159282&#34;,&#34;1368.3891913530783&#34;,&#34;1361.5340578211528&#34;,&#34;1367.4475182685767&#34;,&#34;1362.680731199084&#34;,&#34;1363.6150076195051&#34;,&#34;1362.071251252447&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth&#34;,&#34;24hVolume&#34;:&#34;301806130&#34;,&#34;btcPrice&#34;:&#34;0.06783365231130012&#34;},{&#34;uuid&#34;:&#34;_H5FVG9iW&#34;,&#34;symbol&#34;:&#34;UNI&#34;,&#34;name&#34;:&#34;Uniswap&#34;,&#34;color&#34;:&#34;#ff007a&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;5341536997&#34;,&#34;price&#34;:&#34;6.878571143545948&#34;,&#34;listedAt&#34;:1600323371,&#34;tier&#34;:1,&#34;change&#34;:&#34;2.24&#34;,&#34;rank&#34;:17,&#34;sparkline&#34;:[&#34;6.768091971520045&#34;,&#34;6.761882622124115&#34;,&#34;6.77237184675032&#34;,&#34;6.752824244485618&#34;,&#34;6.78903586558007&#34;,&#34;6.852613624649713&#34;,&#34;6.922872589387299&#34;,&#34;6.9800437339156405&#34;,&#34;6.955259833823376&#34;,&#34;6.928956756162565&#34;,&#34;6.908183341801451&#34;,&#34;6.885823479955376&#34;,&#34;6.8796999121503895&#34;,&#34;6.9137649249190885&#34;,&#34;6.87311704845351&#34;,&#34;6.837302765502296&#34;,&#34;6.829449377075668&#34;,&#34;6.891186402222689&#34;,&#34;6.911439464187517&#34;,&#34;6.861936365531298&#34;,&#34;6.828814769101655&#34;,&#34;6.879050406286385&#34;,&#34;6.89049150506205&#34;,&#34;6.899404292712641&#34;,&#34;6.898069297435468&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/_H5FVG9iW+uniswap-uni&#34;,&#34;24hVolume&#34;:&#34;239010224&#34;,&#34;btcPrice&#34;:&#34;0.000343244603640521&#34;},{&#34;uuid&#34;:&#34;dvUj0CzDZ&#34;,&#34;symbol&#34;:&#34;AVAX&#34;,&#34;name&#34;:&#34;Avalanche&#34;,&#34;color&#34;:&#34;#e84242&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png&#34;,&#34;marketCap&#34;:&#34;5078470624&#34;,&#34;price&#34;:&#34;17.151474027482617&#34;,&#34;listedAt&#34;:1600961596,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.59&#34;,&#34;rank&#34;:18,&#34;sparkline&#34;:[&#34;17.31212380999878&#34;,&#34;17.26400163397198&#34;,&#34;17.251404114211134&#34;,&#34;17.298879643442053&#34;,&#34;17.34808667709875&#34;,&#34;17.426941656132254&#34;,&#34;17.524712176181612&#34;,&#34;17.559899454169962&#34;,&#34;17.523659347405594&#34;,&#34;17.56377672754574&#34;,&#34;17.524960240775005&#34;,&#34;17.446353003633845&#34;,&#34;17.393034315400772&#34;,&#34;17.389087335664208&#34;,&#34;17.342336650537163&#34;,&#34;17.31714980553846&#34;,&#34;17.31900309406139&#34;,&#34;17.354595399993247&#34;,&#34;17.390080348196047&#34;,&#34;17.351707211402754&#34;,&#34;17.293284463248067&#34;,&#34;17.29467067664363&#34;,&#34;17.237206001258976&#34;,&#34;17.233307539623787&#34;,&#34;17.20143642870961&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax&#34;,&#34;24hVolume&#34;:&#34;283790290&#34;,&#34;btcPrice&#34;:&#34;0.000855868287404103&#34;},{&#34;uuid&#34;:&#34;x4WXHge-vvFY&#34;,&#34;symbol&#34;:&#34;WBTC&#34;,&#34;name&#34;:&#34;Wrapped BTC&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg&#34;,&#34;marketCap&#34;:&#34;4903835038&#34;,&#34;price&#34;:&#34;20035.560359793384&#34;,&#34;listedAt&#34;:1549894980,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.80&#34;,&#34;rank&#34;:19,&#34;sparkline&#34;:[&#34;20226.31646659646&#34;,&#34;20139.175000464867&#34;,&#34;20049.66642497842&#34;,&#34;20092.89008901448&#34;,&#34;20156.31521210076&#34;,&#34;20228.25012076666&#34;,&#34;20291.50619456924&#34;,&#34;20351.79757539001&#34;,&#34;20336.52367461082&#34;,&#34;20376.3859154279&#34;,&#34;20335.913915665704&#34;,&#34;20261.657124758975&#34;,&#34;20210.860549490662&#34;,&#34;20199.912786977504&#34;,&#34;20152.35725799045&#34;,&#34;20138.692674282906&#34;,&#34;20142.020090922302&#34;,&#34;20202.11962570712&#34;,&#34;20220.36071952019&#34;,&#34;20140.724501856825&#34;,&#34;20006.046172186805&#34;,&#34;20073.557445369184&#34;,&#34;20048.70389238501&#34;,&#34;20093.515174115382&#34;,&#34;20087.156900374295&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc&#34;,&#34;24hVolume&#34;:&#34;42403209&#34;,&#34;btcPrice&#34;:&#34;0.9997858321005628&#34;},{&#34;uuid&#34;:&#34;Knsels4_Ol-Ny&#34;,&#34;symbol&#34;:&#34;ATOM&#34;,&#34;name&#34;:&#34;Cosmos&#34;,&#34;color&#34;:&#34;#5064fb&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HJzHboruM/atom.svg&#34;,&#34;marketCap&#34;:&#34;4097320854&#34;,&#34;price&#34;:&#34;13.1625479357164&#34;,&#34;listedAt&#34;:1552520100,&#34;tier&#34;:1,&#34;change&#34;:&#34;2.37&#34;,&#34;rank&#34;:20,&#34;sparkline&#34;:[&#34;12.924793487003978&#34;,&#34;12.878177177424776&#34;,&#34;12.863612619895465&#34;,&#34;12.963444525296714&#34;,&#34;12.997678258298611&#34;,&#34;13.048598156795691&#34;,&#34;13.119145598919278&#34;,&#34;13.159252370152213&#34;,&#34;13.179334515109312&#34;,&#34;13.162812288821586&#34;,&#34;13.137523424001765&#34;,&#34;13.080422952609398&#34;,&#34;13.017472526453902&#34;,&#34;13.020230401382886&#34;,&#34;12.997475722403461&#34;,&#34;13.001317245648451&#34;,&#34;12.96810741292325&#34;,&#34;13.026166887997375&#34;,&#34;13.10316541147355&#34;,&#34;13.128001558390173&#34;,&#34;13.091123825729781&#34;,&#34;13.30484137771001&#34;,&#34;13.346723621921466&#34;,&#34;13.37656826070367&#34;,&#34;13.216197488484815&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom&#34;,&#34;24hVolume&#34;:&#34;417979482&#34;,&#34;btcPrice&#34;:&#34;0.000656818611716108&#34;},{&#34;uuid&#34;:&#34;PDKcptVnzJTmN&#34;,&#34;symbol&#34;:&#34;OKB&#34;,&#34;name&#34;:&#34;OKB&#34;,&#34;color&#34;:&#34;#2d60e0&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xcZdYtX6E/okx.png&#34;,&#34;marketCap&#34;:&#34;3938751394&#34;,&#34;price&#34;:&#34;15.653096931638096&#34;,&#34;listedAt&#34;:1538524800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.34&#34;,&#34;rank&#34;:21,&#34;sparkline&#34;:[&#34;15.578393091823456&#34;,&#34;15.656728912022512&#34;,&#34;15.57172097704591&#34;,&#34;15.554456620212141&#34;,&#34;15.531152169350191&#34;,&#34;15.556004685562852&#34;,&#34;15.616987172488637&#34;,&#34;15.741110499745083&#34;,&#34;15.721654408590974&#34;,&#34;15.754592996825584&#34;,&#34;15.721445252830843&#34;,&#34;15.68570643031886&#34;,&#34;15.65885734432721&#34;,&#34;15.654523400308335&#34;,&#34;15.638717197317016&#34;,&#34;15.643011582148882&#34;,&#34;15.627458291491607&#34;,&#34;15.730327848031452&#34;,&#34;15.779009623760075&#34;,&#34;15.749353181983137&#34;,&#34;15.707094618160536&#34;,&#34;15.733008292266929&#34;,&#34;15.647870425123044&#34;,&#34;15.657392771047268&#34;,&#34;15.660598370787731&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb&#34;,&#34;24hVolume&#34;:&#34;17905160&#34;,&#34;btcPrice&#34;:&#34;0.000781098419994975&#34;},{&#34;uuid&#34;:&#34;D7B1x_ks7WhV5&#34;,&#34;symbol&#34;:&#34;LTC&#34;,&#34;name&#34;:&#34;Litecoin&#34;,&#34;color&#34;:&#34;#345d9d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg&#34;,&#34;marketCap&#34;:&#34;3829225057&#34;,&#34;price&#34;:&#34;54.03525579621315&#34;,&#34;listedAt&#34;:1382572800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.00&#34;,&#34;rank&#34;:22,&#34;sparkline&#34;:[&#34;54.73003734380518&#34;,&#34;54.548609619768136&#34;,&#34;54.296108361372866&#34;,&#34;54.32415717238681&#34;,&#34;54.49439018324316&#34;,&#34;54.67152392574348&#34;,&#34;54.83000909463735&#34;,&#34;54.86255398531216&#34;,&#34;54.86130988251709&#34;,&#34;54.79707265341012&#34;,&#34;54.775144150456796&#34;,&#34;54.544338354633034&#34;,&#34;54.34580309014276&#34;,&#34;54.37138853472232&#34;,&#34;54.381706220902295&#34;,&#34;54.44981719765201&#34;,&#34;54.48043423896709&#34;,&#34;54.5218721069334&#34;,&#34;54.66384490477488&#34;,&#34;54.487557977792335&#34;,&#34;54.217667699743956&#34;,&#34;54.443429057468585&#34;,&#34;54.19924444211358&#34;,&#34;54.285306618754106&#34;,&#34;54.20259958325777&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc&#34;,&#34;24hVolume&#34;:&#34;405674057&#34;,&#34;btcPrice&#34;:&#34;0.002696389929147998&#34;},{&#34;uuid&#34;:&#34;NfeOYfNcl&#34;,&#34;symbol&#34;:&#34;FTT&#34;,&#34;name&#34;:&#34;FTX Token&#34;,&#34;color&#34;:&#34;#77d9ed&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg&#34;,&#34;marketCap&#34;:&#34;3295711880&#34;,&#34;price&#34;:&#34;24.689134847446596&#34;,&#34;listedAt&#34;:1566222960,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.61&#34;,&#34;rank&#34;:23,&#34;sparkline&#34;:[&#34;24.86840958470848&#34;,&#34;24.758395889591455&#34;,&#34;24.686262825924107&#34;,&#34;24.708977698495474&#34;,&#34;24.76275391167715&#34;,&#34;24.88064501336108&#34;,&#34;24.989982623495205&#34;,&#34;25.02527690133806&#34;,&#34;25.03308663631069&#34;,&#34;25.096481543960365&#34;,&#34;25.064183863901825&#34;,&#34;24.97596757960783&#34;,&#34;24.905309703817817&#34;,&#34;24.901770248120254&#34;,&#34;24.839911865219058&#34;,&#34;24.833297858653406&#34;,&#34;24.83746935639624&#34;,&#34;24.929424731992544&#34;,&#34;24.957387012206524&#34;,&#34;24.851056986110105&#34;,&#34;24.71862835199192&#34;,&#34;24.792263862901954&#34;,&#34;24.762469376435654&#34;,&#34;24.782952955960234&#34;,&#34;24.7547906117507&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt&#34;,&#34;24hVolume&#34;:&#34;79980355&#34;,&#34;btcPrice&#34;:&#34;0.001232001839930168&#34;},{&#34;uuid&#34;:&#34;hnfQfsYfeIGUQ&#34;,&#34;symbol&#34;:&#34;ETC&#34;,&#34;name&#34;:&#34;Ethereum Classic&#34;,&#34;color&#34;:&#34;#699070&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rJfyor__W/etc.svg&#34;,&#34;marketCap&#34;:&#34;3250301194&#34;,&#34;price&#34;:&#34;27.94436424817255&#34;,&#34;listedAt&#34;:1469577600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.24&#34;,&#34;rank&#34;:24,&#34;sparkline&#34;:[&#34;27.63820342762428&#34;,&#34;27.58901112322496&#34;,&#34;27.575456313117428&#34;,&#34;27.57803108679598&#34;,&#34;27.626107083587126&#34;,&#34;27.70394559563783&#34;,&#34;28.153092540695052&#34;,&#34;28.733080515456265&#34;,&#34;28.47990216316137&#34;,&#34;28.460572165061098&#34;,&#34;28.431061767116237&#34;,&#34;28.30996933550255&#34;,&#34;28.150860229865422&#34;,&#34;28.138076617445943&#34;,&#34;28.20949388458989&#34;,&#34;28.323169796622505&#34;,&#34;28.309067725873184&#34;,&#34;28.295831261820762&#34;,&#34;28.321451445159614&#34;,&#34;28.187546801093646&#34;,&#34;28.032797543785605&#34;,&#34;28.053441969742526&#34;,&#34;27.973728656250728&#34;,&#34;27.999162574761833&#34;,&#34;27.991346277464565&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc&#34;,&#34;24hVolume&#34;:&#34;939222866&#34;,&#34;btcPrice&#34;:&#34;0.001394439634363614&#34;},{&#34;uuid&#34;:&#34;3mVx2FX_iJFp5&#34;,&#34;symbol&#34;:&#34;XMR&#34;,&#34;name&#34;:&#34;Monero&#34;,&#34;color&#34;:&#34;#ff7519&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg&#34;,&#34;marketCap&#34;:&#34;2636016647&#34;,&#34;price&#34;:&#34;144.96734461625016&#34;,&#34;listedAt&#34;:1422489600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.63&#34;,&#34;rank&#34;:25,&#34;sparkline&#34;:[&#34;146.8541207974771&#34;,&#34;146.40695669017853&#34;,&#34;146.0756556475053&#34;,&#34;146.16539235107626&#34;,&#34;146.17871227201726&#34;,&#34;146.7928043004359&#34;,&#34;147.49601518947418&#34;,&#34;147.78321950861786&#34;,&#34;148.13781758186698&#34;,&#34;149.1182492747765&#34;,&#34;148.11631640525192&#34;,&#34;146.22011551363667&#34;,&#34;145.4965433643255&#34;,&#34;145.48529013762573&#34;,&#34;145.20443339951157&#34;,&#34;144.9992366994431&#34;,&#34;145.0215131100292&#34;,&#34;145.4211725196932&#34;,&#34;145.22755896602186&#34;,&#34;144.66035334810422&#34;,&#34;144.05802759633252&#34;,&#34;144.10883438071522&#34;,&#34;143.89007002513964&#34;,&#34;143.9576715546343&#34;,&#34;144.58835936754863&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr&#34;,&#34;24hVolume&#34;:&#34;129871672&#34;,&#34;btcPrice&#34;:&#34;0.007233952765075614&#34;},{&#34;uuid&#34;:&#34;TpHE2IShQw-sJ&#34;,&#34;symbol&#34;:&#34;ALGO&#34;,&#34;name&#34;:&#34;Algorand&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/lzbmCkUGB/algo.svg&#34;,&#34;marketCap&#34;:&#34;2458652686&#34;,&#34;price&#34;:&#34;0.3504789188229551&#34;,&#34;listedAt&#34;:1562082540,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.25&#34;,&#34;rank&#34;:26,&#34;sparkline&#34;:[&#34;0.3524917120548109&#34;,&#34;0.3525148629775276&#34;,&#34;0.35156176000955314&#34;,&#34;0.3519023270261265&#34;,&#34;0.3528916179200212&#34;,&#34;0.35409161420668545&#34;,&#34;0.356162056262963&#34;,&#34;0.35693330326162703&#34;,&#34;0.3563907953585324&#34;,&#34;0.35750984328530744&#34;,&#34;0.35767252929986604&#34;,&#34;0.35751711842440254&#34;,&#34;0.3559296747144092&#34;,&#34;0.3552287744993348&#34;,&#34;0.35424119924163017&#34;,&#34;0.35426970667801305&#34;,&#34;0.3544835447108064&#34;,&#34;0.3556477875856247&#34;,&#34;0.3555272621653501&#34;,&#34;0.3536040900503226&#34;,&#34;0.3522864243698987&#34;,&#34;0.35342214024999324&#34;,&#34;0.3531300840188512&#34;,&#34;0.35199815230501635&#34;,&#34;0.3515574139257525&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo&#34;,&#34;24hVolume&#34;:&#34;111736336&#34;,&#34;btcPrice&#34;:&#34;0.000017489096945464&#34;},{&#34;uuid&#34;:&#34;f3iaFeCKEmkaZ&#34;,&#34;symbol&#34;:&#34;XLM&#34;,&#34;name&#34;:&#34;Stellar&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg&#34;,&#34;marketCap&#34;:&#34;2432564570&#34;,&#34;price&#34;:&#34;0.1203910684342368&#34;,&#34;listedAt&#34;:1484611200,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.67&#34;,&#34;rank&#34;:27,&#34;sparkline&#34;:[&#34;0.1195260301967084&#34;,&#34;0.11922377222555086&#34;,&#34;0.11889747925878968&#34;,&#34;0.11895767320851787&#34;,&#34;0.11904150834797811&#34;,&#34;0.11902199852210672&#34;,&#34;0.11927188129997995&#34;,&#34;0.1193386399802927&#34;,&#34;0.11934469276243408&#34;,&#34;0.1196520921041987&#34;,&#34;0.11983688261385989&#34;,&#34;0.11932664504934419&#34;,&#34;0.1189486925609691&#34;,&#34;0.11915744015413951&#34;,&#34;0.11884381325504743&#34;,&#34;0.11876793181027388&#34;,&#34;0.11864502471222689&#34;,&#34;0.11951152511302865&#34;,&#34;0.11981668758909333&#34;,&#34;0.11922777945229743&#34;,&#34;0.11945253111942053&#34;,&#34;0.11959700069285915&#34;,&#34;0.11981501834328642&#34;,&#34;0.12021090161849994&#34;,&#34;0.12013793492697233&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm&#34;,&#34;24hVolume&#34;:&#34;246822489&#34;,&#34;btcPrice&#34;:&#34;0.000006007582636598&#34;},{&#34;uuid&#34;:&#34;ZlZpzOJo43mIo&#34;,&#34;symbol&#34;:&#34;BCH&#34;,&#34;name&#34;:&#34;Bitcoin Cash&#34;,&#34;color&#34;:&#34;#8dc451&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/By8ziihX7/bch.svg&#34;,&#34;marketCap&#34;:&#34;2298979894&#34;,&#34;price&#34;:&#34;120.1678866432934&#34;,&#34;listedAt&#34;:1541808000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.08&#34;,&#34;rank&#34;:28,&#34;sparkline&#34;:[&#34;122.79003231799453&#34;,&#34;122.34811455233557&#34;,&#34;122.31669276815146&#34;,&#34;122.20221632323882&#34;,&#34;122.27062280612596&#34;,&#34;122.55422874145354&#34;,&#34;123.18638724378391&#34;,&#34;123.08308366724447&#34;,&#34;122.75420528237959&#34;,&#34;122.64408519732375&#34;,&#34;122.29556101291895&#34;,&#34;121.67236415586021&#34;,&#34;121.10544288205719&#34;,&#34;121.04504869309605&#34;,&#34;121.30404553315167&#34;,&#34;121.30303820200477&#34;,&#34;121.43046725720312&#34;,&#34;121.68614678410228&#34;,&#34;121.9273629393347&#34;,&#34;121.63557758204253&#34;,&#34;120.69086187559425&#34;,&#34;121.05219068057347&#34;,&#34;120.77379521545822&#34;,&#34;120.74184776630722&#34;,&#34;120.47330639994128&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch&#34;,&#34;24hVolume&#34;:&#34;252376191&#34;,&#34;btcPrice&#34;:&#34;0.0059964457385743&#34;},{&#34;uuid&#34;:&#34;9_jH48RBW&#34;,&#34;symbol&#34;:&#34;BTCB&#34;,&#34;name&#34;:&#34;Bitcoin BEP2&#34;,&#34;color&#34;:&#34;#ff9d14&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Swr_SeZio/4023.png&#34;,&#34;marketCap&#34;:&#34;2260827347&#34;,&#34;price&#34;:&#34;20096.064448414432&#34;,&#34;listedAt&#34;:1629334963,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.45&#34;,&#34;rank&#34;:29,&#34;sparkline&#34;:[&#34;20226.297674290618&#34;,&#34;20159.180975583204&#34;,&#34;20062.922923808146&#34;,&#34;20068.861677407906&#34;,&#34;20151.07969183831&#34;,&#34;20194.09983970884&#34;,&#34;20305.40629467228&#34;,&#34;20343.061967792306&#34;,&#34;20336.436454110953&#34;,&#34;20366.199044829194&#34;,&#34;20353.223182216174&#34;,&#34;20294.402282813175&#34;,&#34;20238.01608382747&#34;,&#34;20233.25380863164&#34;,&#34;20160.916584584917&#34;,&#34;20152.88922538551&#34;,&#34;20140.29502589623&#34;,&#34;20175.92975562192&#34;,&#34;20229.44513448951&#34;,&#34;20163.555033087247&#34;,&#34;20003.59217876438&#34;,&#34;20057.077811662642&#34;,&#34;20036.164413639184&#34;,&#34;20082.64188169797&#34;,&#34;20107.545241449607&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb&#34;,&#34;24hVolume&#34;:&#34;3499085&#34;,&#34;btcPrice&#34;:&#34;1.0030962960203273&#34;},{&#34;uuid&#34;:&#34;DCrsaMv68&#34;,&#34;symbol&#34;:&#34;NEAR&#34;,&#34;name&#34;:&#34;NEAR Protocol&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Cth83dCnl/near.png&#34;,&#34;marketCap&#34;:&#34;2217195532&#34;,&#34;price&#34;:&#34;3.6476370930344353&#34;,&#34;listedAt&#34;:1615164591,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.43&#34;,&#34;rank&#34;:30,&#34;sparkline&#34;:[&#34;3.709248943987382&#34;,&#34;3.6872974570335644&#34;,&#34;3.676484006822928&#34;,&#34;3.6852601908489664&#34;,&#34;3.6962394641805405&#34;,&#34;3.703159890046674&#34;,&#34;3.7307432286844002&#34;,&#34;3.7313215421676786&#34;,&#34;3.7270747900297017&#34;,&#34;3.7312649322104274&#34;,&#34;3.719144760199497&#34;,&#34;3.6910824300924796&#34;,&#34;3.6716231360233196&#34;,&#34;3.6725817207939535&#34;,&#34;3.6780481709780166&#34;,&#34;3.683119368713513&#34;,&#34;3.6742315532987937&#34;,&#34;3.6836039895069597&#34;,&#34;3.6859906515435994&#34;,&#34;3.665004753763338&#34;,&#34;3.6452350795556825&#34;,&#34;3.6544259528384853&#34;,&#34;3.6500306634153326&#34;,&#34;3.6565192827127024&#34;,&#34;3.6525801551208805&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DCrsaMv68+nearprotocol-near&#34;,&#34;24hVolume&#34;:&#34;289806499&#34;,&#34;btcPrice&#34;:&#34;0.000182019160970346&#34;},{&#34;uuid&#34;:&#34;65PHZTpmE55b&#34;,&#34;symbol&#34;:&#34;CRO&#34;,&#34;name&#34;:&#34;Cronos&#34;,&#34;color&#34;:&#34;#01275d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/2o91jm73M/cro.svg&#34;,&#34;marketCap&#34;:&#34;2209349734&#34;,&#34;price&#34;:&#34;0.10985269355990235&#34;,&#34;listedAt&#34;:1548953220,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.39&#34;,&#34;rank&#34;:31,&#34;sparkline&#34;:[&#34;0.11032801586542061&#34;,&#34;0.10976151233359543&#34;,&#34;0.10961438985623642&#34;,&#34;0.1098841249543377&#34;,&#34;0.11025473159449753&#34;,&#34;0.11062336581339045&#34;,&#34;0.11096926990753721&#34;,&#34;0.11112616986390883&#34;,&#34;0.11111054399289587&#34;,&#34;0.11123574172601472&#34;,&#34;0.11099926911576126&#34;,&#34;0.11063982901865921&#34;,&#34;0.1105017752527065&#34;,&#34;0.1105127376907447&#34;,&#34;0.11016448384988357&#34;,&#34;0.11017585646986554&#34;,&#34;0.11019175370790078&#34;,&#34;0.11058733542807475&#34;,&#34;0.11073578614255948&#34;,&#34;0.11045619900365686&#34;,&#34;0.11008749281105315&#34;,&#34;0.11024440832701132&#34;,&#34;0.1101715006911389&#34;,&#34;0.11037985746137138&#34;,&#34;0.1101561144619121&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/65PHZTpmE55b+cronos-cro&#34;,&#34;24hVolume&#34;:&#34;28837813&#34;,&#34;btcPrice&#34;:&#34;0.000005481711749858&#34;},{&#34;uuid&#34;:&#34;AaQUAs2Mc&#34;,&#34;symbol&#34;:&#34;LUNC&#34;,&#34;name&#34;:&#34;Terra Classic&#34;,&#34;color&#34;:&#34;#0E3CA5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg&#34;,&#34;marketCap&#34;:&#34;1917390815&#34;,&#34;price&#34;:&#34;0.000290920384561765&#34;,&#34;listedAt&#34;:1565957940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.32&#34;,&#34;rank&#34;:32,&#34;sparkline&#34;:[&#34;0.00029894061853861&#34;,&#34;0.000299845576426398&#34;,&#34;0.000297671672254111&#34;,&#34;0.000298963973156913&#34;,&#34;0.000301720935856393&#34;,&#34;0.000300113265231995&#34;,&#34;0.000298930284162236&#34;,&#34;0.000301416052150239&#34;,&#34;0.000303244352601534&#34;,&#34;0.000301825527661809&#34;,&#34;0.00030045732086974&#34;,&#34;0.000299635878097677&#34;,&#34;0.000296355988473923&#34;,&#34;0.000294095105751322&#34;,&#34;0.000296180797972324&#34;,&#34;0.000295905252385445&#34;,&#34;0.000296203503981859&#34;,&#34;0.000296728265002539&#34;,&#34;0.000296686191241626&#34;,&#34;0.000295429183489837&#34;,&#34;0.000295182926966483&#34;,&#34;0.000295951772891279&#34;,&#34;0.000294465267086072&#34;,&#34;0.000292607954462553&#34;,&#34;0.000290882393735087&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc&#34;,&#34;24hVolume&#34;:&#34;76792992&#34;,&#34;btcPrice&#34;:&#34;1.4517092286e-8&#34;},{&#34;uuid&#34;:&#34;08CsQa-Ov&#34;,&#34;symbol&#34;:&#34;WEMIX&#34;,&#34;name&#34;:&#34;WEMIX TOKEN&#34;,&#34;color&#34;:&#34;#9bdc70&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1N84MQsoO/7548.png&#34;,&#34;marketCap&#34;:&#34;1804563449&#34;,&#34;price&#34;:&#34;1.8045634491743752&#34;,&#34;listedAt&#34;:1638249982,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.24&#34;,&#34;rank&#34;:33,&#34;sparkline&#34;:[&#34;1.8278016794430552&#34;,&#34;1.8284835865282176&#34;,&#34;1.8205505524134962&#34;,&#34;1.8242876171474678&#34;,&#34;1.8291343031327176&#34;,&#34;1.8320876869529952&#34;,&#34;1.839386569721581&#34;,&#34;1.834064344910821&#34;,&#34;1.8333753181908716&#34;,&#34;1.8376513295883161&#34;,&#34;1.840233968382716&#34;,&#34;1.8324791678774568&#34;,&#34;1.8240655212809676&#34;,&#34;1.8134872594840754&#34;,&#34;1.812048584709326&#34;,&#34;1.8106038800425508&#34;,&#34;1.805623798931431&#34;,&#34;1.8156531823539699&#34;,&#34;1.82100176061989&#34;,&#34;1.816823315014094&#34;,&#34;1.8064429950814493&#34;,&#34;1.8192075219807147&#34;,&#34;1.8157736829687288&#34;,&#34;1.8117455542950611&#34;,&#34;1.8138451641871651&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix&#34;,&#34;24hVolume&#34;:&#34;13003521&#34;,&#34;btcPrice&#34;:&#34;0.00009004874020053&#34;},{&#34;uuid&#34;:&#34;QQ0NCmjVq&#34;,&#34;symbol&#34;:&#34;FLOW&#34;,&#34;name&#34;:&#34;Flow&#34;,&#34;color&#34;:&#34;#9efad7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xh8X8QBss/flow.png&#34;,&#34;marketCap&#34;:&#34;1760054399&#34;,&#34;price&#34;:&#34;1.6985662993280668&#34;,&#34;listedAt&#34;:1614963736,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.79&#34;,&#34;rank&#34;:34,&#34;sparkline&#34;:[&#34;1.6909292581718869&#34;,&#34;1.6877695632159755&#34;,&#34;1.6879637940199872&#34;,&#34;1.6907794219662977&#34;,&#34;1.6944343024351958&#34;,&#34;1.7026071417666502&#34;,&#34;1.7114262181583197&#34;,&#34;1.7143682061268322&#34;,&#34;1.7143997727258644&#34;,&#34;1.7187065908839465&#34;,&#34;1.7113103990166811&#34;,&#34;1.706894909097403&#34;,&#34;1.6993734245758296&#34;,&#34;1.7008834097899754&#34;,&#34;1.697882077989971&#34;,&#34;1.6941293798653492&#34;,&#34;1.6913106682283696&#34;,&#34;1.6988464733936905&#34;,&#34;1.7015288793320946&#34;,&#34;1.6921043682242245&#34;,&#34;1.6851775401563334&#34;,&#34;1.699772554484989&#34;,&#34;1.7002371517372683&#34;,&#34;1.705059319771799&#34;,&#34;1.7056829152482984&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/QQ0NCmjVq+flow-flow&#34;,&#34;24hVolume&#34;:&#34;68099472&#34;,&#34;btcPrice&#34;:&#34;0.000084759422269994&#34;},{&#34;uuid&#34;:&#34;SbWqqTui-&#34;,&#34;symbol&#34;:&#34;ENS&#34;,&#34;name&#34;:&#34;EnergySwap&#34;,&#34;color&#34;:&#34;#ffda55&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png&#34;,&#34;marketCap&#34;:&#34;1704218243&#34;,&#34;price&#34;:&#34;17.04218243105481&#34;,&#34;listedAt&#34;:1626134763,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.57&#34;,&#34;rank&#34;:35,&#34;sparkline&#34;:[&#34;17.26630021787606&#34;,&#34;17.194362151538677&#34;,&#34;17.081778286859773&#34;,&#34;17.067893912066662&#34;,&#34;17.159396834446234&#34;,&#34;17.409304028654628&#34;,&#34;17.350424599499906&#34;,&#34;17.386714429272285&#34;,&#34;17.38858738165633&#34;,&#34;17.59776912523738&#34;,&#34;17.615975294855826&#34;,&#34;17.448303583422675&#34;,&#34;17.31657323097496&#34;,&#34;17.445873550462984&#34;,&#34;17.338887699046754&#34;,&#34;17.36558093496022&#34;,&#34;17.372866013120248&#34;,&#34;17.36369622256484&#34;,&#34;17.424026622380484&#34;,&#34;17.353080080729807&#34;,&#34;17.372907767169618&#34;,&#34;17.571798069309555&#34;,&#34;17.419730662133198&#34;,&#34;17.376506591149386&#34;,&#34;17.195781226996747&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/SbWqqTui-+energyswap-ens&#34;,&#34;24hVolume&#34;:&#34;15591257&#34;,&#34;btcPrice&#34;:&#34;0.000850264696071361&#34;},{&#34;uuid&#34;:&#34;ymQub4fuB&#34;,&#34;symbol&#34;:&#34;FIL&#34;,&#34;name&#34;:&#34;Filecoin&#34;,&#34;color&#34;:&#34;#0090ff&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;1626098012&#34;,&#34;price&#34;:&#34;5.532691353822477&#34;,&#34;listedAt&#34;:1602839473,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.73&#34;,&#34;rank&#34;:36,&#34;sparkline&#34;:[&#34;5.59535705665963&#34;,&#34;5.582796770582658&#34;,&#34;5.564490867810681&#34;,&#34;5.566111951296787&#34;,&#34;5.573081005993705&#34;,&#34;5.597638107569036&#34;,&#34;5.622372212071733&#34;,&#34;5.621678478547102&#34;,&#34;5.635046338359381&#34;,&#34;5.636819831411602&#34;,&#34;5.621680148394719&#34;,&#34;5.606495156648643&#34;,&#34;5.593259801519004&#34;,&#34;5.594321035269435&#34;,&#34;5.579378103824905&#34;,&#34;5.572378988492663&#34;,&#34;5.568160819553415&#34;,&#34;5.583463727626935&#34;,&#34;5.589903056085146&#34;,&#34;5.574228193644804&#34;,&#34;5.554314461406937&#34;,&#34;5.567097256685896&#34;,&#34;5.5581398364294365&#34;,&#34;5.558948879985852&#34;,&#34;5.546794954677992&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ymQub4fuB+filecoin-fil&#34;,&#34;24hVolume&#34;:&#34;119838611&#34;,&#34;btcPrice&#34;:&#34;0.000276084438348798&#34;},{&#34;uuid&#34;:&#34;aMNLwaUbY&#34;,&#34;symbol&#34;:&#34;ICP&#34;,&#34;name&#34;:&#34;Internet Computer (DFINITY)&#34;,&#34;color&#34;:&#34;#00042b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png&#34;,&#34;marketCap&#34;:&#34;1585252466&#34;,&#34;price&#34;:&#34;6.036596104556241&#34;,&#34;listedAt&#34;:1601555742,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.61&#34;,&#34;rank&#34;:37,&#34;sparkline&#34;:[&#34;6.0258496993721655&#34;,&#34;6.024013676992237&#34;,&#34;6.017430234811706&#34;,&#34;6.02397822813975&#34;,&#34;6.026022506481912&#34;,&#34;6.036706330465778&#34;,&#34;6.0617952393602765&#34;,&#34;6.082059364245906&#34;,&#34;6.119003490105678&#34;,&#34;6.121522161601521&#34;,&#34;6.114804820768077&#34;,&#34;6.099161118790063&#34;,&#34;6.061474753532823&#34;,&#34;6.058493612280049&#34;,&#34;6.044494712184807&#34;,&#34;6.042534641314195&#34;,&#34;6.031355333042851&#34;,&#34;6.045013034529635&#34;,&#34;6.057593651718467&#34;,&#34;6.044433476362681&#34;,&#34;6.030019066888978&#34;,&#34;6.030841874388808&#34;,&#34;6.0277264157453025&#34;,&#34;6.042503096070975&#34;,&#34;6.044307029394635&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp&#34;,&#34;24hVolume&#34;:&#34;35348491&#34;,&#34;btcPrice&#34;:&#34;0.000301229571375513&#34;},{&#34;uuid&#34;:&#34;FEbS54wxo4oIl&#34;,&#34;symbol&#34;:&#34;VET&#34;,&#34;name&#34;:&#34;VeChain&#34;,&#34;color&#34;:&#34;#4bc0fa&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg&#34;,&#34;marketCap&#34;:&#34;1573264006&#34;,&#34;price&#34;:&#34;0.023565706068115262&#34;,&#34;listedAt&#34;:1533427200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.21&#34;,&#34;rank&#34;:38,&#34;sparkline&#34;:[&#34;0.023845399405459933&#34;,&#34;0.023779417756895748&#34;,&#34;0.0237503648773653&#34;,&#34;0.023780799909472596&#34;,&#34;0.023856466417581195&#34;,&#34;0.02395339578538322&#34;,&#34;0.024027726003664374&#34;,&#34;0.02406287804956785&#34;,&#34;0.024029150650035552&#34;,&#34;0.02403165474416971&#34;,&#34;0.024007492514989702&#34;,&#34;0.023892749313038426&#34;,&#34;0.02379348575193527&#34;,&#34;0.023832374059395464&#34;,&#34;0.023815739677309912&#34;,&#34;0.023779423448940625&#34;,&#34;0.023736409723578464&#34;,&#34;0.023842146312866533&#34;,&#34;0.02390356478916241&#34;,&#34;0.023807572304941245&#34;,&#34;0.023672849299184874&#34;,&#34;0.023745231289912128&#34;,&#34;0.023678432475945806&#34;,&#34;0.023675787092202465&#34;,&#34;0.023626426270830576&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet&#34;,&#34;24hVolume&#34;:&#34;107361207&#34;,&#34;btcPrice&#34;:&#34;0.000001175942106298&#34;},{&#34;uuid&#34;:&#34;ncYFcP709&#34;,&#34;symbol&#34;:&#34;CAKE&#34;,&#34;name&#34;:&#34;PancakeSwap&#34;,&#34;color&#34;:&#34;#fe9555&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png&#34;,&#34;marketCap&#34;:&#34;1569524634&#34;,&#34;price&#34;:&#34;4.719166488592311&#34;,&#34;listedAt&#34;:1613642379,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.58&#34;,&#34;rank&#34;:39,&#34;sparkline&#34;:[&#34;4.697656474890724&#34;,&#34;4.671620835696077&#34;,&#34;4.661700930843492&#34;,&#34;4.662153786655901&#34;,&#34;4.669629519650637&#34;,&#34;4.6965206988350126&#34;,&#34;4.729693628603321&#34;,&#34;4.7140657358610465&#34;,&#34;4.72362675311866&#34;,&#34;4.726446209779176&#34;,&#34;4.717613624950668&#34;,&#34;4.704697941989018&#34;,&#34;4.69791612657912&#34;,&#34;4.703785740874498&#34;,&#34;4.692788824207762&#34;,&#34;4.680888740501139&#34;,&#34;4.684984283524298&#34;,&#34;4.71775465500595&#34;,&#34;4.725911539807403&#34;,&#34;4.712165753049669&#34;,&#34;4.718042402139693&#34;,&#34;4.727909952082804&#34;,&#34;4.726141210207868&#34;,&#34;4.729976625030199&#34;,&#34;4.726221847710046&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ncYFcP709+pancakeswap-cake&#34;,&#34;24hVolume&#34;:&#34;46663031&#34;,&#34;btcPrice&#34;:&#34;0.000235489085899817&#34;},{&#34;uuid&#34;:&#34;tEf7-dnwV3BXS&#34;,&#34;symbol&#34;:&#34;MANA&#34;,&#34;name&#34;:&#34;Decentraland&#34;,&#34;color&#34;:&#34;#f47e33&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg&#34;,&#34;marketCap&#34;:&#34;1535023501&#34;,&#34;price&#34;:&#34;0.6998054265609129&#34;,&#34;listedAt&#34;:1500336000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.51&#34;,&#34;rank&#34;:40,&#34;sparkline&#34;:[&#34;0.7062418717505824&#34;,&#34;0.7036912257786649&#34;,&#34;0.701977034723851&#34;,&#34;0.7011237829156313&#34;,&#34;0.7022081935423256&#34;,&#34;0.704347215334535&#34;,&#34;0.7057336965233337&#34;,&#34;0.7090636534769581&#34;,&#34;0.7106615358646469&#34;,&#34;0.7109962681888046&#34;,&#34;0.7099719076767776&#34;,&#34;0.7082023207228123&#34;,&#34;0.7049698949346435&#34;,&#34;0.707375174193511&#34;,&#34;0.7053874976507782&#34;,&#34;0.7047133247052391&#34;,&#34;0.7038908739017045&#34;,&#34;0.705913915399678&#34;,&#34;0.7066603198538087&#34;,&#34;0.704152500023909&#34;,&#34;0.7011182119991161&#34;,&#34;0.7015764522297463&#34;,&#34;0.7002294758773082&#34;,&#34;0.7007134228587633&#34;,&#34;0.7002642899388526&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana&#34;,&#34;24hVolume&#34;:&#34;123804960&#34;,&#34;btcPrice&#34;:&#34;0.000034920687923794&#34;},{&#34;uuid&#34;:&#34;Z96jIvLU7&#34;,&#34;symbol&#34;:&#34;IMX&#34;,&#34;name&#34;:&#34;Immutable X&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/naRGT2Y_X/10603.png&#34;,&#34;marketCap&#34;:&#34;1527710549&#34;,&#34;price&#34;:&#34;0.7638552742830421&#34;,&#34;listedAt&#34;:1649387294,&#34;tier&#34;:1,&#34;change&#34;:&#34;-3.56&#34;,&#34;rank&#34;:41,&#34;sparkline&#34;:[&#34;0.7929256499253894&#34;,&#34;0.7888051736513645&#34;,&#34;0.7863788485157178&#34;,&#34;0.7855541947236996&#34;,&#34;0.7859794469303182&#34;,&#34;0.7910897411189671&#34;,&#34;0.793054017744364&#34;,&#34;0.7920608982909317&#34;,&#34;0.7932732662277912&#34;,&#34;0.7937358349094242&#34;,&#34;0.7899013972015532&#34;,&#34;0.7873715826948282&#34;,&#34;0.7829790811061864&#34;,&#34;0.783269981243268&#34;,&#34;0.7815344726475157&#34;,&#34;0.7785425088136787&#34;,&#34;0.7746500459118211&#34;,&#34;0.7787006394598114&#34;,&#34;0.7794923142833631&#34;,&#34;0.7752303701345216&#34;,&#34;0.7718252823278199&#34;,&#34;0.7719711766718481&#34;,&#34;0.7698820834493335&#34;,&#34;0.7677390997262953&#34;,&#34;0.766444073193977&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Z96jIvLU7+immutablex-imx&#34;,&#34;24hVolume&#34;:&#34;93981287&#34;,&#34;btcPrice&#34;:&#34;0.00003811681167331&#34;},{&#34;uuid&#34;:&#34;jad286TjB&#34;,&#34;symbol&#34;:&#34;HBAR&#34;,&#34;name&#34;:&#34;Hedera&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/dSCnSLilQ/hedera.svg&#34;,&#34;marketCap&#34;:&#34;1410733879&#34;,&#34;price&#34;:&#34;0.05794531840626341&#34;,&#34;listedAt&#34;:1568704980,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.14&#34;,&#34;rank&#34;:42,&#34;sparkline&#34;:[&#34;0.057987549534873575&#34;,&#34;0.05775585952323003&#34;,&#34;0.057704389710771006&#34;,&#34;0.057720764112458633&#34;,&#34;0.05789434173084646&#34;,&#34;0.05809746344437125&#34;,&#34;0.058189441306718125&#34;,&#34;0.05837589581493919&#34;,&#34;0.058390643995986855&#34;,&#34;0.05842359197073168&#34;,&#34;0.058297064663280294&#34;,&#34;0.05820470132737367&#34;,&#34;0.0580770804543927&#34;,&#34;0.05815299545747791&#34;,&#34;0.05810249319975141&#34;,&#34;0.05804441712201078&#34;,&#34;0.05806727832929762&#34;,&#34;0.05821768851814514&#34;,&#34;0.05829566804378026&#34;,&#34;0.05828163498221988&#34;,&#34;0.05798391287623929&#34;,&#34;0.058043633564482264&#34;,&#34;0.058011070179240766&#34;,&#34;0.05808354148641326&#34;,&#34;0.05805972541186593&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/jad286TjB+hedera-hbar&#34;,&#34;24hVolume&#34;:&#34;39039231&#34;,&#34;btcPrice&#34;:&#34;0.000002891504272343&#34;},{&#34;uuid&#34;:&#34;KfWtaeV1W&#34;,&#34;symbol&#34;:&#34;FRAX&#34;,&#34;name&#34;:&#34;Frax&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BpVNCX-NM/frax.png&#34;,&#34;marketCap&#34;:&#34;1358826954&#34;,&#34;price&#34;:&#34;1.0005605770134882&#34;,&#34;listedAt&#34;:1615299931,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.12&#34;,&#34;rank&#34;:43,&#34;sparkline&#34;:[&#34;0.9992267752453355&#34;,&#34;1.0001726269660145&#34;,&#34;1.0000268231187786&#34;,&#34;0.9993388779781252&#34;,&#34;0.9994407930086252&#34;,&#34;0.9986229045501516&#34;,&#34;0.9990744412957507&#34;,&#34;0.9990768091269389&#34;,&#34;0.999533163749183&#34;,&#34;0.9992798589768088&#34;,&#34;0.9998864958466837&#34;,&#34;1.0002316433678111&#34;,&#34;0.9997532610148976&#34;,&#34;0.9998490462219642&#34;,&#34;0.9997971392980437&#34;,&#34;0.9997432371796496&#34;,&#34;0.9993632714074973&#34;,&#34;0.9989467838306688&#34;,&#34;0.9999301859278275&#34;,&#34;1.0004243854982815&#34;,&#34;1.0003751828101939&#34;,&#34;0.9992738011961465&#34;,&#34;0.9997614302328243&#34;,&#34;0.9992973524200179&#34;,&#34;0.9997753063108105&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/KfWtaeV1W+frax-frax&#34;,&#34;24hVolume&#34;:&#34;3749885&#34;,&#34;btcPrice&#34;:&#34;0.000049943042893922&#34;},{&#34;uuid&#34;:&#34;bauj_21eYVwso&#34;,&#34;symbol&#34;:&#34;QNT&#34;,&#34;name&#34;:&#34;Quant&#34;,&#34;color&#34;:&#34;#585e63&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/a-i9Dl392/quant.png&#34;,&#34;marketCap&#34;:&#34;1354125164&#34;,&#34;price&#34;:&#34;138.49774764048757&#34;,&#34;listedAt&#34;:1533945600,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.63&#34;,&#34;rank&#34;:44,&#34;sparkline&#34;:[&#34;137.60236636979457&#34;,&#34;137.2014469492855&#34;,&#34;136.86641854250846&#34;,&#34;137.61943864188262&#34;,&#34;138.02288004406574&#34;,&#34;138.71450262820792&#34;,&#34;139.15753412769195&#34;,&#34;139.0288846982766&#34;,&#34;139.1402037166419&#34;,&#34;138.93629469593716&#34;,&#34;138.16451460952393&#34;,&#34;137.36487381286946&#34;,&#34;137.39695856925007&#34;,&#34;139.42777188017604&#34;,&#34;138.9898954474634&#34;,&#34;139.22872265988386&#34;,&#34;139.535730109657&#34;,&#34;140.68449473037566&#34;,&#34;140.08245100411327&#34;,&#34;139.61571125671037&#34;,&#34;139.09062808458668&#34;,&#34;139.59831707065243&#34;,&#34;139.40279972120157&#34;,&#34;139.02719655523083&#34;,&#34;139.0767096899866&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/bauj_21eYVwso+quant-qnt&#34;,&#34;24hVolume&#34;:&#34;57176717&#34;,&#34;btcPrice&#34;:&#34;0.006911116204499637&#34;},{&#34;uuid&#34;:&#34;fsIbGOEJWbzxG&#34;,&#34;symbol&#34;:&#34;XTZ&#34;,&#34;name&#34;:&#34;Tezos&#34;,&#34;color&#34;:&#34;#2c7df7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HkLUdilQ7/xtz.svg&#34;,&#34;marketCap&#34;:&#34;1300439766&#34;,&#34;price&#34;:&#34;1.4319082342162768&#34;,&#34;listedAt&#34;:1530662400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.31&#34;,&#34;rank&#34;:45,&#34;sparkline&#34;:[&#34;1.430397215546374&#34;,&#34;1.4266302917567777&#34;,&#34;1.422154065982087&#34;,&#34;1.4244295761005363&#34;,&#34;1.4277505791732141&#34;,&#34;1.4331687835452782&#34;,&#34;1.443452302749013&#34;,&#34;1.44654853894898&#34;,&#34;1.4430883131864&#34;,&#34;1.4486591676627363&#34;,&#34;1.4453351430074377&#34;,&#34;1.4406990621963756&#34;,&#34;1.4358193191734254&#34;,&#34;1.436525145874335&#34;,&#34;1.4344049333357989&#34;,&#34;1.433572195187031&#34;,&#34;1.4324776156964327&#34;,&#34;1.4377996834009625&#34;,&#34;1.439997761210823&#34;,&#34;1.4337627996067135&#34;,&#34;1.424354313001366&#34;,&#34;1.4251526628835012&#34;,&#34;1.4217217453444855&#34;,&#34;1.4265670483494004&#34;,&#34;1.430973763784687&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz&#34;,&#34;24hVolume&#34;:&#34;30967584&#34;,&#34;btcPrice&#34;:&#34;0.000071453033492912&#34;},{&#34;uuid&#34;:&#34;omwkOTglq&#34;,&#34;symbol&#34;:&#34;EGLD&#34;,&#34;name&#34;:&#34;Elrond&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg&#34;,&#34;marketCap&#34;:&#34;1296105643&#34;,&#34;price&#34;:&#34;54.85690089748108&#34;,&#34;listedAt&#34;:1612524044,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.41&#34;,&#34;rank&#34;:46,&#34;sparkline&#34;:[&#34;54.78182751537088&#34;,&#34;54.623130667418366&#34;,&#34;54.53200689084205&#34;,&#34;54.12891435002389&#34;,&#34;54.19623024858422&#34;,&#34;54.633815523213606&#34;,&#34;55.27290146147566&#34;,&#34;55.13168195216286&#34;,&#34;55.385084460868484&#34;,&#34;55.204117457272815&#34;,&#34;55.02695582682979&#34;,&#34;54.88507503357054&#34;,&#34;54.622210796648005&#34;,&#34;54.68371878464479&#34;,&#34;54.97054215534175&#34;,&#34;55.13258046932118&#34;,&#34;55.11985989110122&#34;,&#34;55.09683804375179&#34;,&#34;55.09201238607855&#34;,&#34;54.889034734282475&#34;,&#34;54.82661120319219&#34;,&#34;55.03289232182354&#34;,&#34;55.32821889622037&#34;,&#34;55.09630153988564&#34;,&#34;54.81917251126187&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/omwkOTglq+elrond-egld&#34;,&#34;24hVolume&#34;:&#34;55137293&#34;,&#34;btcPrice&#34;:&#34;0.002737390485983484&#34;},{&#34;uuid&#34;:&#34;GSCt2y6YSgO26&#34;,&#34;symbol&#34;:&#34;CHZ&#34;,&#34;name&#34;:&#34;Chiliz&#34;,&#34;color&#34;:&#34;#d05e72&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/gTsOlSnwR/4066.png&#34;,&#34;marketCap&#34;:&#34;1280314908&#34;,&#34;price&#34;:&#34;0.2155095664467585&#34;,&#34;listedAt&#34;:1562332440,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.07&#34;,&#34;rank&#34;:47,&#34;sparkline&#34;:[&#34;0.21667322581840753&#34;,&#34;0.2171849304008596&#34;,&#34;0.2156861139378023&#34;,&#34;0.21533849342523834&#34;,&#34;0.21637084202032117&#34;,&#34;0.2172780853626793&#34;,&#34;0.2185663393777442&#34;,&#34;0.21930091082116046&#34;,&#34;0.21987321663135242&#34;,&#34;0.21925549598692895&#34;,&#34;0.218446742092016&#34;,&#34;0.21799923484351233&#34;,&#34;0.21707908782693836&#34;,&#34;0.2162304888287678&#34;,&#34;0.21564396344092862&#34;,&#34;0.2160322377313941&#34;,&#34;0.2156629628227058&#34;,&#34;0.2160998394185173&#34;,&#34;0.21616476056443742&#34;,&#34;0.2150659594569372&#34;,&#34;0.21484265293098417&#34;,&#34;0.21685269247547745&#34;,&#34;0.2174694851304847&#34;,&#34;0.2169941909375626&#34;,&#34;0.21640186406857279&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz&#34;,&#34;24hVolume&#34;:&#34;302884379&#34;,&#34;btcPrice&#34;:&#34;0.00001075404966701&#34;},{&#34;uuid&#34;:&#34;pxtKbG5rg&#34;,&#34;symbol&#34;:&#34;SAND&#34;,&#34;name&#34;:&#34;The Sandbox&#34;,&#34;color&#34;:&#34;#00adef&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/kd_vwOcnI/sandbox.png&#34;,&#34;marketCap&#34;:&#34;1270111345&#34;,&#34;price&#34;:&#34;0.8470400671617898&#34;,&#34;listedAt&#34;:1613583024,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.00&#34;,&#34;rank&#34;:48,&#34;sparkline&#34;:[&#34;0.8655783961108249&#34;,&#34;0.8655726139511055&#34;,&#34;0.8593672603083095&#34;,&#34;0.8592673257045527&#34;,&#34;0.8609659832018245&#34;,&#34;0.8648971108758887&#34;,&#34;0.8663731911826474&#34;,&#34;0.8667122213039231&#34;,&#34;0.8663886523811145&#34;,&#34;0.8668792238690509&#34;,&#34;0.8649624385349067&#34;,&#34;0.8611180516082279&#34;,&#34;0.8585057527325253&#34;,&#34;0.8659888879718258&#34;,&#34;0.8604300437005915&#34;,&#34;0.8554219297700761&#34;,&#34;0.8526286745187818&#34;,&#34;0.85555673582445&#34;,&#34;0.857162179096966&#34;,&#34;0.8538331404270197&#34;,&#34;0.8499300848374965&#34;,&#34;0.8520164372728138&#34;,&#34;0.8508491562189808&#34;,&#34;0.8511376364605714&#34;,&#34;0.8492230247050839&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand&#34;,&#34;24hVolume&#34;:&#34;80979110&#34;,&#34;btcPrice&#34;:&#34;0.00004226778004519&#34;},{&#34;uuid&#34;:&#34;Pe93bIOD2&#34;,&#34;symbol&#34;:&#34;LDO&#34;,&#34;name&#34;:&#34;Lido DAO Token&#34;,&#34;color&#34;:&#34;#77cced&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png&#34;,&#34;marketCap&#34;:&#34;1215433426&#34;,&#34;price&#34;:&#34;1.5111273519087483&#34;,&#34;listedAt&#34;:1627361901,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.13&#34;,&#34;rank&#34;:49,&#34;sparkline&#34;:[&#34;1.525296480481106&#34;,&#34;1.5182401826410314&#34;,&#34;1.5152205100915535&#34;,&#34;1.5169429140699267&#34;,&#34;1.52442883963002&#34;,&#34;1.5352051807886449&#34;,&#34;1.5507771914692972&#34;,&#34;1.5584198947059793&#34;,&#34;1.5611709741306992&#34;,&#34;1.5622734158186&#34;,&#34;1.563158380319883&#34;,&#34;1.5530023128237487&#34;,&#34;1.5397020867989386&#34;,&#34;1.5415040661271822&#34;,&#34;1.5390596625673671&#34;,&#34;1.5500393853481451&#34;,&#34;1.5580781625747462&#34;,&#34;1.560482136152978&#34;,&#34;1.5593445744690575&#34;,&#34;1.5496829584461165&#34;,&#34;1.527032995000603&#34;,&#34;1.530110226331719&#34;,&#34;1.5254217630287106&#34;,&#34;1.5246506775339332&#34;,&#34;1.5185082563785788&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo&#34;,&#34;24hVolume&#34;:&#34;10631046&#34;,&#34;btcPrice&#34;:&#34;0.000075406112422482&#34;},{&#34;uuid&#34;:&#34;iAzbfXiBBKkR6&#34;,&#34;symbol&#34;:&#34;EOS&#34;,&#34;name&#34;:&#34;EOS&#34;,&#34;color&#34;:&#34;#443f54&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/PqOYrWSje/eos2.svg&#34;,&#34;marketCap&#34;:&#34;1157589411&#34;,&#34;price&#34;:&#34;1.1710386334780396&#34;,&#34;listedAt&#34;:1498694400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.10&#34;,&#34;rank&#34;:50,&#34;sparkline&#34;:[&#34;1.176159663996107&#34;,&#34;1.1722544811098015&#34;,&#34;1.1694363470738518&#34;,&#34;1.1705864439187568&#34;,&#34;1.1738525342149835&#34;,&#34;1.178558922119085&#34;,&#34;1.1837969319466126&#34;,&#34;1.1858090386610416&#34;,&#34;1.1862130969952875&#34;,&#34;1.1884443612524698&#34;,&#34;1.1872550267419892&#34;,&#34;1.1834269966357152&#34;,&#34;1.177571251432726&#34;,&#34;1.1762334557746148&#34;,&#34;1.176819224133604&#34;,&#34;1.1773006391443017&#34;,&#34;1.1797207072466058&#34;,&#34;1.1826694645707552&#34;,&#34;1.1833296312782675&#34;,&#34;1.1795247040200163&#34;,&#34;1.1762826971957536&#34;,&#34;1.1778133333859857&#34;,&#34;1.175329899238845&#34;,&#34;1.175643537233567&#34;,&#34;1.1736718406064062&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos&#34;,&#34;24hVolume&#34;:&#34;159153521&#34;,&#34;btcPrice&#34;:&#34;0.000058435492373013&#34;}]}} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; API status: success BTC 20039.85225285541 Icon Url: https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg Rank Url: https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc ETH 1357.926575523784 Icon Url: https://cdn.coinranking.com/rk4RKHOuW/eth.svg Rank Url: https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth USDT 1.0013180922249538 Icon Url: https://cdn.coinranking.com/mgHqwlCLj/usdt.svg Rank Url: https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt USDC 1.0014872322256272 Icon Url: https://cdn.coinranking.com/jkDf8sQbY/usdc.svg Rank Url: https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc BNB 293.1404150315455 Icon Url: https://cdn.coinranking.com/B1N19L_dZ/bnb.svg Rank Url: https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb XRP 0.49601855066320694 Icon Url: https://cdn.coinranking.com/B1oPuTyfX/xrp.svg Rank Url: https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp BUSD 1.0013067238646687 Icon Url: https://cdn.coinranking.com/6SJHRfClq/busd.svg Rank Url: https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd ADA 0.4287417616937746 Icon Url: https://cdn.coinranking.com/ryY28nXhW/ada.svg Rank Url: https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada SOL 33.678542508157825 Icon Url: https://cdn.coinranking.com/yvUG4Qex5/solana.svg Rank Url: https://coinranking.com/coin/zNZHO_Sjf+solana-sol DOGE 0.06378441506375986 Icon Url: https://cdn.coinranking.com/H1arXIuOZ/doge.svg Rank Url: https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge MATIC 0.8409093774070842 Icon Url: https://cdn.coinranking.com/WulYRq14o/polygon.png Rank Url: https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic DOT 6.375078654537634 Icon Url: https://cdn.coinranking.com/RsljYqnbu/polkadot.svg Rank Url: https://coinranking.com/coin/25W7FG7om+polkadot-dot SHIB 0.000011283528342602 Icon Url: https://cdn.coinranking.com/D69LfI-tm/shib.png Rank Url: https://coinranking.com/coin/xz24e0BjL+shibainu-shib DAI 1.0008022121623688 Icon Url: https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg Rank Url: https://coinranking.com/coin/MoTuySvg7+dai-dai TRX 0.06255591911198198 Icon Url: https://cdn.coinranking.com/behejNqQs/trx.svg Rank Url: https://coinranking.com/coin/qUhEFk1I61atv+tron-trx WETH 1358.9816391781385 Icon Url: https://cdn.coinranking.com/KIviQyZlt/weth.svg Rank Url: https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth UNI 6.878571143545948 Icon Url: https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48 Rank Url: https://coinranking.com/coin/_H5FVG9iW+uniswap-uni AVAX 17.151474027482617 Icon Url: https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png Rank Url: https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax WBTC 20035.560359793384 Icon Url: https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg Rank Url: https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc ATOM 13.1625479357164 Icon Url: https://cdn.coinranking.com/HJzHboruM/atom.svg Rank Url: https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom OKB 15.653096931638096 Icon Url: https://cdn.coinranking.com/xcZdYtX6E/okx.png Rank Url: https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb LTC 54.03525579621315 Icon Url: https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg Rank Url: https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc FTT 24.689134847446596 Icon Url: https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg Rank Url: https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt ETC 27.94436424817255 Icon Url: https://cdn.coinranking.com/rJfyor__W/etc.svg Rank Url: https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc XMR 144.96734461625016 Icon Url: https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg Rank Url: https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr ALGO 0.3504789188229551 Icon Url: https://cdn.coinranking.com/lzbmCkUGB/algo.svg Rank Url: https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo XLM 0.1203910684342368 Icon Url: https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg Rank Url: https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm BCH 120.1678866432934 Icon Url: https://cdn.coinranking.com/By8ziihX7/bch.svg Rank Url: https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch BTCB 20096.064448414432 Icon Url: https://cdn.coinranking.com/Swr_SeZio/4023.png Rank Url: https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb NEAR 3.6476370930344353 Icon Url: https://cdn.coinranking.com/Cth83dCnl/near.png Rank Url: https://coinranking.com/coin/DCrsaMv68+nearprotocol-near CRO 0.10985269355990235 Icon Url: https://cdn.coinranking.com/2o91jm73M/cro.svg Rank Url: https://coinranking.com/coin/65PHZTpmE55b+cronos-cro LUNC 0.000290920384561765 Icon Url: https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg Rank Url: https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc WEMIX 1.8045634491743752 Icon Url: https://cdn.coinranking.com/1N84MQsoO/7548.png Rank Url: https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix FLOW 1.6985662993280668 Icon Url: https://cdn.coinranking.com/xh8X8QBss/flow.png Rank Url: https://coinranking.com/coin/QQ0NCmjVq+flow-flow ENS 17.04218243105481 Icon Url: https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png Rank Url: https://coinranking.com/coin/SbWqqTui-+energyswap-ens FIL 5.532691353822477 Icon Url: https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48 Rank Url: https://coinranking.com/coin/ymQub4fuB+filecoin-fil ICP 6.036596104556241 Icon Url: https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png Rank Url: https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp VET 0.023565706068115262 Icon Url: https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg Rank Url: https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet CAKE 4.719166488592311 Icon Url: https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png Rank Url: https://coinranking.com/coin/ncYFcP709+pancakeswap-cake MANA 0.6998054265609129 Icon Url: https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg Rank Url: https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana IMX 0.7638552742830421 Icon Url: https://cdn.coinranking.com/naRGT2Y_X/10603.png Rank Url: https://coinranking.com/coin/Z96jIvLU7+immutablex-imx HBAR 0.05794531840626341 Icon Url: https://cdn.coinranking.com/dSCnSLilQ/hedera.svg Rank Url: https://coinranking.com/coin/jad286TjB+hedera-hbar FRAX 1.0005605770134882 Icon Url: https://cdn.coinranking.com/BpVNCX-NM/frax.png Rank Url: https://coinranking.com/coin/KfWtaeV1W+frax-frax QNT 138.49774764048757 Icon Url: https://cdn.coinranking.com/a-i9Dl392/quant.png Rank Url: https://coinranking.com/coin/bauj_21eYVwso+quant-qnt XTZ 1.4319082342162768 Icon Url: https://cdn.coinranking.com/HkLUdilQ7/xtz.svg Rank Url: https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz EGLD 54.85690089748108 Icon Url: https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg Rank Url: https://coinranking.com/coin/omwkOTglq+elrond-egld CHZ 0.2155095664467585 Icon Url: https://cdn.coinranking.com/gTsOlSnwR/4066.png Rank Url: https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz SAND 0.8470400671617898 Icon Url: https://cdn.coinranking.com/kd_vwOcnI/sandbox.png Rank Url: https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand LDO 1.5111273519087483 Icon Url: https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png Rank Url: https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo EOS 1.1710386334780396 Icon Url: https://cdn.coinranking.com/PqOYrWSje/eos2.svg Rank Url: https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://kaiden-dough.github.io/fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter a is the 1 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter z is the 26 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: pass elif numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . Menu Stuff . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99, &quot;chicken&quot;: 5.99, &quot;teddy bear&quot;: 11.99, &quot;cheese stick&quot;: 49.99, &quot;beloved basketball&quot;: 99.99} go = 0 print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) while go == 0: item = input(&quot;Please select an item from the menu&quot;) print(&quot;Your Order:&quot;, item.lower()) for k,v in menu.items(): if item.lower() == k: print(&quot;Your total is $&quot;, menu[item.lower()]) go = 1 break if item.lower() != k: print(&quot;Please Try Again&quot;) continue . Menu burger $3.99 fries $1.99 drink $0.99 chicken $5.99 teddy bear $11.99 cheese stick $49.99 beloved basketball $99.99 Your Order: apples Please Try Again Your Order: nuggies Please Try Again Your Order: beloved basketball Your total is $ 99.99 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://kaiden-dough.github.io/fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "AWS Deployment",
            "content": "Output of Curl (converted to text) . $ curl http://localhost:8088 | html2text | . Proof of Change in Browser . Before: | Change: | After: | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week6/2022/10/02/awsdeployment.html",
            "relUrl": "/markdown/week6/2022/10/02/awsdeployment.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "APCSP College Board Grades",
            "content": "Unit 1.1 Collaboration . I understood the idea of collaboration through the videos. 3/3 . Unit 1.2 Program Function and Purpose . The videos didn’t fully prepare me for the questions and I had to put a little bit more time thinking about and answering these questions. 6/6 . Unit 1.3 Program Design and Development . From watching the videos, the MC questions were fairly straightforward to answer. 3/3 . Unit 1.4 Identifying and Correcting Errors . Question 3 Corrections: The number 7 results in the correct answer so it was incorrect because the answer wanted wrong results. But number 8 results in check minus instead of check so that was the correct answer. 2/3 . Unit 4.1 The Internet . Correction: Question 3, the World Wide Web is a info system that is accessed through the Internet, the Internet is a network of interconnected networks. 2/3 .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week6/2022/10/02/apgrades.html",
            "relUrl": "/markdown/week6/2022/10/02/apgrades.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Program Design and Development (Unit 1.3)",
            "content": "Program Design and Development Video #1 Notes . Program starts with an idea and a specific purpose | They follow steps and stick to their plan to create their program | Developers need to investigate the problem: what do we want to do, what are the constraints, what the user wants and needs | They use surveys or interviews to investigate | They brainstorm and storyboard the program | Plan a user experience and UI | They organize it and plan a testing method | Developers decide requirements in program | Then they make a prototype of the program and slowly refine the program | Testing: testing in each small components and testing if the components work together also they receive user feedback | Takeaway: Develop a program with development process and design a program and its user interface | . Program Design and Development Video #2 Notes . Program development is not a solo act; there is a team of people | Teams of individuals work on small parts of the whole program | These people should be credited for what they do in the project Can do this in the comments of the code | This helps in finding who can fix the bugs in the parts of the program | . | When using code from outside resources, the people who programmed it should be credited by saying the author’s name and the source | MC Question: B | Takeaway: Acknowledge code segments made collaboratively or from outside resources | . Program Design and Development Video #3 Notes . Explain code segments with comments | Program Documentation describe overall program | list program specifications: functions and methods, specific code segments, lists of events, development of program, and authors | . | Documentation happens at the beginning for specifications, during to keep track of process, after to explain the overall process it can help with efficiency in programming process | programmers ability to test and refine program and fix bugs | . | Comments do not affect the program, only helps the programmer collaborate or work individually | Takeaway: Describe purpose of code segment through documentation, Program documentation is a description of a code segment, it is for programmers to read and doesn’t affect the program, programmers should comment during development, it helps maintain programs when going solo or in a team, and some languages do not allow comments | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week6/2022/09/27/program-design-and-development.html",
            "relUrl": "/markdown/week6/2022/09/27/program-design-and-development.html",
            "date": " • Sep 27, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "HTML Program Purpose",
            "content": "Visual . . Description . A B C D . .",
            "url": "https://kaiden-dough.github.io/fastpages/week5/2022/09/25/htmlprogrampurpose.html",
            "relUrl": "/week5/2022/09/25/htmlprogrampurpose.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post51": {
            "title": "Team Project Program Purpose",
            "content": "Program Purpose Idea . An idea for the project would be a Singleplayer vs Dealer Blackjack game. This game would take user input and it would also need algorithms to check cards, deal cards, and control the dealer. . This project would be very good for education because it would teach us many skills in programming. Also this project would take a lot of thinking and it wouldn&#39;t just be a simple game. . This project would hold the team members interest for 8 weeks because the project would have many parts. The Frontend Developer would create the Blackjack table and show visual images on the screen. The Backend Developer would create all of the algorithms behind the scenes that makes sure the program functions. The Dev Ops would make sure the website deploys and functions. The Scrum Master would direct the team and assign tasks and goals for each sprint. Also the Dev Ops and Scrum Master would help the Backend and Frontend Developers. . This project could be used outside of the class but it would be unlikely because there are numerous Blackjack apps online and on phones. . The project could be used for a Create Performance Task submission because it would fill out all of the CPT requirements. .",
            "url": "https://kaiden-dough.github.io/fastpages/week5/2022/09/25/ProgramPurposeTeam.html",
            "relUrl": "/week5/2022/09/25/ProgramPurposeTeam.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post52": {
            "title": "Personal Javascript",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . . My Edits on the Tutorial . function printInfo(msg) { console.log(typeof msg + &quot;;&quot;, msg); } printInfo(5); printInfo(&quot;apples&quot;); printInfo([&quot;Bob&quot;, &quot;Joe&quot;, &quot;Kaiden&quot;]); printInfo(5*3) . number; 5 string; apples object; [ &#39;Bob&#39;, &#39;Joe&#39;, &#39;Kaiden&#39; ] number; 15 . function Drink(name, color, calories) { this.name = name; this.color = color; this.calories = calories; this.type = &quot;&quot;; } Drink.prototype.setType = function(type) { this.type = type; } Drink.prototype.toJSON = function() { const data = {name: this.name, color: this.color, calories: this.calories, type: this.type}; const jsonString = JSON.stringify(data); return jsonString; } var water = new Drink(&quot;Water&quot;, &quot;Clear&quot;, 0); water.setType(&quot;Water&quot;); printInfo(water); printInfo(water.toJSON()); . object; Drink { name: &#39;Water&#39;, color: &#39;Clear&#39;, calories: 0, type: &#39;Water&#39; } string; {&#34;name&#34;:&#34;Water&#34;,&#34;color&#34;:&#34;Clear&#34;,&#34;calories&#34;:0,&#34;type&#34;:&#34;Water&#34;} . var soda = [ new Drink(&quot;Fanta&quot;, &quot;Orange&quot;, 160), new Drink(&quot;Mtn Dew&quot;, &quot;Green&quot;, 170), new Drink(&quot;Root Beer&quot;, &quot;Brown&quot;, 180), new Drink(&quot;Coca-Cola&quot;, &quot;Brown&quot;, 140), new Drink(&quot;Pepsi&quot;, &quot;Brown&quot;, 150), new Drink(&quot;Sprite&quot;, &quot;Clear&quot;, 140) ] var juice = [ new Drink(&quot;Apple Juice&quot;, &quot;Gold-Yellow&quot;, 180), new Drink(&quot;Orange Juice&quot;, &quot;Orange-Yellow&quot;, 110), new Drink(&quot;Cranberry Juice&quot;, &quot;Red&quot;, 100), ] function Drinks(water, soda, juice) { water.setType(&quot;Water&quot;); this.water = water; this.drinks = [water]; this.soda = soda; this.juice = juice; this.soda.forEach(soda =&gt; {soda.setType(&quot;Soda&quot;); this.drinks.push(soda);}); this.juice.forEach(juice =&gt; {juice.setType(&quot;Juice&quot;); this.drinks.push(juice);}); this.jsonDrinks = []; this.drinks.forEach(drink =&gt; this.jsonDrinks.push(drink.toJSON())); } pantry = new Drinks(water, soda, juice); printInfo(pantry.drinks); printInfo(pantry.drinks[7].name); printInfo(pantry.jsonDrinks[7]); printInfo(JSON.parse(pantry.jsonDrinks[7])); . object; [ Drink { name: &#39;Water&#39;, color: &#39;Clear&#39;, calories: 0, type: &#39;Water&#39; }, Drink { name: &#39;Fanta&#39;, color: &#39;Orange&#39;, calories: 160, type: &#39;Soda&#39; }, Drink { name: &#39;Mtn Dew&#39;, color: &#39;Green&#39;, calories: 170, type: &#39;Soda&#39; }, Drink { name: &#39;Root Beer&#39;, color: &#39;Brown&#39;, calories: 180, type: &#39;Soda&#39; }, Drink { name: &#39;Coca-Cola&#39;, color: &#39;Brown&#39;, calories: 140, type: &#39;Soda&#39; }, Drink { name: &#39;Pepsi&#39;, color: &#39;Brown&#39;, calories: 150, type: &#39;Soda&#39; }, Drink { name: &#39;Sprite&#39;, color: &#39;Clear&#39;, calories: 140, type: &#39;Soda&#39; }, Drink { name: &#39;Apple Juice&#39;, color: &#39;Gold-Yellow&#39;, calories: 180, type: &#39;Juice&#39; }, Drink { name: &#39;Orange Juice&#39;, color: &#39;Orange-Yellow&#39;, calories: 110, type: &#39;Juice&#39; }, Drink { name: &#39;Cranberry Juice&#39;, color: &#39;Red&#39;, calories: 100, type: &#39;Juice&#39; } ] string; Apple Juice string; {&#34;name&#34;:&#34;Apple Juice&#34;,&#34;color&#34;:&#34;Gold-Yellow&#34;,&#34;calories&#34;:180,&#34;type&#34;:&#34;Juice&#34;} object; { name: &#39;Apple Juice&#39;, color: &#39;Gold-Yellow&#39;, calories: 180, type: &#39;Juice&#39; } . Pythagorean Triples . var a = 1; var b = 1; var c = 1; var range = 20; console.log(&quot;Here are some Pythagorean Triples:&quot;) for(let i = 0; i &lt; range; i++) { for(let i = a; i &lt; 500; i++) { b = i; c = Math.sqrt(Math.pow(a,2) + Math.pow(b,2)); if (Math.floor(c)==c){ console.log(a,b,c); } } a++; } . Here are some Pythagorean Triples: 3 4 5 5 12 13 6 8 10 7 24 25 8 15 17 9 12 15 9 40 41 10 24 26 11 60 61 12 16 20 12 35 37 13 84 85 14 48 50 15 20 25 15 36 39 15 112 113 16 30 34 16 63 65 17 144 145 18 24 30 18 80 82 19 180 181 20 21 29 20 48 52 20 99 101 . 20 .",
            "url": "https://kaiden-dough.github.io/fastpages/week5/2022/09/23/javascript.html",
            "relUrl": "/week5/2022/09/23/javascript.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post53": {
            "title": "HTML & JavaScript Table",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . . Drinks.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 5px solid green;&quot; + &quot;box-shadow: 1em 1em 1em yellow;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Name&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Color&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Calories&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;b&gt;&quot; + &quot;Type&quot; + &quot;&lt;/b&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of pantry.drinks) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.color + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.calories + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.type + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(pantry._toHtml()); . evalmachine.&lt;anonymous&gt;:1 Drinks.prototype._toHtml = function() { ^ ReferenceError: Drinks is not defined at evalmachine.&lt;anonymous&gt;:1:1 at ContextifyScript.Script.runInThisContext (vm.js:25:33) at Object.runInThisContext (vm.js:97:38) at run ([eval]:1020:15) at onRunRequest ([eval]:864:18) at onMessage ([eval]:828:13) at emitTwo (events.js:106:13) at process.emit (events.js:191:7) at process.nextTick (internal/child_process.js:758:12) at _combinedTickCallback (internal/process/next_tick.js:73:7) .",
            "url": "https://kaiden-dough.github.io/fastpages/week5/2022/09/23/htmljavascripttable.html",
            "relUrl": "/week5/2022/09/23/htmljavascripttable.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post54": {
            "title": "Program Function and Purpose (Unit 1.2)",
            "content": "Program Function and Purpose Video #1 Notes . Computing Innovations: Applications(apps on a phone or computer), Physical Devices(phone, computer, wearables), Systems(online shopping, emails, cloud) | Why does the computing innovation exist?, What does it solve?, What can we do now with the innovation? | Social Media: To let people connect with others online, a way to save your memories and view other people’s lives | E-commerce: To let people save time and money by shopping from home | Digital Assistant Device: To help people use devices easily and more conveniently while multitasking | The purpose of computing innovations is to solve a problem or pursue interests through creativity | Takeaway: Describe the purpose of a computing innovation | . Program Function and Purpose Video #2 Notes . Computer programs can receive input: touch, audio, visual, text | Programs receive input because programs are written in even driven environments: The events are triggered by certain actions | Input usually affects the output of the program | Actions trigger the event: initiated by user or another program or device | Program jumps to the code segment that is triggered by the action; code segments don’t need to be executed in order | Takeaway: Identify inputs and outputs of a program | . Program Function and Purpose Video #3 Notes . Program: collection of statements; a single is a command, multiple is a code segment, they are executed according to the rules of the programming language | A program is called software | Description of the code segment should be straightforward and how it does what it does | Takeaway: Explain how a program or code segment functions | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week5/2022/09/20/ProgramFunctionAndPurpose.html",
            "relUrl": "/markdown/week5/2022/09/20/ProgramFunctionAndPurpose.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post55": {
            "title": "10 Insights from “Psychology and the Good Life”",
            "content": "&#8220;Psychology and the Good Life&#8221; by Laurie Santos . In this video, Laurie Santos talked about her class &quot;Psychology and the Good Life&quot;. Laurie Santos is a professor at Yale and she thought that instead of only teaching how human minds work, she needed to teach students how to implement the new knowledge to make their lives happier. So she made the class, &quot;Psychology and the Good Life&quot;, and in her talk she summed up the class with ten insights. . Insight #1: We can change our well-being . There is a common misconception that we are stuck in the current well-being we are in, but that is false. We are able to improve our happiness ourselves. From a study by Sonja Lyubomirsky, a psychologist, found that about 50% of our well-being is affected by our genes. This means that the other 50% can be affected by our own doing. . Insight #2: Material and temporary joy does not affect one&#39;s happiness in the long-term . When people want to get happier, they believe that they must get rid of the bad things in their life or get more money from their jobs. Though this does slightly affect one&#39;s well-being, it only affects at most 10% of it. Found in a study by Sonja Lyubomirsky, behaviors and willingness to change is what takes the most effect on one&#39;s well-being. . Insight #3: Bringing your self is the hardest part of changing your well-being . Taking control of your flow of life is the hardest part of becoming happy. Just learning about psychology won&#39;t help you become happy, you must put it into practice. For example to become fit, one must workout regularly and consistently to observe results. Same with your well-being, one must make a change that is consistently affecting your life for the better. . Insight #4: Realize that your intuition is lying to yourself about how to become happy . Your mind is not telling you what you need to become happy. To become happy, one must realize that their mind is not telling the truth. Your mind tells you that you need more material possessions to be happy, but this is false because one you get those items, you just want more. . Insight #5: Social connections are key for happiness . Nick Eppley and his colleagues at Chicago Business School conducted a study asking people on the subway to stay in a solitary state, a state where one must talk to another the whole ride, or do what ever they want. According to the study, the people who made social connections felt happier than before and those who were solitary felt worse. . Insight #6: Helping others can also improve happiness . Elizabeth Dunn and others from the University of British Columbia had a study where people were given 5 or 20 dollars and were given a change to treat themselves or someone else. At the end of the study, those who helped others out felt better and felt happier. The result also showed that the amount of money did not affect the helper&#39;s happiness because they felt happy to even help someone else. . Insight #7: Make time to be gratuitous everyday . Taking time to be thankful about something everyday can improve one&#39;s happiness. Just writing a small note about what you are grateful for can bump up your happiness and well-being. It keeps your mind on positivity instead of negativity and it is good for your well-being. . Insight #8: Improving physical heath can also improve mental health . Things like exercising and getting enough hours of sleep are not only good for your physical health but it is good for your mental health as well. Doing healthy practices does more than just good for your body but also your mind, well-being, and mood. . Insight #9: Be present in the moment . Taking time to realize what you are doing and focusing is important for your well-being. People tend to just go through the motions and rush through the day trying to get everything done, but taking a moment to really comprehend what is going on in your day can bump up your well-being. . Insight #10: Become wealthy with time . People who prioritize the amount of time they have are more happy than those who would sacrifice their time to get money. Taking a break from doing work is great for your well-being. . Gratitude Note . What I wrote to my friend Leo. . Leo you are a terrific person, you are very hard working both in school and in FTC. Also, you are a great friend because you help me when I need it. . Leo&#39;s response . I feel so thankful that you made this note just for me and I just want to say thank you for saying this note to me. - Leo Sun . Learning . Learning is a large part of a student&#39;s life. Almost every single class a student will take requires some proof that they learnt something. Some ways to help a student learn are by focusing on their work and practice good learning habits. Like in Laurie Santos&#39;s talk, we need to value our time. If we value our time we become rich in time and it lets us improve out mental well-being. We can value our time by doing many things. For example we can use our time effectively by focusing and finishing our work in a timely manner and not rushing it all last minute. Also, in adherence to Laurie Santos&#39;s talk we should take control and practice good habits. These good habits are like working hard when you are given a chance to relieve the stress of the workload. These things would not only help you proceed in your class but it would help you well-being because it would minimize the size of your homework at home. This would let you sleep earlier and improve your mental health. Another way to help students learn is by taking notes on important terms, ideas of vocab. . Gratitude List . My family | Access to good food | An opportunity to receive a good education | Access to internet and technology | Living in a nice neighborhood | . My Mental Health Goals . Do something I enjoy daily | Get 7-9 hours of sleep a day | Eat healthy with occasional treat | Exercise at least 3 times a week | Do something fun everyday | .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week4/2022/09/15/psychology.html",
            "relUrl": "/jupyter/week4/2022/09/15/psychology.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post56": {
            "title": "Collaboration (Unit 1.1)",
            "content": "Collaboration Video #1 Notes . When Mr. Han visited Facebook he saw that there was a lot of open space and a beautiful seating area outside. These things all give opportunities to collaborate. . | Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. This means that collaborating brings new ideas to the program. . | Super Mario Brothers 2 was a re-skinning of Super Mario Brothers 1. Kensuke Tanabe had a concept of where you got vertically in a level. Shigeru Miyamoto said to also add horizontal levels. Then they collaborated in Super Mario Brothers 3 and they combined both vertical and horizontal levels. . | Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations. This means when collaborating new features and ideas that wouldn’t be recognized alone are possible. . | MC Question: B . | Takeaway: Collaboration has communication, consensus building, conflict resolution, negotiation. “If you want to go fast, go alone. If you want to go far, go together” - African Proverb . | . Collaboration Video #2 Notes . Pair Programming: two programmers work together - the driver writes the code and the observer reviews the code and offers help . | Think-Pair-Share: think about a problem alone, talk about the problem with a problem, then share to a larger group . | Leaving comments in code: communicate to partners and to yourself, acknowledge code and media from other sources, specify what each person did, explain the code . | Collaborating in class: repl.it, GitHub, shared doc or folder, also ask others to test your program for feedback . | Takeaway: talk with the user to receive diverse ideas, find out ways to make the program more user friendly. . | .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week4/2022/09/13/collaboration.html",
            "relUrl": "/markdown/week4/2022/09/13/collaboration.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post57": {
            "title": "Creative Performance Task Planning/Draft",
            "content": "Row 1: Program Purpose and Function . I need to show a program that takes an input and uses that input to produce an output. I need to be able to describe in words wht the program is trying to achieve, how the program functions, and describe what the input and output are in the program. I am currently able to do these things because I can take a user&#39;s input to output a result. . Row 2: Data Abstraction . I need to create a data structure that can store data and use that data structure in a function. I need to identify the variable of the list and describe what the list&#39;s data is used for in the program. I am able to do this with the positioning of the tiles in the AppLab. The data in the list is used to position the tiles on the x and y coordinates. . Row 3: Managing Complexity . I need to utilize a list to reduce to complexity or redundancy of a program. I can do this by using the list in a for loop and completing a function for each part of the list until the list is fully used. . Row 4: Procedural Abstraction . I need to create a function that receives a parameter that can affect the result of the function. I can do this by creating a function that receives user inputs as a function and compiles it into a string or result. . Row 5: Algorithm Implementation . I need to use sequencing, selection, and iteration. I am not sure how to use sequencing and selection and I can learn through College Board or online resources. I do know how to use iteration and this is by using loops. . Row 6: Testing . I need to test two different parameters into the function created before by calling the function. I can do this by inputting different responses when taking user input. .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week3/2022/09/11/creativeperformancetask.html",
            "relUrl": "/jupyter/week3/2022/09/11/creativeperformancetask.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post58": {
            "title": "AppLab Planning and Process",
            "content": "My App . Plan . I plan to create two things on my App. I want to make a quiz about animals and a luck based game that uses tiles. . Animal Quiz . I want this to be a 10 question quiz that requires the user to type in their answer. I will do this with the onEvent function and use an image and text input. . Luck Based Game . I want this game to have 16 tiles and the user and a friend can take turns choosing tiles. I will do this will boxes and images that appear by using the onEvent click function. I will also use variable to control whose turn it is. . Extra Features . Animal Quiz . The user can click a back button that allows them to go back to the homepage or restart the game | . onEvent(&quot;home&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homepage&quot;); }); onEvent(&quot;animalstart&quot;, &quot;click&quot;, function( ) { setScreen(&quot;start&quot;); }); . The question the user is on before they click the back button is recorded so they can return if they decide to cancel | . onEvent(&quot;cancel&quot;, &quot;click&quot;, function( ) { setScreen(Arrq[animalq]); }); animalq = 0; . I used arrays to minimize the repeating, the arrays were used to move through questions | . var Arrq = [&quot;q1&quot;, &quot;q2&quot;, &quot;q3&quot;, &quot;q4&quot;, &quot;q5&quot;, &quot;q6&quot;, &quot;q7&quot;, &quot;q8&quot;, &quot;q9&quot;, &quot;q10&quot;, &quot;end&quot;]; setScreen(Arrq[animalq]); animalq = 0; . I made a function that would see if the answer was correct or incorrect, so it could display and check or x | . function grade(input, animal, animal2, check, x, q){ if (getText(input).toLowerCase() == animal) { correct++; showElement(check); } else if (getText(input).toLowerCase() == animal2) { correct++; showElement(check); } else { showElement(x); } hideElement(input); setTimeout(function() { hideElement(check); hideElement(x); showElement(input); setText(input, &quot;&quot;); setScreen(q); }, 1000); } grade(&quot;panda-input&quot;, &quot;panda&quot;, &quot;&quot;, &quot;check1&quot;, &quot;x1&quot;, &quot;q2&quot;); . The user&#39;s score is posted at the end of the game (out of 10) | . setText(&quot;score&quot;, &quot;Your score is &quot; + correct + &quot;/10!!!&quot;); . The user&#39;s answer can be in any case, because I converted their answer to lowercase to compare it to the lowercase answer key | . if (getText(input).toLowerCase() == animal) { correct++; showElement(check); } . Luck Based Game (Logo Game) . The user can also click a back button that lets them restart or go to the homepage | . onEvent(&quot;back&quot;, &quot;click&quot;, function( ) { setScreen(&quot;choiceslogo&quot;); }); onEvent(&quot;homepagelogo&quot;, &quot;click&quot;, function( ) { setScreen(&quot;homepage&quot;); codeorg = 0; }); onEvent(&quot;reset&quot;, &quot;click&quot;, function( ) { setScreen(&quot;logostart&quot;); codeorg = 0; }); onEvent(&quot;cancellogo&quot;, &quot;click&quot;, function( ) { setScreen(&quot;gamescreen&quot;); }); . The tiles are shuffled each game to make each experience unique | . var Arrsquare = [&quot;a1&quot;, &quot;a2&quot;, &quot;b1&quot;, &quot;b2&quot;, &quot;c1&quot;, &quot;c2&quot;, &quot;d1&quot;, &quot;d2&quot;, &quot;e1&quot;, &quot;e2&quot;, &quot;f1&quot;, &quot;f2&quot;, &quot;g1&quot;, &quot;g2&quot;, &quot;h1&quot;, &quot;h2&quot;]; function shuffle(array) { var Arrbefore = array.length, Arrshuffle; while (Arrbefore != 0) { Arrshuffle = Math.floor(Math.random() * Arrbefore); Arrbefore--; var swap = array[Arrbefore]; array[Arrbefore] = array[Arrshuffle]; array[Arrshuffle] = swap; } return array; } Arrnewsquare = shuffle(Arrsquare); . They are shuffled into an array, then the tiles are moved to the correct position using a for loop and an array | . var Arrxcoord = [&quot;13&quot;, &quot;89&quot;, &quot;165&quot;, &quot;241&quot;, &quot;13&quot;, &quot;89&quot;, &quot;165&quot;, &quot;241&quot;, &quot;13&quot;, &quot;89&quot;, &quot;165&quot;, &quot;241&quot;, &quot;13&quot;, &quot;89&quot;, &quot;165&quot;, &quot;241&quot;]; var Arrycoord = [&quot;78&quot;, &quot;78&quot;, &quot;78&quot;, &quot;78&quot;, &quot;154&quot;, &quot;154&quot;, &quot;154&quot;, &quot;154&quot;, &quot;230&quot;, &quot;230&quot;, &quot;230&quot;, &quot;230&quot;, &quot;306&quot;, &quot;306&quot;, &quot;306&quot;, &quot;306&quot;]; var Arrbox = [&quot;box1&quot;, &quot;box2&quot;, &quot;box3&quot;, &quot;box4&quot;, &quot;box5&quot;, &quot;box6&quot;, &quot;box7&quot;, &quot;box8&quot;, &quot;box9&quot;, &quot;box10&quot;, &quot;box11&quot;, &quot;box12&quot;, &quot;box13&quot;, &quot;box14&quot;, &quot;box15&quot;, &quot;box16&quot;]; onEvent(&quot;logostartbutton&quot;, &quot;click&quot;, function( ) { setScreen(&quot;gamescreen&quot;); Arrnewsquare = shuffle(Arrsquare); for (var i = 0; i &lt; 16; i++) { hideElement(Arrnewsquare[i]); hideElement(&quot;win&quot;); setPosition(Arrnewsquare[i], Arrxcoord[i], Arrycoord[i], 60, 60); setProperty(Arrbox[i], &quot;background-color&quot;, &quot;#D7DADA&quot;); } }); . Each time the tile is clicked, it is tested to be the winner and then it changes the tile color to minimize confusion while playing | . function redundant(box){ showElement(Arrnewsquare[clicked]); numclick++; if(Arrnewsquare[clicked]==&quot;h1&quot;){ wintime(); } evenorodd = numclick%2; if (evenorodd == 0){ setProperty(box, &quot;background-color&quot;, &quot;#6BC9FF&quot;); } else if (evenorodd == 1){ setProperty(box, &quot;background-color&quot;, &quot;#F27A72&quot;); } } . When there is a winner, the program sees if the amount of clicks is even or odd to decide if player 1 or 2 wins | . function wintime(){ showElement(&quot;win&quot;); evenorodd = numclick%2; if (evenorodd == 0){ setProperty(&quot;win&quot;, &quot;text-color&quot;, &quot;#6BC9FF&quot;); setText(&quot;win&quot;, &quot;Player 2 Wins!!!&quot;); } else if (evenorodd == 1){ setProperty(&quot;win&quot;, &quot;text-color&quot;, &quot;#F27A72&quot;); setText(&quot;win&quot;, &quot;Player 1 Wins!!!&quot;); } } . Problems and Solutions . On the animal quiz, I couldn&#39;t type in rhinoceros or hippopotamus, so I added that the quiz would test both for hippo or hippopotamus and rhino or rhinoceros. | . if (getText(input).toLowerCase() == animal) { correct++; showElement(check); } else if (getText(input).toLowerCase() == animal2) { correct++; showElement(check); } . On both games, when I restarted the game, the previous results were still there, so I reset the game every time the screen was switched to the game screen. | . onEvent(&quot;start-button&quot;, &quot;click&quot;, function( ) { setScreen(&quot;q1&quot;); correct = 0; }); onEvent(&quot;logostartbutton&quot;, &quot;click&quot;, function( ) { setScreen(&quot;gamescreen&quot;); Arrnewsquare = shuffle(Arrsquare); for (var i = 0; i &lt; 16; i++) { hideElement(Arrnewsquare[i]); hideElement(&quot;win&quot;); setPosition(Arrnewsquare[i], Arrxcoord[i], Arrycoord[i], 60, 60); setProperty(Arrbox[i], &quot;background-color&quot;, &quot;#D7DADA&quot;); } }); . On the luck game, I couldn&#39;t figure out how to shuffle the position of the tiles, so I researched online on ways to shuffle an array and used this in my code. | . function shuffle(array) { var Arrbefore = array.length, Arrshuffle; while (Arrbefore != 0) { Arrshuffle = Math.floor(Math.random() * Arrbefore); Arrbefore--; var swap = array[Arrbefore]; array[Arrbefore] = array[Arrshuffle]; array[Arrshuffle] = swap; } return array; } . On the logo game, I couldn&#39;t make it announce the winner, so I debugged my code and realized that I needed to test after each click if the logo had been found. | . function wintime(){ showElement(&quot;win&quot;); evenorodd = numclick%2; if (evenorodd == 0){ setProperty(&quot;win&quot;, &quot;text-color&quot;, &quot;#6BC9FF&quot;); setText(&quot;win&quot;, &quot;Player 2 Wins!!!&quot;); } else if (evenorodd == 1){ setProperty(&quot;win&quot;, &quot;text-color&quot;, &quot;#F27A72&quot;); setText(&quot;win&quot;, &quot;Player 1 Wins!!!&quot;); } } function redundant(box){ showElement(Arrnewsquare[clicked]); numclick++; if(Arrnewsquare[clicked]==&quot;h1&quot;){ wintime(); } evenorodd = numclick%2; if (evenorodd == 0){ setProperty(box, &quot;background-color&quot;, &quot;#6BC9FF&quot;); } else if (evenorodd == 1){ setProperty(box, &quot;background-color&quot;, &quot;#F27A72&quot;); } } onEvent(&quot;box1&quot;, &quot;click&quot;, function( ) { clicked = 0; redundant(&quot;box1&quot;); }); . On the luck game, the user could press in a small portion of the tile and cause the tile to change color, so I edited the sizing and position of the tiles to eliminate the error. | . setPosition(Arrnewsquare[i], Arrxcoord[i], Arrycoord[i], 60, 60); . Create Performance Task skills and rubric . Program Purpose and Function . The Animal Quiz&#39;s purpose is to quiz the user on their knowledge of animals from photos. The function of the quiz is they press the animal button in the homepage, then press another button to start the quiz. They are then prompted to type in the name of the animal in a text input for 10 animals. For each correct answer a check is displayed and an x for every incorrect. At the end the user can view their score. At any point in the quiz, the user can click the back arrow and they can either return to the homepage, restart the quiz, or cancel the back arrow. . The Logo Game&#39;s purpose is to let the 2 users have a friendly contest. The function of the game is that they press the game in the homepage, then press start to begin the game. The users take turns picking tiles, each turning a different color for each player. Once a logo is found, the player who clicked it is announced as the winner and the users are given a chance to play again. At any point in the quiz, the user can hit a back arrow to return to the homepage, restart the game, or cancel. . Data Abstraction . I used a list for the x and y coordinates of the tiles. These tiles were then used to reposition the positions of the tiles in a randomized order to create a new game each time. The name of the variable in the code are Arrxcoord and Arrycoord. The data in these lists are the x and y coordinates of the tiles and where they should be placed. . Managing Complexity . I created a function called grade that would check if the answer given by the the user was correct in the Animal Quiz. It would take in a parameter of the text inputted, the correct answer, an alternate spelling, the screen&#39;s checkmark, the screen&#39;s x and the next question screen. With these, the function would compare the inputted text with the correct answer or alternate spelling. If it is correct, the function would display the screen&#39;s checkmark. If not, the function displays the screen&#39;s x. After a second passes, the function would switch to the next question. This minimizes the complexity of the program by condensing the multiple tests into one singular function. . Procedural Abstraction . Like how I managed complexity I made a function to grade the Animal Quiz responses. It would take in a parameter of the text inputted, the correct answer, an alternate spelling, the screen&#39;s checkmark, the screen&#39;s x and the next question screen. With these, the function would compare the inputted text with the correct answer or alternate spelling. If it is correct, the function would display the screen&#39;s checkmark. If not, the function displays the screen&#39;s x. After a second passes, the function would switch to the next question. . Algorithm Implementation . I used iteration in the for loop when shuffling the position of the tiles in the Logo Game The loop would run through an array and use the data of each element to position the tiles on the x and y coordinate plane. I had selection through my if and else statements. These would only run the code if the if and else statements&#39; requirements were met. I had sequencing in my AppLab by running code consecutively. When resetting the game screens and questions, the answers were erased and the colors were wiped and correct amount of answers were ran in a sequence. . Testing . I tested my quiz and game multiple times to make it as efficient and make it avoid as many errors as I could think of. I would let it so the variable that regarded score would always be reset so the score would not superscore. Also I would reshuffle the tiles in the Logo Game so the position of the winning tile would be different every time. .",
            "url": "https://kaiden-dough.github.io/fastpages/week3/2022/09/11/AppLab.html",
            "relUrl": "/week3/2022/09/11/AppLab.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post59": {
            "title": "Trying Out A Remote Theme",
            "content": "What Worked . I tried the remote theme, Merlot, on my website. . . For the most part many things still worked. The pages all opened and I could read basically everything on the page. My parallax effect still worked and the images also appeared. . What Didn’t Work . The things that didn’t work were the small details: formatting, pictures, and my home screen. . . . .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week2/2022/09/04/theme.html",
            "relUrl": "/markdown/week2/2022/09/04/theme.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post60": {
            "title": "Python Tech Talk",
            "content": "InfoDb Cell . In the below cell, I create and add to a dictionaries to a list. Then at the end, I prompt the user to input their own information to add to the list. Then the list is printed. . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) # Append a 3rd dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Kaiden&quot;, &quot;LastName&quot;: &quot;Do&quot;, &quot;DOB&quot;: &quot;September 10&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;kaidend@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Nissan Cube&quot;] }) # Append a 4th dictionary InfoDb.append({ &quot;FirstName&quot;: &quot;Samit&quot;, &quot;LastName&quot;: &quot;Poojary&quot;, &quot;DOB&quot;: &quot;February 24&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;samitp@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;Nissan Altima&quot;] }) import getpass, sys FirstName = input(&quot;Enter your first name: &quot;) LastName = input(&quot;Enter your last name: &quot;) DOB = input(&quot;Enter your date of birth: &quot;) Residence = input(&quot;Enter your city: &quot;) Email = input(&quot;Enter your email: &quot;) Owns_Cars = input(&quot;Enter your car or dream car: &quot;) # Append a 5th dictionary with inputted values InfoDb.append({ &quot;FirstName&quot;: FirstName, &quot;LastName&quot;: LastName, &quot;DOB&quot;: DOB, &quot;Residence&quot;: Residence, &quot;Email&quot;: Email, &quot;Owns_Cars&quot;: Owns_Cars }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}, {&#39;FirstName&#39;: &#39;Kaiden&#39;, &#39;LastName&#39;: &#39;Do&#39;, &#39;DOB&#39;: &#39;September 10&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;kaidend@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Nissan Cube&#39;]}, {&#39;FirstName&#39;: &#39;Samit&#39;, &#39;LastName&#39;: &#39;Poojary&#39;, &#39;DOB&#39;: &#39;February 24&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;samitp@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;Nissan Altima&#39;]}, {&#39;FirstName&#39;: &#39;Kaiden&#39;, &#39;LastName&#39;: &#39;Do&#39;, &#39;DOB&#39;: &#39;September 10&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;kaiden12345do@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;Nissan Cube&#39;}] . Fruits Database . This database is a list of fruits with 6 dictionary values. The 6 fruits are apple, orange, pineapple, pear, blueberry, and grape. Each of the dictionaries consists of keys/values for the fruits&#39; name, color, and size. . Fruits = [] # append apple dictionary Fruits.append({ &quot;Name&quot;: &quot;Apple&quot;, &quot;Color&quot;: &quot;Red&quot;, &quot;Size&quot;: &quot;Normal&quot; }) # append orange dictionary Fruits.append({ &quot;Name&quot;: &quot;Orange&quot;, &quot;Color&quot;: &quot;Orange&quot;, &quot;Size&quot;: &quot;Normal&quot; }) # append pineapple dictionary Fruits.append({ &quot;Name&quot;: &quot;Pineapple&quot;, &quot;Color&quot;: &quot;Yellow&quot;, &quot;Size&quot;: &quot;Large&quot; }) # append pear dictionary Fruits.append({ &quot;Name&quot;: &quot;Pear&quot;, &quot;Color&quot;: &quot;Green&quot;, &quot;Size&quot;: &quot;Normal&quot; }) # append blueberry dictionary Fruits.append({ &quot;Name&quot;: &quot;Blueberry&quot;, &quot;Color&quot;: &quot;Blue&quot;, &quot;Size&quot;: &quot;Small&quot; }) # append grape dictionary Fruits.append({ &quot;Name&quot;: &quot;Grape&quot;, &quot;Color&quot;: &quot;Purple&quot;, &quot;Size&quot;: &quot;Small&quot; }) # prints the whole list print(Fruits) . [{&#39;Name&#39;: &#39;Apple&#39;, &#39;Color&#39;: &#39;Red&#39;, &#39;Size&#39;: &#39;Normal&#39;}, {&#39;Name&#39;: &#39;Orange&#39;, &#39;Color&#39;: &#39;Orange&#39;, &#39;Size&#39;: &#39;Normal&#39;}, {&#39;Name&#39;: &#39;Pineapple&#39;, &#39;Color&#39;: &#39;Yellow&#39;, &#39;Size&#39;: &#39;Large&#39;}, {&#39;Name&#39;: &#39;Pear&#39;, &#39;Color&#39;: &#39;Green&#39;, &#39;Size&#39;: &#39;Normal&#39;}, {&#39;Name&#39;: &#39;Blueberry&#39;, &#39;Color&#39;: &#39;Blue&#39;, &#39;Size&#39;: &#39;Small&#39;}, {&#39;Name&#39;: &#39;Grape&#39;, &#39;Color&#39;: &#39;Purple&#39;, &#39;Size&#39;: &#39;Small&#39;}] . print_data Function . This function is used to format the outputs of fruits when printing the fruits using some sort of loop. . def print_data(d_rec): print(d_rec[&quot;Name&quot;]) print(&quot; t&quot;, &quot;Color: &quot;, d_rec[&quot;Color&quot;]) print(&quot; t&quot;, &quot;Size: &quot;, d_rec[&quot;Size&quot;]) print() . For Loop . This for loop prints the fruits and their details in order. . def for_loop(): print(&quot;For Loop n&quot;) for record in Fruits: # loops for everything in Fruits print_data(record) # calls the print formatter for_loop() # calls the function . For Loop Apple Color: Red Size: Normal Orange Color: Orange Size: Normal Pineapple Color: Yellow Size: Large Pear Color: Green Size: Normal Blueberry Color: Blue Size: Small Grape Color: Purple Size: Small . For Loop (reversed) . This for loop prints the fruits and their details in reverse order(from Grape to Apple). . def rev_for_loop(): print(&quot;For Loop with Reversed Outputs n&quot;) for record in reversed(Fruits): # reverses the list print_data(record) rev_for_loop() # calls the function . For Loop with Reversed Outputs Grape Color: Purple Size: Small Blueberry Color: Blue Size: Small Pear Color: Green Size: Normal Pineapple Color: Yellow Size: Large Orange Color: Orange Size: Normal Apple Color: Red Size: Normal . While Loop (shuffled) . This while loop prints the fruits that have been randomly shuffled. . import random shuffledFruits = random.sample(Fruits, len(Fruits)) # randomly shuffles the list def while_loop(): print(&quot;While Loop n&quot;) i = 0 while i &lt; len(shuffledFruits): # while i is less than the length of the list, it loops record = shuffledFruits[i] print_data(record) i += 1 # adds 1 to i each loop return while_loop() # calls the function . While Loop Blueberry Color: Blue Size: Small Orange Color: Orange Size: Normal Apple Color: Red Size: Normal Grape Color: Purple Size: Small Pear Color: Green Size: Normal Pineapple Color: Yellow Size: Large . Recursive Loop . This loop prints the fruits in order using a recursive loop. . def recursive_loop(x): # keeps on looping if x is there if x &lt; len(Fruits): # if x is less than the length of the list, it will do the following # if x is greater it will stop record = Fruits[x] print_data(record) recursive_loop(x + 1) # makes it loop again return # printing fruits in order using a recursive loop print(&quot;Recursive Loop n&quot;) recursive_loop(0) # calls the function . Recursive Loop Apple Color: Red Size: Normal Orange Color: Orange Size: Normal Pineapple Color: Yellow Size: Large Pear Color: Green Size: Normal Blueberry Color: Blue Size: Small Grape Color: Purple Size: Small . Quiz that Stores Responses . This quiz asks the user 6 questions and saves each response. At the end, the quiz outputs the user&#39;s fraction and percentage of questions correct. Then the test outputs the user&#39;s answers. . questions = 6 correct = 0 def question_and_answer(prompt, answer): # function that has the prompt and answer as parameters print(&quot;Question: &quot; + prompt) # displays the prompt msg = input() print(&quot;Answer: &quot; + msg) # displays the user&#39;s answer if answer == msg.lower(): # compares the user&#39;s answer to correct answer, no regard to case print(&quot;Correct Answer&quot;) # if correct, prints that it is correct global correct correct += 1 else: print (&quot;Incorrect Answer&quot;) # if not, prints that it is incorrect return msg # returns the user&#39;s answer # these add the user&#39;s answers to a list Q1 = question_and_answer(&quot;What is 2+2?&quot;, &quot;4&quot;) Q2 = question_and_answer(&quot;What is the capital of California?&quot;, &quot;sacramento&quot;) Q3 = question_and_answer(&quot;What continent is India in?&quot;, &quot;asia&quot;) Q4 = question_and_answer(&quot;When is Christmas?&quot;, &quot;december 25&quot;) Q5 = question_and_answer(&quot;What number is Aaron Donald?&quot;, &quot;99&quot;) Q6 = question_and_answer(&quot;What color is the sky&quot;, &quot;blue&quot;) print(correct, &quot;answers correct or&quot;, correct*100/questions,&quot;%&quot;) # calculates the user&#39;s score Quiz = { &quot;Q1&quot;: Q1, &quot;Q2&quot;: Q2, &quot;Q3&quot;: Q3, &quot;Q4&quot;: Q4, &quot;Q5&quot;: Q5, &quot;Q6&quot;: Q6 } print(&quot;Your answers:&quot;,Quiz) # prints the user&#39;s answers . Question: What is 2+2? Answer: 4 Correct Answer Question: What is the capital of California? Answer: SacramEnto Correct Answer Question: What continent is India in? Answer: ASIA Correct Answer Question: When is Christmas? Answer: december 25 Correct Answer Question: What number is Aaron Donald? Answer: 99 Correct Answer Question: What color is the sky Answer: Blue Correct Answer 6 answers correct or 100.0 % Your answers: {&#39;Q1&#39;: &#39;4&#39;, &#39;Q2&#39;: &#39;SacramEnto&#39;, &#39;Q3&#39;: &#39;ASIA&#39;, &#39;Q4&#39;: &#39;december 25&#39;, &#39;Q5&#39;: &#39;99&#39;, &#39;Q6&#39;: &#39;Blue&#39;} .",
            "url": "https://kaiden-dough.github.io/fastpages/python/week2/2022/09/04/python_lists.html",
            "relUrl": "/python/week2/2022/09/04/python_lists.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post61": {
            "title": "10 Insights from “Psychology and the Good Life”",
            "content": "&#8220;Psychology and the Good Life&#8221; by Laurie Santos . In this video, Laurie Santos talked about her class &quot;Psychology and the Good Life&quot;. Laurie Santos is a professor at Yale and she thought that instead of only teaching how human minds work, she needed to teach students how to implement the new knowledge to make their lives happier. So she made the class, &quot;Psychology and the Good Life&quot;, and in her talk she summed up the class with ten insights. . Insight #1: We can change our well-being . There is a common misconception that we are stuck in the current well-being we are in, but that is false. We are able to improve our happiness ourselves. From a study by Sonja Lyubomirsky, a psychologist, found that about 50% of our well-being is affected by our genes. This means that the other 50% can be affected by our own doing. . Insight #2: Material and temporary joy does not affect one&#39;s happiness in the long-term . When people want to get happier, they believe that they must get rid of the bad things in their life or get more money from their jobs. Though this does slightly affect one&#39;s well-being, it only affects at most 10% of it. Found in a study by Sonja Lyubomirsky, behaviors and willingness to change is what takes the most effect on one&#39;s well-being. . Insight #3: Bringing your self is the hardest part of changing your well-being . Taking control of your flow of life is the hardest part of becoming happy. Just learning about psychology won&#39;t help you become happy, you must put it into practice. For example to become fit, one must workout regularly and consistently to observe results. Same with your well-being, one must make a change that is consistently affecting your life for the better. . Insight #4: Realize that your intuition is lying to yourself about how to become happy . Your mind is not telling you what you need to become happy. To become happy, one must realize that their mind is not telling the truth. Your mind tells you that you need more material possessions to be happy, but this is false because one you get those items, you just want more. . Insight #5: Social connections are key for happiness . Nick Eppley and his colleagues at Chicago Business School conducted a study asking people on the subway to stay in a solitary state, a state where one must talk to another the whole ride, or do what ever they want. According to the study, the people who made social connections felt happier than before and those who were solitary felt worse. . Insight #6: Helping others can also improve happiness . Elizabeth Dunn and others from the University of British Columbia had a study where people were given 5 or 20 dollars and were given a change to treat themselves or someone else. At the end of the study, those who helped others out felt better and felt happier. The result also showed that the amount of money did not affect the helper&#39;s happiness because they felt happy to even help someone else. . Insight #7: Make time to be gratuitous everyday . Taking time to be thankful about something everyday can improve one&#39;s happiness. Just writing a small note about what you are grateful for can bump up your happiness and well-being. It keeps your mind on positivity instead of negativity and it is good for your well-being. . Insight #8: Improving physical heath can also improve mental health . Things like exercising and getting enough hours of sleep are not only good for your physical health but it is good for your mental health as well. Doing healthy practices does more than just good for your body but also your mind, well-being, and mood. . Insight #9: Be present in the moment . Taking time to realize what you are doing and focusing is important for your well-being. People tend to just go through the motions and rush through the day trying to get everything done, but taking a moment to really comprehend what is going on in your day can bump up your well-being. . Insight #10: Become wealthy with time . People who prioritize the amount of time they have are more happy than those who would sacrifice their time to get money. Taking a break from doing work is great for your well-being. . Gratitude Note . What I wrote to my friend Leo. . Leo you are a terrific person, you are very hard working both in school and in FTC. Also, you are a great friend because you help me when I need it. . Leo&#39;s response . I feel so thankful that you made this note just for me and I just want to say thank you for saying this note to me. - Leo Sun . Learning . Learning is a large part of a student&#39;s life. Almost every single class a student will take requires some proof that they learnt something. Some ways to help a student learn are by focusing on their work and practice good learning habits. Like in Laurie Santos&#39;s talk, we need to value our time. If we value our time we become rich in time and it lets us improve out mental well-being. We can value our time by doing many things. For example we can use our time effectively by focusing and finishing our work in a timely manner and not rushing it all last minute. Also, in adherence to Laurie Santos&#39;s talk we should take control and practice good habits. These good habits are like working hard when you are given a chance to relieve the stress of the workload. These things would not only help you proceed in your class but it would help you well-being because it would minimize the size of your homework at home. This would let you sleep earlier and improve your mental health. Another way to help students learn is by taking notes on important terms, ideas of vocab. . Gratitude List . My family | Access to good food | An opportunity to receive a good education | Access to internet and technology | Living in a nice neighborhood | . My Mental Health Goals . Do something I enjoy daily | Get 7-9 hours of sleep a day | Eat healthy with occasional treat | Exercise at least 3 times a week | Do something fun everyday | .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/2022/08/27/psychology.html",
            "relUrl": "/jupyter/2022/08/27/psychology.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post62": {
            "title": "My Personal Coding Journey",
            "content": "Scratch . As a young child I took a few Scratch classes that got my acquainted with programming. These classes taught me the basics of programming and it kind of sparked my interest for robotics and engineering. In these classes I found out about simple things like if loops to make a Scratch maze. . FLL . Later in my life I joined a FLL team. FLL or FIRST LEGO League is a robotics competition where teams would build a small robot that would complete tasks in order to earn points. We also had to program the robot using block code. The code I learned was how to create a line following robot or a robot that would detect its surroundings and execute an action. . FTC . In 8th grade I joined a FTC team. FTC or FIRST Tech Challenge is the larger version of FLL. This is a competition where teams would build a robot that is about 1.5ft by 1.5 ft large and they would code it run autonomously and with a controller. Teams would earn points from doing different actions in the game. During this time, I learned mostly about building robots and touched a little bit of coding the robot. . Youtube Java Tutorials . During the summer of 2022 I watched many YouTube tutorials to further my knowledge of code. I watched tutorials on Java and created a couple projects. I made a calculator that allows the user to add, subtract, multiply, or divide numbers until they want to stop and the program would print the total result. Also I began on a Blackjack program and I only made it so the player could play by themselves. . APCSP . Now I am in APCSP and I am learning how to use many new things. I am learning Python, how to use GitHub, how to code in Jupyter notebooks, and in Markdown. .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week1/2022/08/27/mycodingjourney.html",
            "relUrl": "/jupyter/week1/2022/08/27/mycodingjourney.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post63": {
            "title": "Bash Tool Installation Checks",
            "content": "Python Checks . python --version python2 --version . Python 3.9.12 Python 2.7.18 . Conda Packages . conda list . # packages in environment at /home/kaiden_do/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc 7.2.0 h69d50b8_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 6.11.2 h3db8ef7_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . Jupyter Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.4.0 ipykernel : 6.15.1 ipywidgets : not installed jupyter_client : 7.3.4 jupyter_core : 4.11.1 jupyter_server : not installed jupyterlab : not installed nbclient : not installed nbconvert : not installed nbformat : not installed notebook : not installed qtconsole : not installed traitlets : 5.3.0 Available kernels: bash /home/kaiden_do/.local/share/jupyter/kernels/bash javascript /home/kaiden_do/.local/share/jupyter/kernels/javascript python3 /home/kaiden_do/.local/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3 /home/kaiden_do/.local/share/jupyter/kernels/python3 .",
            "url": "https://kaiden-dough.github.io/fastpages/week1/2022/08/27/bashtoolcheck.html",
            "relUrl": "/week1/2022/08/27/bashtoolcheck.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post64": {
            "title": "Python Quiz and Hacks",
            "content": "My Quiz . This quiz defines two functions for asking questions and receiving an answer. The quiz has 7 questions. Each question asked is compared to a correct answer and if they are equal (with no regard to case) then the quiz tells the user. If not, then the quiz tells the user that the answer is wrong. The program stores each correct answer and tells the user the percentage of correct answers at the end of the quiz. . import getpass, sys # imports functions and libraries def question_and_answer(prompt): # defines the question_and_answer function print(&quot;Question: &quot; + prompt) # asks the user a question msg = input() # takes the user&#39;s input print(&quot;Answer: &quot; + msg) # prints the answer and the user&#39;s input def question_with_response(prompt): # defines the question_with_response function print(&quot;Question: &quot; + prompt) # asks the user a question msg = input() # takes the user&#39;s input return msg # the function returns the user&#39;s response as a string value questions = 7 # number of questions in the quiz correct = 0 # amount correct in the beginning of the quiz print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # greets the user print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) # tells the user how many questions are in the quiz question_and_answer(&quot;Are you ready to take a test?&quot;) # prompts the user to start the quiz rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;import&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;if&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;expression&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What does &#39;def&#39; do in Python in relation to a function: It _______ the function?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;defines&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What does the function take as a parameter?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;prompt&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;Can static text change?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;no&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect rsp = question_with_response(&quot;What is the first thing that beginner programmers usually print?&quot;) # asks question and stores the user&#39;s response if rsp.lower() == &quot;hello world&quot;: # compares the user&#39;s response to the answer without regard to the case print(rsp + &quot; is correct!&quot;) # shows that it is correct correct += 1 # one more correct answer else: # if not correct print(rsp + &quot; is incorrect!&quot;) # shows that it is incorrect print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)+&quot; or &quot;+str((correct/questions)*100)+&quot;%&quot;) # tells the user how many questions they got correct out of the total questions and their score . Hello, kaiden_do running /bin/python3 You will be asked 7 questions. Question: Are you ready to take a test? Answer: yes Question: What command is used to include other functions that were previously developed? import is correct! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! Question: What does &#39;def&#39; do in Python in relation to a function: It _______ the function? defines is correct! Question: What does the function take as a parameter? prompt is correct! Question: Can static text change? no is correct! Question: What is the first thing that beginner programmers usually print? hello world is correct! kaiden_do you scored 7/7 or 100.0% .",
            "url": "https://kaiden-dough.github.io/fastpages/python/week1/2022/08/26/Python-Hacks.html",
            "relUrl": "/python/week1/2022/08/26/Python-Hacks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post65": {
            "title": "My Class and Goals",
            "content": "Trimester 1 . AP Physics Mechanics - Period 1 . This course will bring students to have a strong understanding of Newtonian mechanics and be well versed in performing and analyzing laboratory experiments. . In this class, I plan to achieve A&#39;s all trimesters and attempt to get a 5 on the AP exam. Also, I want to learn more about physics. . United States History - Period 2 . In this course, students will complete a survey of United States History from the writing of the Constitution through the Great Depression. . In this class, I desire A&#39;s in the two trimesters I take it. I also want to learn more about the history of the United States. . AP Computer Science Principles - Period 3 . The goals I have for APCSP is to increase my ability and knowledge about computer science. I also want to get A&#39;s and a 5 in the AP exam. . AP Calculus BC - Period 4 . In this class, students will create deeper connections with algebra, geometry, functions, and technology. Also, students will build upon their previous knowledge of calculus. . The goals I have for this class is to get a 5 on the AP exam and to get all A&#39;s. I also want to increase my knowledge in mathematics. . AP English Language - Period 5 . In this class, students will focus on the study of rhetoric, the art of effective communication. Students will have numerous opportunities to analyze the strategies of accomplished writers so that they can improve their own abilities to communicate effectively. . In this class, I want to increase my ability to write effectively and get all A&#39;s and a 5 on the AP exam. . Trimester 2 . TBD . Trimester 3 . TBD .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week1/2022/08/25/myclassesandgoals.html",
            "relUrl": "/jupyter/week1/2022/08/25/myclassesandgoals.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post66": {
            "title": "Del Norte High School",
            "content": "Del Norte High School . . Location . 16601 Nighthawk Ln, San Diego, CA 92127 . Description . Del Norte High School is a public high school in San Diego. It primarily serves the 4S Ranch and Del Sur communities of San Diego, California. It is a part of the Poway Unified School District and was established in 2008. . Academics . Del Norte High School offers a range of classes: classes for college requirements, many electives, and rigorous AP classes. . Athletics . The Nighthawks has many sports for students to play. A few are track and field, football, basketball, soccer, volleyball, tennis, swimming, and lacrosse. . Clubs . Del Norte also offers many clubs for students to join or to create. For example there is the Del Norte FRC robotics team, Team Optix. Also another club is Key Club, where club members volunteer in community service opportunities. .",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week1/2022/08/25/delnortehighschool.html",
            "relUrl": "/markdown/week1/2022/08/25/delnortehighschool.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post67": {
            "title": "Apel Syllabus",
            "content": "Mrs. Darcey Hall Room G115 Email: mdarceyhall@powayusd.com . I. General Description . With an emphasis on critical reading and persuasive writing, AP Language allows students to experience the rigor of a college-level course while still in high school. Specifically, the class focuses on the study of rhetoric, the art of effective communication. Students will have numerous opportunities to analyze the strategies of accomplished writers so that they can improve their own abilities to communicate effectively. Additionally, the course sets students up to earn college credit. College credit may be granted based upon earning a passing score on College Board’s AP English Language exam in May, and all students are expected to take this exam. Like college preparatory courses at the high school level, this class will also emphasize the refinement of reading and writing skills. . A. Composition . According to The College Board, the non-profit organization that nationally organizes advanced placement courses, AP Language aims to “engage students in becoming skilled writers who compose for a variety of purposes.” Additionally, The College Board intends that the course “makes students aware of the interactions among a writer’s purposes, audience expectations, and subjects as well as the way generic conventions and the resources of language contribute to effectiveness in writing.” AP Language students will develop an understanding of writing as a process, and students will be asked to write numerous timed in-class and polished essays. Since this is a composition course, students should expect to and be prepared to write either type of these essays every 14-21 days. Essentially, this course will refine a student’s ability to write using effective diction, controlling tone, illustrative detail, logical organization, and a variety of sentence structures. . B. Critical Reading . Since there is an inherent connection between reading and writing, this AP course will also develop the student’s ability to read critically and analyze fine nuances of meanings. The College Board proposes that students become “skilled readers of prose written in a variety of periods, disciplines, and rhetorical contexts.” Furthermore, students are expected to read “a wide variety of prose styles from many disciplines and historical time periods to gain understanding of the connections between interpretative skill in reading and writing.” Additionally, students will have the opportunity to select their own reading materials; this can include novels, nonfiction books, or news magazines. . II. Course Assignments, Materials and Communication . Students are expected to take notes on all course lectures and class discussions; often these notes will take the form of handouts provided by the teacher. Course assignments will include, but are not limited to: the reading of novels, essays and other prose; reading quizzes; close reading questions; practice AP exams; activities from AP Classroom; vocabulary development; individual and group projects; writing essays; peer review activities; conducting research; sentence building activities; independent reading; and posting to class discussion boards. Additionally, students should expect to complete a research paper that spans the trimesters. . Students are also expected to keep a class notebook. On an almost daily basis, students will complete work in this notebook. This way, students always have their course notes and work to review before assessments, major assignments and in class essays. Students should value the work they add to their notebooks; it represents their commitment to the learning process. Additionally, this work will comprise a good majority of the class work/homework grading category. . Canvas will be the main learning platform. From the home page, students can find announcements and reminders, a commonly asked questions Discussion Board, and, most importantly, weekly learning modules. From my Canvas homepage, students can find a link to access these modules under Weekly Agendas. Additionally, there will be a page for each day of the school week that includes all the links, materials and resources for the day’s lesson. . Email will always be the best way to contact the teacher. If a student has a general question about an assignment or lesson, they can post it to the APEL Questions Discussion Board. This board will always be at the top of the Discussion Board page and should be used for questions and answers that benefit the whole class. Often, multiple students have the same question, and this allows the teacher to provide answers that are accessible to everyone. . # . III. Classroom Policies . A. Submitting Work . Please treat deadlines with the utmost seriousness. A missed deadline often means that a student will not be prepared for the next step in a series of lessons. It is very important that students note the specific due date and time for each assignment. These due dates and times will always be clearly noted and communicated. In general, all work done outside the classroom must be typed and follow all MLA guidelines. . Submitting writing assignments will also include submitting to www.turnitin.com. Turnitin.com is a program that protects against plagiarism. All assignments should reflect each student’s own work; students should not collaborate on assignments unless specific instructions are otherwise given. It is very important that every student personally study PUSD’s academic honesty policy. This policy is also fully covered in the DNHS student handbook. The expectation is that students understand this policy because it will be strictly enforced! If a student EVER has a question about what is acceptable or unacceptable, they should always ask. . B. Hate Behavior and Trigger Warning . Every student has the right to feel safe and valued on our campus and in the AP English Language Classroom. We are striving to actively stand against racism of any kind and to be accepting of those regardless of their race, ethnicity, gender identity, sexual orientation, and religious affiliation. This classroom, and our school, is a place where insensitive and prejudiced behavior will not be tolerated. The PUSD/DNHS discipline policy in regard to hate/racist behavior is linked here. To learn more about Del Norte’s commitment to equity and inclusion and to find a form for reporting anything that violates this commitment, please visit this site. . Additionally, as a humanities course, the course may broach topics of a sensitive nature. Our classroom provides an open space for the critical and civil exchange of ideas. Diverse viewpoints are welcome. Some readings and other content may include sensitive language or topics that some students may find uncomfortable. If a student has a specific area of concern or sensitivity, they should alert the teacher as soon as possible. We ask all students to help create an atmosphere of mutual respect and sensitivity. Again, please know that our intentions are always to create a safe place for students to grapple with complex and multifaceted issues. . C. Late and Make-up Work . Students will receive at least 48 hours, often more, notice prior to a deadline or due date, so students are expected to submit all work on time. Absences do not create extensions. However, if a student ever finds a due date is impossible to meet, please contact the teacher to request a possible extension. We understand that students all have busy lives and demanding academic schedules. We respect this; nevertheless, we do expect students to take initiative to request a possible extension if they ever need one. A request must be submitted at least 24 hours prior to the deadline. Remember, this is a college level course, and students must be responsible for managing their work. Requests for extensions will be tracked, and if a student habitually makes this request, a parent/student/teacher conference may occur to help find a solution. Additionally, each student is allowed one amnesty pass for the yearlong course. Choosing to use the amnesty pass means that a student can submit an assignment the next day that follows the original due date (even if this falls on a non-school day). Students may use their pass on any assignment, but records will be kept, so please remember that this is a one time pass for the entire school year. Late work should not be an issue because students have other options. If a student is irresponsible, there will be consequences and penalties. Please problem solve and find a way to get work to the teacher on time. Remember: communication with the teacher is key to a student’s success. Any tests missed due to an excused absence should be made up within one week of the absence unless specific accommodations have been made. . We will take attendance daily. If a student is absent, they are still responsible for the day’s learning. Absent students should consult the daily agenda from the weekly learning module and review all the posted instructional materials. Please make every effort to attend class when an on demand essay is scheduled. If a student has an excused absence, the student will write the essay during the next class session they attend. . Please make sure that you check your Canvas inbox on a daily basis. Students can access this inbox from the gray toolbar on the left side of Canvas/MyConnect. Sometimes, the teacher might have a specific message for a student, and this will be the best form of contact. We expect students to check this inbox every school day. . D. Grading . Assignments are weighted by their purpose. Work designed to introduce or practice skills, that is work designed to help you form and master course skills (formative work) is worth 25% of your final grade. Summative work, work like tests and essays that are designed to measure your learning progress, is worth the remaining 75% (60% for essays and 15% for tests). . Grades will be based on the following scale: . 100-90%=A; 89-80%=B; 79-70%=C; 69-60%=D . Grades can be accessed through Synergy and Canvas. Please note that the English department’s grading policies do not allow for grade rounding; exceptions will not be made. Please note that the Synergy gradebook is the accurate record. Students can see grades in Canvas, but they might not always configure to meet the class weighting and expectations listed above. Final grades will be based on Synergy’s record, NOT the Canvas gradebook. . E. Expectations and Routine Procedures . In addition to the expectations and procedures explained above, students are expected to: . Take responsibility for learning. . | Treat everyone with respect–all aspects of the PUSD’s Hate/Racist Behavior Policy will be enforced. . | Turn in all work on time . | Be prepared everyday with the required materials and attitude . | Have academic honesty . | Attend tutorial when asked or as the student feels necessary . | . F. Citizenship . Citizenship in this class calls for the highest possible standards of respect for yourself, others, property and the learning process. All school and district policies, including the academic honesty policy, will be strictly enforced. Earning an “O” in citizenship will require you to go beyond being on time and undisruptive. Students earning an “O” in citizenship positively contribute to the learning environment by being generous, supportive, respectful, helpful and active participants in our learning community. Requests for college letters of recommendation from students who do not earn an “O” in citizenship on final trimester report cards will be denied. . I commend you for accepting the challenge of an AP course. I look forward to a rewarding, educational and fun year! .",
            "url": "https://kaiden-dough.github.io/fastpages/2022/08/25/APEL-syllabus.html",
            "relUrl": "/2022/08/25/APEL-syllabus.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post68": {
            "title": "Kaiden's Markdown Post",
            "content": "HELLO . My first Markdown Post on my FastPages site. . I am Kaiden Do. I am a junior at Del Norte High School. Follow my GitHub 1 . Things I Like . Fruits Animals . Mangos | Turtles | . Oranges | Bears | . . Code Things . print(&quot;I am:&quot;) age = 15 print(age) . That is all :) . Penguin . . Footnote . My GitHub page. &#8617; . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/week0/2022/08/21/myfirstmarkdownpost.html",
            "relUrl": "/markdown/week0/2022/08/21/myfirstmarkdownpost.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post69": {
            "title": "First Jupyter Notebook Post",
            "content": "Code Notebook . Some Python code: . print(&quot;Hello&quot;) . Hello . for i in range (3): print(&quot;HEY!&quot;, end = &#39; &#39;) for i in range (3): print(&quot;CODE!&quot;, end = &#39; &#39;) . HEY! HEY! HEY! CODE! CODE! CODE! .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/week0/2022/08/21/firstjupyternotebook.html",
            "relUrl": "/jupyter/week0/2022/08/21/firstjupyternotebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post70": {
            "title": "Fetch of Backend Jokes",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . Joke HaHa Boohoo .",
            "url": "https://kaiden-dough.github.io/fastpages/data/jokes",
            "relUrl": "/data/jokes",
            "date": " • Jul 10, 2022"
        }
        
    
  
    
        ,"post71": {
            "title": "Binary Math",
            "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | . Binary Math with Conversions . Plus Binary (prevents the user from inputting a more than 8 bits) Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | Turn on | . | | | | | | | | . COLORS Plus Binary (prevents the user from inputting a more than 8 bits) Decimal Minus . +1 | 00000000 | 0 | -1 | . +1 | 00000000 | 0 | -1 | . +1 | 00000000 | 0 | -1 | .",
            "url": "https://kaiden-dough.github.io/fastpages/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post72": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kaiden-dough.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post73": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kaiden-dough.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Notes for APCSP",
          "content": "Notes and Terms and Ideas . import: includes other functions that were previously developed | if: evaluates if something meets a requirement | expression: the condtion that must be met in the if statment | def in Python: defines a function | prompt: what the function takes as a parameter | static: something that does not change | REMEMBER to Code/Code/Code | input: things given to the computer | output: what the computer returns | sequence: lines of code together | key: value (Example – name: Kaiden) | … | . Terminal Commands . cd: change directory | pwd: print working directory | ls: list directory | mkdir: make directory | .",
          "url": "https://kaiden-dough.github.io/fastpages/_pages/02_notes.html",
          "relUrl": "/_pages/02_notes.html",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "About Me",
          "content": "I am Kaiden Do and I am a junior in Del Norte High School. Follow me on GitHub: kaiden-dough 1. . Me as a minion Footnote . My GitHub profile. &#8617; . |",
          "url": "https://kaiden-dough.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Class Weeks",
          "content": "Weekly Progress . . Weekly Log by Kaiden Do . Week What I Did . To Be Continued ... . 16 Unit 3 Notes | Lesson 3.12 &amp; 3.13 | Unit 3.14-15 Hacks | Unit 3.16 Hacks | Unit 3.17-18 Hacks | | | | | . 15 Unit 3.8 &amp; 3.10 Hacks | Unit 3.9 &amp; 3.11 Hacks | Unit 3 Notes | | | | | | | . 14 Unit 3 Notes | Unit 3.1 &amp; 3.2 Hacks | Unit 3.3 &amp; 3.4 Hacks | Unit 3.5 - 3.7 Hacks | Truth Table | Fibonacci Series | Palindrome Maker | | | . 13 Tools and Issue Verification | Binary Hacks | Extra Binary Hacks | My Lesson Hack Plan | Team Lesson Plan | | | | | . 12 Trimester 1 Final Reflection | Night At The Museum Reflection | Class Weeks Table | | | | | | | . 11 Lawnmowers Arcade Fastpages | Backend API | Fastpages Repo | Flask Repo | Scrumboard | N@tM Blog | Trimester 1 Final Reflection | | | . 10 Team Scrumboard | Blackjack Game Prototype | Commit History | | | | | | | . 9 Frontend of Jokes API | Backend of Jokes API | Frontend of True False API | Backend of True False API | Team Project Video | | | | | . 8 Frontend of Jokes API | Backend of Jokes API | Frontend of True False API | Backend of True False API | 4.1 Internet Connections | Group Plan | | | | . 7 Changes to Error Testing Code | College Board Notes and Quiz | Airline API | Group Plan | | | | | | . 6 Unit 1 Grades | AWS Deployment | My website | Group Flask | Group Plan | | | | | . 5 Personal JavaScript | HTML JavaScript Table | Program Purpose | Program Purpose Visual | | | | | | . 4 Collaboration (Unit 1.1) | Psychology and the Good Life | Local Fastpages Server (only on my computer) | Flask Python Server (only on my computer) | | | | | | . 3 AppLab App | AppLab Write Up | Creative Performance Task Brainstorm | | | | | | | . 2 Python Tech Talk | Class Weeks | Theme and Dark Mode Exploration | | | | | | | . 1 Notes for APCSP | My Class and Goals | Personal Coding Journey | Bash Tool Checks | Python Quiz | APEL Syllabus | DNHS Info | Class Weeks | Homepage Customization | . 0 About Me | Markdown Post | Jupyter Notebook | | | | | | | . .",
          "url": "https://kaiden-dough.github.io/fastpages/_pages/04_class-weeks.html",
          "relUrl": "/_pages/04_class-weeks.html",
          "date": ""
      }
      
  

  
      ,"page5": {
          "title": "Submenu",
          "content": "| JavaScript | Table | Airline API | Jokes API | True/False API | Binary Lights | Binary Calculator | .",
          "url": "https://kaiden-dough.github.io/fastpages/_pages/05_submenu.html",
          "relUrl": "/_pages/05_submenu.html",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kaiden-dough.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}